{"version":3,"sources":["components/LandingNav.js","components/Footer.js","screens/LandingPage.js","components/Message.js","useForm.js","actions/user.js","actions/users.js","screens/LoginPage.js","screens/RegisterPage.js","actions/Email.js","screens/ContactUsPage.js","actions/message.js","actions/messages.js","components/BuyerChat.js","components/BuyerNav.js","screens/BuyerChatScreen.js","components/AdminNav.js","screens/AdminLandingPage.js","components/BuyerForm.js","components/Popup.js","screens/AdminBuyersList.js","components/SellerForm.js","screens/AdminSellersList.js","components/AdminForm.js","components/AdminRegister.js","screens/AdminAdminsList.js","actions/gig.js","actions/gigs.js","components/AssignSellerForm.js","screens/AdminOrdersList.js","screens/AdminProfile.js","screens/AdminRegister.js","components/BuyerGigForm.js","screens/BuyerLandingPage.js","components/GigForm.js","components/BuyerRating.js","components/BuyerGigList.js","screens/BuyerOrdersList.js","screens/BuyerToSeller.js","screens/BuyerProfile.js","screens/BuyerPayment.js","screens/BuyerContactUs.js","components/SellerNav.js","screens/SellerLandingPage.js","screens/SellerProfile.js","components/SellerGigForm.js","components/Rating.js","components/SellerGigList.js","screens/SellerOrderList.js","screens/SellerContactUs.js","components/SellerChat.js","screens/SellerChatScreen.js","reducers/users.js","reducers/messages.js","reducers/gigs.js","reducers/index.js","store.js","App.js","index.js"],"names":["Navigationbar","className","to","src","Footer","alt","href","target","aria-label","rel","Landing","LandingNav","Message","variant","children","Alert","defaultProps","useForm","initialFieldValues","validate","setCurrentId","setOpenPopup","useState","values","setValues","errors","setErrors","handleInputChange","e","name","value","fieldValue","resetForm","url","baseUrl","fetchAll","axios","get","fetchById","id","create","newRecord","post","update","updatedRecord","put","delete","ACTION_TYPES","formateData","data","age","parseInt","dispatch","api","then","response","console","log","type","payload","catch","error","onSuccess","res","err","Delete","firstName","lastName","address","userType","category","email","password","mapActionToProps","createUser","actions","updateUser","fetchAllUsers","connect","state","userList","users","list","withStyles","theme","root","margin","spacing","minWidth","formControl","smMargin","classes","props","addToast","useToasts","history","useHistory","setError","fieldValues","temp","test","Object","every","x","useEffect","currentId","find","userId","Container","component","maxWidth","autoComplete","noValidate","onSubmit","preventDefault","appearance","push","pathname","Grid","container","item","xs","TextField","label","onChange","helperText","Button","style","color","setRole","Email","subject","body","signature","templateParams","emailjs","send","message","useStyles","makeStyles","paper","marginTop","display","flexDirection","alignItems","avatar","backgroundColor","palette","secondary","main","form","width","submit","ContactUs","formData","setFromData","a","sendEmail","CssBaseline","required","fullWidth","placeholder","minLength","multiline","calls","messageID","from","text","sentAt","Date","createMessage","updateMessage","fetchAllMessages","messageList","messages","senderId","recieverId","messageId","setSenderId","setRecieverId","buyerId","deleteMessage","fontSize","padding","location","BuyerNav","Paper","elevation","direction","justify","dataLength","height","TableContainer","Table","TableHead","TableRow","TableBody","map","record","index","hover","TableCell","ButtonGroup","onClick","window","confirm","adminId","deleteUserr","card","transitionDuration","raised","AdminNav","Card","CardActionArea","CardMedia","image","title","CardContent","Typography","gutterBottom","CardActions","dialogWrapper","position","top","dialogTitle","paddingRight","Popup","openPopup","Dialog","open","DialogTitle","flexGrow","DialogContent","dividers","deleteUser","BuyerForm","inputLabel","React","useRef","labelWidth","setLabelWidth","current","offsetWidth","FormControl","InputLabel","ref","Select","MenuItem","FormHelperText","SellerForm","startDate","toISOString","deadline","buyerRating","sellerRating","description","sellerId","delivered","price","createGig","updateGig","gigList","gigs","gigId","fetchAllGigs","deleteGig","IconButton","marginRight","AssignSellerForm","profileId","AdminRegister","setBuyer","defaultValue","Order","setUserId","openGigForm","size","BuyerGigForm","setOpenRating","openRating","sellerID","GigForm","BuyerRating","Orderpage","BuyerGigList","SignUp","Avatar","sm","autoFocus","FormControlLabel","control","Checkbox","Link","SellerNav","setDelivered","Rating","SellerGigForm","SellerOrderpage","SellerGigList","initialState","combineReducers","action","filter","middleware","thunk","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","App","autoDismiss","exact","path","LandingPage","LoginPage","RegisterPage","ContactUsPage","AdminPage","OrderPage","SellerDashboard","Buyers","Sellers","Admins","AdminOrders","AdminProfile","YourOrdersBuyer","Seller","BuyerProfile","BuyerChat","Payment","SellerProfile","YourOrdersSeller","BuyerContactUs","SellerContactUs","SellerChat","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9c263dde.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Navigationbar = () => {\r\n  var islogged = false;\r\n\r\n  return (\r\n    <nav className=\"navbar \">\r\n      <h1>\r\n        <Link to=\"/\">\r\n          {/* <i class=\"fas fa-comments-dollar\"></i> JobForMe */}\r\n          <img\r\n            className=\"photo\"\r\n            src=\"https://dewey.tailorbrands.com/production/brand_version_mockup_image/765/4683342765_f43e76b4-4d93-4f52-b0e7-cc99ad1bf015.png?cb=1613721941\"\r\n          />\r\n        </Link>\r\n      </h1>\r\n      <ul>\r\n        {/* <li>\r\n          <a href=\"/admin\">Admin Panel</a>\r\n        </li>\r\n        <li>\r\n          <a href=\"/order\">Order a Service</a>\r\n        </li> */}\r\n        {/* <li>\r\n          <a href=\"/seller\">Become a Seller</a>\r\n        </li> */}\r\n        <li>\r\n          <Link to=\"/register\">Register</Link>\r\n        </li>\r\n        <li>\r\n          <Link to=\"/login\">Login</Link>\r\n        </li>\r\n        <li>\r\n          <Link to=\"/contact\">Contact Us</Link>\r\n        </li>\r\n        {islogged && (\r\n          <li>\r\n            <Link to=\"/login\">Profile</Link>\r\n          </li>\r\n        )}\r\n      </ul>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Navigationbar;\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nfunction Footer() {\r\n  return (\r\n    <div className='footer-container'>\r\n      <section className='footer-subscription'>\r\n        <p className='footer-subscription-heading'>\r\n          JobForMe! For free! Earn Free!\r\n        </p>\r\n        <p className='footer-subscription-text'>\r\n          Reliable delivery while protecting your privacy!\r\n        </p>\r\n      </section>\r\n      <section className='social-media'>\r\n        <div className='social-media-wrap'>\r\n          <div className='footer-logo'>\r\n            <Link to='/' className='social-logo'>\r\n              {/* JobForMe\r\n              <i class=\"fas fa-paper-plane\" /> */}\r\n              <img\r\n                className='landinglogo'\r\n                src='https://dewey.tailorbrands.com/production/brand_version_mockup_image/765/4683342765_f43e76b4-4d93-4f52-b0e7-cc99ad1bf015.png?cb=1613721941'\r\n                alt='jobforme'\r\n              />\r\n            </Link>\r\n          </div>\r\n          <small className='website-rights'>JobForMe © 2021</small>\r\n          <div className='social-icons'>\r\n            <a\r\n              href='https://www.facebook.com/'\r\n              className='social-icon-link '\r\n              target='_blank'\r\n              aria-label='Facebook'\r\n              rel='nonreferrer'\r\n            >\r\n              <i className='fab fa-facebook-f' />\r\n            </a>\r\n            <a\r\n              href=' https://www.instagram.com/accounts/login/'\r\n              className='social-icon-link instagram'\r\n              to='/'\r\n              target='_blank'\r\n              aria-label='Instagram'\r\n              rel='nonreferrer'\r\n            >\r\n              <i className='fab fa-instagram' />\r\n            </a>\r\n            <a\r\n              href='https://www.youtube.com/'\r\n              className='social-icon-link youtube'\r\n              target='_blank'\r\n              aria-label='Youtube'\r\n              rel='nonreferrer'\r\n            >\r\n              <i className='fab fa-youtube' />\r\n            </a>\r\n            <a\r\n              href='https://twitter.com/login?lang=en/'\r\n              className='social-icon-link twitter'\r\n              to='/'\r\n              target='_blank'\r\n              aria-label='Twitter'\r\n              rel='nonreferrer'\r\n            >\r\n              <i className='fab fa-twitter' />\r\n            </a>\r\n          </div>\r\n        </div>\r\n      </section>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Footer\r\n","import React, { Fragment } from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport LandingNav from '../components/LandingNav'\r\nimport Footer from '../components/Footer'\r\n\r\nconst Landing = () => {\r\n  return (\r\n    <Fragment>\r\n      <LandingNav />\r\n\r\n      <section className='landing'>\r\n        <div className='dark-overlay'>\r\n          <div className='landing-inner'>\r\n            <h1 className='x-large'>\r\n              <img\r\n                className='landinglogo'\r\n                src='https://dewey.tailorbrands.com/production/brand_version_mockup_image/765/4683342765_f43e76b4-4d93-4f52-b0e7-cc99ad1bf015.png?cb=1613721941'\r\n                alt='jobforme'\r\n              />\r\n            </h1>\r\n            <p className='lead'>Freelancing opportunity to all of you!</p>\r\n            <div className='buttons'>\r\n              <Link to='/register' className='btn btn-primary'>\r\n                Sign Up\r\n              </Link>\r\n              <Link to='/login' className='btn btn-primary'>\r\n                Login\r\n              </Link>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </section>\r\n\r\n      <Footer />\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default Landing\r\n","import React from 'react'\r\nimport { Alert } from 'react-bootstrap'\r\n\r\nconst Message = ({ variant, children }) => {\r\n  return <Alert variant={variant}>{children}</Alert>\r\n}\r\n\r\nMessage.defaultProps = {\r\n  variant: 'info',\r\n}\r\n\r\nexport default Message\r\n","import React, { useState, useEffect } from 'react'\r\n\r\nconst useForm = (initialFieldValues, validate, setCurrentId, setOpenPopup) => {\r\n  const [values, setValues] = useState(initialFieldValues)\r\n  const [errors, setErrors] = useState({})\r\n\r\n  const handleInputChange = (e) => {\r\n    const { name, value } = e.target\r\n    const fieldValue = { [name]: value }\r\n    setValues({\r\n      ...values,\r\n      ...fieldValue,\r\n    })\r\n    validate(fieldValue)\r\n  }\r\n\r\n  const resetForm = () => {\r\n    setValues({\r\n      ...initialFieldValues,\r\n    })\r\n    setErrors({})\r\n    setCurrentId(0)\r\n    setOpenPopup(false)\r\n  }\r\n\r\n  return {\r\n    values,\r\n    setValues,\r\n    errors,\r\n    setErrors,\r\n    handleInputChange,\r\n    resetForm,\r\n  }\r\n}\r\n\r\nexport default useForm\r\n","import axios from 'axios'\r\n\r\nconst baseUrl = process.env.REACT_APP_API_URL\r\n\r\nexport default {\r\n  users(url = baseUrl + '/user/') {\r\n    return {\r\n      fetchAll: () => axios.get(url),\r\n      fetchById: (id) => axios.get(url + id),\r\n      create: (newRecord) => axios.post(url, newRecord),\r\n      update: (id, updatedRecord) => axios.put(url + id, updatedRecord),\r\n      delete: (id) => axios.delete(url + id),\r\n    }\r\n  },\r\n}\r\n","import api from './user'\r\n\r\nexport const ACTION_TYPES = {\r\n  CREATE: 'CREATE',\r\n  UPDATE: 'UPDATE',\r\n  DELETE: 'DELETE',\r\n  FETCH_ALL: 'FETCH_ALL',\r\n}\r\n\r\nconst formateData = (data) => ({\r\n  ...data,\r\n  age: parseInt(data.age ? data.age : 0),\r\n})\r\n\r\nexport const fetchAll = () => (dispatch) => {\r\n  api\r\n    .users()\r\n    .fetchAll()\r\n    .then((response) => {\r\n      console.log(response)\r\n      dispatch({\r\n        type: ACTION_TYPES.FETCH_ALL,\r\n        payload: response.data,\r\n      })\r\n    })\r\n    .catch((error) => console.log(error))\r\n}\r\n\r\nexport const create = (data, onSuccess) => (dispatch) => {\r\n  data = formateData(data)\r\n  api\r\n    .users()\r\n    .create(data)\r\n    .then((res) => {\r\n      dispatch({\r\n        type: ACTION_TYPES.CREATE,\r\n        payload: res.data,\r\n      })\r\n      onSuccess()\r\n    })\r\n    .catch((err) => console.log(err))\r\n}\r\n\r\nexport const update = (id, data, onSuccess) => (dispatch) => {\r\n  data = formateData(data)\r\n  api\r\n    .users()\r\n    .update(id, data)\r\n    .then((res) => {\r\n      dispatch({\r\n        type: ACTION_TYPES.UPDATE,\r\n        payload: { id, ...data },\r\n      })\r\n      onSuccess()\r\n    })\r\n    .catch((err) => console.log(err))\r\n}\r\n\r\nexport const Delete = (id, onSuccess) => (dispatch) => {\r\n  api\r\n    .users()\r\n    .delete(id)\r\n    .then((res) => {\r\n      dispatch({\r\n        type: ACTION_TYPES.DELETE,\r\n        payload: id,\r\n      })\r\n      onSuccess()\r\n    })\r\n    .catch((err) => console.log(err))\r\n}\r\n","import React, { useEffect, useState, Fragment } from 'react'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport { useToasts } from 'react-toast-notifications'\r\n\r\nimport { Grid, TextField, withStyles, Button } from '@material-ui/core'\r\nimport Container from '@material-ui/core/Container'\r\n\r\nimport LandngNav from '../components/LandingNav'\r\nimport Footer from '../components/Footer'\r\nimport Message from '../components/Message'\r\nimport useForm from '../useForm'\r\nimport * as actions from '../actions/users'\r\n\r\nconst styles = (theme) => ({\r\n  root: {\r\n    '& .MuiTextField-root': {\r\n      margin: theme.spacing(1),\r\n      minWidth: '100%',\r\n    },\r\n  },\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    minWidth: '100%',\r\n  },\r\n  smMargin: {\r\n    margin: theme.spacing(1),\r\n  },\r\n})\r\n\r\nconst initialFieldValues = {\r\n  firstName: '',\r\n  lastName: '',\r\n  address: '',\r\n  userType: 'Buyer',\r\n  category: '',\r\n  email: '',\r\n  password: '',\r\n}\r\n\r\nconst LoginPage = ({ classes, ...props }) => {\r\n  const { addToast } = useToasts()\r\n  let history = useHistory()\r\n\r\n  const validate = (fieldValues = values) => {\r\n    let temp = { ...errors }\r\n    if ('firstName' in fieldValues)\r\n      temp.firstName = fieldValues.firstName ? '' : 'This field is required.'\r\n    if ('lastName' in fieldValues)\r\n      temp.lastName = fieldValues.lastName ? '' : 'This field is required.'\r\n    if ('userTpye' in fieldValues)\r\n      temp.userType = fieldValues.userType ? '' : 'This field is required.'\r\n    if ('password' in fieldValues)\r\n      temp.password = fieldValues.password ? '' : 'This field is required.'\r\n    if ('category' in fieldValues)\r\n      temp.category = fieldValues.category ? '' : 'This field is required.'\r\n    if ('email' in fieldValues)\r\n      temp.email = /^$|.+@.+..+/.test(fieldValues.email)\r\n        ? ''\r\n        : 'Email is not valid.'\r\n    setErrors({\r\n      ...temp,\r\n    })\r\n\r\n    if (fieldValues === values)\r\n      return Object.values(temp).every((x) => x === '')\r\n  }\r\n\r\n  const setRole = (fieldValues = values) => {\r\n    fieldValues.userType = 'Buyer'\r\n  }\r\n\r\n  const [error, setError] = useState(false)\r\n\r\n  const { values, setValues, errors, setErrors, handleInputChange, resetForm } =\r\n    useForm(\r\n      initialFieldValues,\r\n      validate,\r\n      props.setCurrentId,\r\n      props.setOpenPopup\r\n    )\r\n\r\n  const admin = () => {}\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault()\r\n\r\n    props.userList.find((x) => {\r\n      if (\r\n        x.email == values.email &&\r\n        x.password == values.password &&\r\n        x.userType === 'Buyer'\r\n      ) {\r\n        addToast('Logged in successfully as a Buyer!', {\r\n          appearance: 'success',\r\n        })\r\n        history.push({\r\n          pathname: '/order',\r\n          state: x.userId,\r\n        })\r\n      } else if (\r\n        x.email == values.email &&\r\n        x.password == values.password &&\r\n        x.userType === 'Seller'\r\n      ) {\r\n        addToast('Logged in successfully as a Seller!', {\r\n          appearance: 'success',\r\n        })\r\n        history.push({\r\n          pathname: '/sellerdashboard',\r\n          state: x.userId,\r\n        })\r\n      } else if (\r\n        x.email == values.email &&\r\n        x.password == values.password &&\r\n        x.userType === 'Admin'\r\n      ) {\r\n        addToast('Logged in successfully as an Admin', {\r\n          appearance: 'success',\r\n        })\r\n        history.push({\r\n          pathname: '/admin',\r\n          state: x.userId,\r\n        })\r\n      }\r\n    })\r\n\r\n    setError(true)\r\n  }\r\n\r\n  useEffect(() => {\r\n    props.fetchAllUsers()\r\n    if (props.currentId !== 0) {\r\n      setValues({\r\n        ...props.userList.find((x) => x.userId === props.currentId),\r\n      })\r\n      setErrors({})\r\n    }\r\n  }, [props.currentId])\r\n  return (\r\n    <Fragment>\r\n      <LandngNav />\r\n      <section className='container'>\r\n        <Container component='main' maxWidth='xs'>\r\n          <div>\r\n            <h1 className='large text-primary'>Let's log in first!</h1>\r\n            <p className='lead'>\r\n              <i className='fas fa-user'></i> Log into your Customer profile\r\n            </p>\r\n          </div>\r\n          {error && (\r\n            <Message variant='danger'>Email or Password is incorrect!</Message>\r\n          )}\r\n          <form\r\n            autoComplete='off'\r\n            noValidate\r\n            className={classes.root}\r\n            onSubmit={handleSubmit}\r\n          >\r\n            <Grid container>\r\n              <Grid item xs={12}>\r\n                <TextField\r\n                  name='email'\r\n                  variant='outlined'\r\n                  label='Email'\r\n                  value={values.email}\r\n                  onChange={handleInputChange}\r\n                  {...(errors.email && {\r\n                    error: true,\r\n                    helperText: errors.email,\r\n                  })}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <TextField\r\n                  name='password'\r\n                  type='password'\r\n                  variant='outlined'\r\n                  label='Password'\r\n                  value={values.password}\r\n                  onChange={handleInputChange}\r\n                  {...(errors.password && {\r\n                    error: true,\r\n                    helperText: errors.password,\r\n                  })}\r\n                />\r\n                <div>{props.currentId}</div>\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <div>\r\n                  <Button\r\n                    variant='contained'\r\n                    style={{ color: 'green' }}\r\n                    type='submit'\r\n                    className={classes.smMargin}\r\n                  >\r\n                    Submit\r\n                  </Button>\r\n                </div>\r\n              </Grid>\r\n            </Grid>\r\n          </form>\r\n        </Container>\r\n      </section>\r\n\r\n      <Footer />\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  userList: state.users.list,\r\n})\r\n\r\nconst mapActionToProps = {\r\n  createUser: actions.create,\r\n  updateUser: actions.update,\r\n  fetchAllUsers: actions.fetchAll,\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapActionToProps\r\n)(withStyles(styles)(LoginPage))\r\n","import React, { useEffect, useState, Fragment } from 'react'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { useToasts } from 'react-toast-notifications'\r\nimport { connect } from 'react-redux'\r\n\r\nimport { Grid, TextField, withStyles, Button } from '@material-ui/core'\r\nimport Container from '@material-ui/core/Container'\r\n\r\nimport * as actions from '../actions/users'\r\nimport useForm from '../useForm'\r\nimport LandngNav from '../components/LandingNav'\r\nimport Footer from '../components/Footer'\r\nimport Message from '../components/Message'\r\n\r\nconst styles = (theme) => ({\r\n  root: {\r\n    '& .MuiTextField-root': {\r\n      margin: theme.spacing(1),\r\n      minWidth: '100%',\r\n    },\r\n  },\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    minWidth: '100%',\r\n  },\r\n  smMargin: {\r\n    margin: theme.spacing(1),\r\n  },\r\n})\r\n\r\nconst initialFieldValues = {\r\n  firstName: '',\r\n  lastName: '',\r\n  address: '',\r\n  userType: 'Buyer',\r\n  category: '',\r\n  email: '',\r\n  password: '',\r\n}\r\n\r\nconst RegisterPage = ({ classes, ...props }) => {\r\n  const { addToast } = useToasts()\r\n  let history = useHistory()\r\n\r\n  const [error, setError] = useState(false)\r\n\r\n  const validate = (fieldValues = values) => {\r\n    let temp = { ...errors }\r\n    if ('firstName' in fieldValues)\r\n      temp.firstName = fieldValues.firstName ? '' : 'This field is required.'\r\n    if ('lastName' in fieldValues)\r\n      temp.lastName = fieldValues.lastName ? '' : 'This field is required.'\r\n    if ('userTpye' in fieldValues)\r\n      temp.userType = fieldValues.userType ? '' : 'This field is required.'\r\n    if ('password' in fieldValues)\r\n      temp.password = fieldValues.password ? '' : 'This field is required.'\r\n    if ('category' in fieldValues)\r\n      temp.category = fieldValues.category ? '' : 'This field is required.'\r\n    if ('email' in fieldValues)\r\n      temp.email = /^$|.+@.+..+/.test(fieldValues.email)\r\n        ? ''\r\n        : 'Email is not valid.'\r\n    setErrors({\r\n      ...temp,\r\n    })\r\n\r\n    if (fieldValues === values)\r\n      return Object.values(temp).every((x) => x === '')\r\n  }\r\n\r\n  const setRole = (fieldValues = values) => {\r\n    fieldValues.userType = 'Buyer'\r\n  }\r\n\r\n  const { values, setValues, errors, setErrors, handleInputChange, resetForm } =\r\n    useForm(\r\n      initialFieldValues,\r\n      validate,\r\n      props.setCurrentId,\r\n      props.setOpenPopup\r\n    )\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault()\r\n    setRole()\r\n    if (validate()) {\r\n      history.push({\r\n        pathname: '/order',\r\n        state: values.email,\r\n      })\r\n      const onSuccess = () => {\r\n        resetForm()\r\n        addToast('Submitted successfully', { appearance: 'success' })\r\n      }\r\n      props.createUser(values, onSuccess)\r\n    } else {\r\n      setError(true)\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (props.currentId !== 0) {\r\n      setValues({\r\n        ...props.userList.find((x) => x.userId === props.currentId),\r\n      })\r\n      setErrors({})\r\n    }\r\n  }, [props.currentId])\r\n  return (\r\n    <Fragment>\r\n      <LandngNav />\r\n      <section className='container'>\r\n        <Container component='main' maxWidth='xs'>\r\n          <div>\r\n            <h1 className='large text-primary'>Join with us!</h1>\r\n            <p className='lead'>\r\n              <i className='fas fa-user'></i> Create Your Customer Profile\r\n            </p>\r\n          </div>\r\n          {error && (\r\n            <Message variant='danger'>\r\n              Something went wrong! Please try again!\r\n            </Message>\r\n          )}\r\n          <form\r\n            autoComplete='off'\r\n            noValidate\r\n            className={classes.root}\r\n            onSubmit={handleSubmit}\r\n          >\r\n            <Grid container>\r\n              <Grid item xs={12}>\r\n                <TextField\r\n                  name='firstName'\r\n                  variant='outlined'\r\n                  label='First Name'\r\n                  value={values.firstName}\r\n                  onChange={handleInputChange}\r\n                  {...(errors.firstName && {\r\n                    error: true,\r\n                    helperText: errors.firstName,\r\n                  })}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <TextField\r\n                  name='lastName'\r\n                  variant='outlined'\r\n                  label='Last Name'\r\n                  value={values.lastName}\r\n                  onChange={handleInputChange}\r\n                  {...(errors.lastName && {\r\n                    error: true,\r\n                    helperText: errors.lastName,\r\n                  })}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <TextField\r\n                  name='email'\r\n                  variant='outlined'\r\n                  label='Email'\r\n                  value={values.email}\r\n                  onChange={handleInputChange}\r\n                  {...(errors.email && {\r\n                    error: true,\r\n                    helperText: errors.email,\r\n                  })}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <TextField\r\n                  name='password'\r\n                  variant='outlined'\r\n                  label='Password'\r\n                  value={values.password}\r\n                  onChange={handleInputChange}\r\n                  {...(errors.password && {\r\n                    error: true,\r\n                    helperText: errors.password,\r\n                  })}\r\n                />\r\n                <div>{props.currentId}</div>\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <div>\r\n                  <Button\r\n                    variant='contained'\r\n                    style={{ color: 'green' }}\r\n                    type='submit'\r\n                    className={classes.smMargin}\r\n                  >\r\n                    Submit\r\n                  </Button>\r\n                </div>\r\n              </Grid>\r\n            </Grid>\r\n          </form>\r\n        </Container>\r\n      </section>\r\n      <Footer />\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  userList: state.users.list,\r\n})\r\n\r\nconst mapActionToProps = {\r\n  createUser: actions.create,\r\n  updateUser: actions.update,\r\n  fetchAllUsers: actions.fetchAll,\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapActionToProps\r\n)(withStyles(styles)(RegisterPage))\r\n","import emailjs from 'emailjs-com'\r\n\r\nconst Email = (subject, email, body, signature) => {\r\n  var templateParams = {\r\n    subject: subject,\r\n    email: email,\r\n    body: body,\r\n    signature: signature,\r\n  }\r\n\r\n  const serviceID = 'service_dod96eb'\r\n  const templateID = 'template_h8af3yb'\r\n  const userID = 'user_EY6nMH0QMSyeSbCdl9Dyi'\r\n\r\n  try {\r\n    console.log('Got it')\r\n    emailjs.send(serviceID, templateID, templateParams, userID)\r\n  } catch (error) {\r\n    console.log(error.message)\r\n  }\r\n}\r\n\r\nexport default Email\r\n","import React, { Fragment, useState } from 'react'\r\n\r\nimport Button from '@material-ui/core/Button'\r\nimport CssBaseline from '@material-ui/core/CssBaseline'\r\nimport TextField from '@material-ui/core/TextField'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport Container from '@material-ui/core/Container'\r\n\r\nimport sendEmail from '../actions/Email'\r\nimport LandingNav from '../components/LandingNav'\r\nimport Footer from '../components/Footer'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: '100%', // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n}))\r\n\r\nconst ContactUs = () => {\r\n  const classes = useStyles()\r\n\r\n  const [formData, setFromData] = useState({\r\n    subject: '',\r\n    email: '',\r\n    body: '',\r\n    signature: '',\r\n  })\r\n\r\n  const { subject, email, body, signature } = formData\r\n\r\n  const onChange = (e) =>\r\n    setFromData({ ...formData, [e.target.name]: e.target.value })\r\n\r\n  const onSubmit = async (e) => {\r\n    e.preventDefault()\r\n\r\n    sendEmail(subject, email, body, signature)\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n      <LandingNav />\r\n      <section className='container'>\r\n        <Container component='main' maxWidth='xs'>\r\n          <CssBaseline />\r\n          <div className={classes.paper}>\r\n            <img\r\n              src='https://dewey.tailorbrands.com/production/brand_version_mockup_image/765/4683342765_f43e76b4-4d93-4f52-b0e7-cc99ad1bf015.png?cb=1613721941'\r\n              alt='jobforme'\r\n            />\r\n\r\n            <form\r\n              className={classes.form}\r\n              noValidate\r\n              onSubmit={(e) => onSubmit(e)}\r\n            >\r\n              <TextField\r\n                variant='outlined'\r\n                margin='normal'\r\n                required\r\n                fullWidth\r\n                label='Subject'\r\n                type='text'\r\n                placeholder='Subject'\r\n                name='subject'\r\n                value={subject}\r\n                onChange={(e) => onChange(e)}\r\n                required\r\n              />\r\n              <TextField\r\n                variant='outlined'\r\n                margin='normal'\r\n                required\r\n                fullWidth\r\n                label='Email Address'\r\n                type='email'\r\n                placeholder='Email Address'\r\n                name='email'\r\n                value={email}\r\n                onChange={(e) => onChange(e)}\r\n                required\r\n              />\r\n              <TextField\r\n                variant='outlined'\r\n                margin='normal'\r\n                required\r\n                fullWidth\r\n                label='Enter your message body'\r\n                type='text'\r\n                placeholder='Enter your Message Body'\r\n                name='body'\r\n                value={body}\r\n                onChange={(e) => onChange(e)}\r\n                minLength='3'\r\n                multiline\r\n              />\r\n              <TextField\r\n                variant='outlined'\r\n                margin='normal'\r\n                required\r\n                fullWidth\r\n                label='Signature'\r\n                type='text'\r\n                placeholder='Signature'\r\n                name='signature'\r\n                value={signature}\r\n                onChange={(e) => onChange(e)}\r\n                required\r\n              />\r\n\r\n              <Button\r\n                type='submit'\r\n                fullWidth\r\n                variant='contained'\r\n                style={{ color: 'green' }}\r\n                className={classes.submit}\r\n              >\r\n                Send\r\n              </Button>\r\n            </form>\r\n          </div>\r\n        </Container>\r\n      </section>\r\n      <Footer />\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default ContactUs\r\n","import axios from 'axios'\r\n\r\nconst baseUrl = process.env.REACT_APP_API_URL\r\n\r\nexport default {\r\n  messages(url = baseUrl + '/message/') {\r\n    return {\r\n      fetchAll: () => axios.get(url),\r\n      fetchById: (id) => axios.get(url + id),\r\n      create: (newRecord) => axios.post(url, newRecord),\r\n      update: (id, updatedRecord) => axios.put(url + id, updatedRecord),\r\n      delete: (id) => axios.delete(url + id),\r\n    }\r\n  },\r\n}\r\n","import calls from './message'\r\n\r\nexport const ACTION_TYPES = {\r\n  CREATE: 'CREATE',\r\n  UPDATE: 'UPDATE',\r\n  DELETE: 'DELETE',\r\n  FETCH_ALL: 'FETCH_ALL',\r\n}\r\n\r\nconst formateData = (data) => ({\r\n  ...data,\r\n  age: parseInt(data.age ? data.age : 0),\r\n})\r\n\r\nexport const fetchAll = () => (dispatch) => {\r\n  calls\r\n    .messages()\r\n    .fetchAll()\r\n    .then((response) => {\r\n      console.log(response)\r\n      dispatch({\r\n        type: ACTION_TYPES.FETCH_ALL,\r\n        payload: response.data,\r\n      })\r\n    })\r\n    .catch((error) => console.log(error))\r\n}\r\n\r\nexport const create = (data, onSuccess) => (dispatch) => {\r\n  data = formateData(data)\r\n  calls\r\n    .messages()\r\n    .create(data)\r\n    .then((res) => {\r\n      dispatch({\r\n        type: ACTION_TYPES.CREATE,\r\n        payload: res.data,\r\n      })\r\n      onSuccess()\r\n    })\r\n    .catch((err) => console.log(err))\r\n}\r\n\r\nexport const update = (id, data, onSuccess) => (dispatch) => {\r\n  data = formateData(data)\r\n  calls\r\n    .messages()\r\n    .update(id, data)\r\n    .then((res) => {\r\n      dispatch({\r\n        type: ACTION_TYPES.UPDATE,\r\n        payload: { id, ...data },\r\n      })\r\n      onSuccess()\r\n    })\r\n    .catch((err) => console.log(err))\r\n}\r\n\r\nexport const Delete = (id, onSuccess) => (dispatch) => {\r\n  calls\r\n    .messages()\r\n    .delete(id)\r\n    .then((res) => {\r\n      dispatch({\r\n        type: ACTION_TYPES.DELETE,\r\n        payload: id,\r\n      })\r\n      onSuccess()\r\n    })\r\n    .catch((err) => console.log(err))\r\n}\r\n","import React, { useEffect, useState, Fragment } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { useToasts } from 'react-toast-notifications'\r\n\r\nimport { Grid, TextField, withStyles, Button } from '@material-ui/core'\r\nimport * as actions from '../actions/messages'\r\n\r\nimport Message from './Message'\r\n\r\nconst styles = (theme) => ({\r\n  root: {\r\n    '& .MuiTextField-root': {\r\n      margin: theme.spacing(1),\r\n      minWidth: '100%',\r\n    },\r\n  },\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    minWidth: '100%',\r\n  },\r\n  smMargin: {\r\n    margin: theme.spacing(1),\r\n  },\r\n})\r\n\r\nconst initialFieldValues = {\r\n  messageID: 0,\r\n  to: 0,\r\n  from: 0,\r\n  text: '',\r\n  sentAt: new Date(),\r\n}\r\n\r\nconst MessagesForm = ({ classes, ...props }) => {\r\n  const [values, setValues] = useState(initialFieldValues)\r\n  const [errors, setErrors] = useState({})\r\n  const [error, setError] = useState(false)\r\n  const { addToast } = useToasts()\r\n  console.log('from ' + props.senderId)\r\n  console.log('to ' + props.recieverId)\r\n\r\n  const validate = (fieldValues = values) => {\r\n    let temp = { ...errors }\r\n    if ('text' in fieldValues)\r\n      temp.text = fieldValues.text ? '' : 'This field is required.'\r\n    setErrors({\r\n      ...temp,\r\n    })\r\n\r\n    if (fieldValues === values)\r\n      return Object.values(temp).every((x) => x === '')\r\n  }\r\n\r\n  const handleInputChange = (e) => {\r\n    const { name, value } = e.target\r\n    const fieldValue = { [name]: value }\r\n    setValues({\r\n      ...values,\r\n      ...fieldValue,\r\n    })\r\n    validate(fieldValue)\r\n  }\r\n\r\n  const resetForm = () => {\r\n    setValues({\r\n      ...initialFieldValues,\r\n    })\r\n    setErrors({})\r\n  }\r\n\r\n  const setRecieverId = (fieldValues = values) => {\r\n    fieldValues.to = props.recieverId\r\n  }\r\n\r\n  const setSenderId = (fieldValues = values) => {\r\n    fieldValues.from = props.senderId\r\n  }\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault()\r\n    setSenderId()\r\n    setRecieverId()\r\n    if (validate()) {\r\n      const onSuccess = () => {\r\n        resetForm()\r\n        props.fetchAllMessages()\r\n        addToast('Submitted successfully', { appearance: 'success' })\r\n      }\r\n      if (props.currentId === 0) {\r\n        props.createMessage(values, onSuccess())\r\n        props.fetchAllMessages()\r\n      } else {\r\n        props.updateMessage(props.currentId, values, onSuccess())\r\n        props.fetchAllMessages()\r\n      }\r\n    } else {\r\n      setError(true)\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (props.currentId !== 0) {\r\n      setValues({\r\n        ...props.messageList.find((x) => x.messageId === props.currentId),\r\n      })\r\n      setErrors({})\r\n      props.fetchAllMessages()\r\n    }\r\n  }, [props])\r\n\r\n  return (\r\n    <Fragment>\r\n      <section className='container'>\r\n        {error && (\r\n          <Message variant='danger'>\r\n            Something went wrong! Please try again!\r\n          </Message>\r\n        )}\r\n        <form\r\n          autoComplete='off'\r\n          noValidate\r\n          className={classes.root}\r\n          onSubmit={handleSubmit}\r\n        >\r\n          <Grid container>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                name='text'\r\n                variant='outlined'\r\n                label='Message'\r\n                value={values.text}\r\n                onChange={handleInputChange}\r\n                {...(errors.text && {\r\n                  error: true,\r\n                  helperText: errors.text,\r\n                })}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <div>\r\n                <Button\r\n                  variant='contained'\r\n                  style={{ color: 'green' }}\r\n                  type='submit'\r\n                  className={classes.smMargin}\r\n                >\r\n                  Send\r\n                </Button>\r\n              </div>\r\n            </Grid>\r\n          </Grid>\r\n        </form>\r\n      </section>\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  messageList: state.messages.list,\r\n})\r\n\r\nconst mapActionToProps = {\r\n  createMessage: actions.create,\r\n  updateMessage: actions.update,\r\n  fetchAllMessages: actions.fetchAll,\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapActionToProps\r\n)(withStyles(styles)(MessagesForm))\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst Navigationbar = (props) => {\r\n  return (\r\n    <nav className='navbar '>\r\n      <h1>\r\n        <Link\r\n          to={{\r\n            pathname: '/order',\r\n            state: props.buyerId,\r\n          }}\r\n        >\r\n          {/* <i class=\"fas fa-comments-dollar\"></i> JobForMe */}\r\n          <img\r\n            className='photo'\r\n            src='https://dewey.tailorbrands.com/production/brand_version_mockup_image/765/4683342765_f43e76b4-4d93-4f52-b0e7-cc99ad1bf015.png?cb=1613721941'\r\n            alt='jobforme'\r\n          />\r\n        </Link>\r\n      </h1>\r\n      <ul>\r\n        {/* <li>\r\n          <a href=\"/admin\">Admin Panel</a>\r\n        </li> */}\r\n        <li>\r\n          <Link\r\n            to={{\r\n              pathname: '/yourorders',\r\n              state: props.buyerId,\r\n            }}\r\n          >\r\n            Your Orders\r\n          </Link>\r\n        </li>\r\n        <li>\r\n          <Link\r\n            to={{\r\n              pathname: '/seller',\r\n              state: props.buyerId,\r\n            }}\r\n          >\r\n            Become a Seller!\r\n          </Link>\r\n        </li>\r\n        {/* <li>\r\n          <a href=\"/seller\">Become a Seller</a>\r\n        </li> */}\r\n        {/* <li>\r\n          <Link to=\"/register\">Register</Link>\r\n        </li> */}\r\n\r\n        <li>\r\n          <Link\r\n            to={{\r\n              pathname: '/buyercontact',\r\n              state: props.buyerId,\r\n            }}\r\n          >\r\n            Contact Admin\r\n          </Link>\r\n        </li>\r\n        <li>\r\n          <Link\r\n            to={{\r\n              pathname: '/buyerprofile',\r\n              state: props.buyerId,\r\n            }}\r\n          >\r\n            Profile\r\n          </Link>\r\n        </li>\r\n        <li>\r\n          <Link to='/'>Logout</Link>\r\n        </li>\r\n      </ul>\r\n    </nav>\r\n  )\r\n}\r\n\r\nexport default Navigationbar\r\n","import React, { Fragment, useState, useEffect } from 'react'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\n\r\nimport {\r\n  Grid,\r\n  Paper,\r\n  TableContainer,\r\n  Table,\r\n  TableHead,\r\n  TableRow,\r\n  TableCell,\r\n  TableBody,\r\n  withStyles,\r\n  ButtonGroup,\r\n  Button,\r\n} from '@material-ui/core'\r\nimport DeleteIcon from '@material-ui/icons/Delete'\r\nimport { useToasts } from 'react-toast-notifications'\r\n\r\nimport MessagesForm from '../components/BuyerChat'\r\nimport * as actions from '../actions/messages'\r\nimport InfiniteScroll from 'react-infinite-scroll-component'\r\nimport BuyerNav from '../components/BuyerNav'\r\nimport Footer from '../components/Footer'\r\n\r\nconst styles = (theme) => ({\r\n  root: {\r\n    '& .MuiTableCell-head': {\r\n      fontSize: '1.25rem',\r\n    },\r\n  },\r\n  paper: {\r\n    margin: theme.spacing(2),\r\n    padding: theme.spacing(2),\r\n  },\r\n})\r\n\r\nconst Messages = ({ classes, ...props }) => {\r\n  const { addToast } = useToasts()\r\n  let history = useHistory()\r\n  const recieverId = history.location.recieverId\r\n  const senderId = history.location.senderId\r\n  const buyerId = history.location.senderId\r\n\r\n  const [currentId, setCurrentId] = useState(0)\r\n\r\n  useEffect(() => {\r\n    props.fetchAllMessages()\r\n  }, [props])\r\n\r\n  const onDelete = (id) => {\r\n    if (window.confirm('Are you sure to delete this record?'))\r\n      props.deleteMessage(id, () =>\r\n        addToast('Deleted successfully', { appearance: 'info' })\r\n      )\r\n    props.fetchAllMessages()\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n      <BuyerNav {...{ buyerId }} />\r\n      <section className='container'>\r\n        <Paper className={classes.paper} elevation={3}>\r\n          <Grid item xs={12}>\r\n            <Grid\r\n              item\r\n              xs={12}\r\n              spacing={0}\r\n              direction='column'\r\n              alignItems='center'\r\n              justify='center'\r\n            >\r\n              <div>\r\n                <h1 className='large text-primary'>Chat with your Seller!</h1>\r\n                <p className='lead'>\r\n                  <i className='fas fa-user'></i> Add you message in the below\r\n                  box\r\n                </p>\r\n              </div>\r\n\r\n              <InfiniteScroll dataLength={6} height={200}>\r\n                <TableContainer>\r\n                  <Table>\r\n                    <TableHead className={classes.root}>\r\n                      <TableRow></TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                      {props.messageList.map((record, index) => {\r\n                        if (\r\n                          record.from === senderId &&\r\n                          record.to === recieverId\r\n                        ) {\r\n                          return (\r\n                            <TableRow key={index} hover>\r\n                              <TableCell>Me:</TableCell>\r\n                              <TableCell>{record.text}</TableCell>\r\n                              <TableCell>{record.sentAt}</TableCell>\r\n                              <TableCell>\r\n                                <ButtonGroup variant='text'>\r\n                                  <Button>\r\n                                    <DeleteIcon\r\n                                      color='action'\r\n                                      onClick={() => {\r\n                                        onDelete(record.messageID)\r\n                                      }}\r\n                                    />\r\n                                  </Button>\r\n                                </ButtonGroup>\r\n                              </TableCell>\r\n                            </TableRow>\r\n                          )\r\n                        } else if (\r\n                          record.from === recieverId &&\r\n                          record.to === senderId\r\n                        ) {\r\n                          return (\r\n                            <TableRow key={index} hover>\r\n                              <TableCell>Customer:</TableCell>\r\n                              <TableCell>{record.text}</TableCell>\r\n                              <TableCell>{record.sentAt}</TableCell>\r\n                              <TableCell>\r\n                                <ButtonGroup variant='text'>\r\n                                  <Button></Button>\r\n                                </ButtonGroup>\r\n                              </TableCell>\r\n                            </TableRow>\r\n                          )\r\n                        }\r\n                      })}\r\n                    </TableBody>\r\n                  </Table>\r\n                </TableContainer>\r\n              </InfiniteScroll>\r\n\r\n              <MessagesForm\r\n                {...{ currentId, recieverId, senderId, setCurrentId }}\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n        </Paper>\r\n      </section>\r\n      <Footer />\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  messageList: state.messages.list,\r\n})\r\n\r\nconst mapActionToProps = {\r\n  fetchAllMessages: actions.fetchAll,\r\n  deleteMessage: actions.Delete,\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapActionToProps\r\n)(withStyles(styles)(Messages))\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst Navigationbar = (props) => {\r\n  return (\r\n    <nav className='navbar '>\r\n      <h1>\r\n        <Link\r\n          to={{\r\n            pathname: '/admin',\r\n            state: props.adminId,\r\n          }}\r\n        >\r\n          <img\r\n            className='photo'\r\n            src='https://dewey.tailorbrands.com/production/brand_version_mockup_image/765/4683342765_f43e76b4-4d93-4f52-b0e7-cc99ad1bf015.png?cb=1613721941'\r\n            alt='jobforme'\r\n          />\r\n        </Link>\r\n      </h1>\r\n      <ul>\r\n        <li>\r\n          <Link to='/'>Logout</Link>\r\n        </li>\r\n        <li>\r\n          <Link\r\n            to={{\r\n              pathname: '/adminprofile',\r\n              state: props.adminId,\r\n            }}\r\n          >\r\n            Profile\r\n          </Link>\r\n        </li>\r\n      </ul>\r\n    </nav>\r\n  )\r\n}\r\n\r\nexport default Navigationbar\r\n","import React, { Fragment, useEffect } from 'react'\r\nimport { Link, useHistory } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\n\r\nimport { Grid, withStyles } from '@material-ui/core'\r\nimport Card from '@material-ui/core/Card'\r\nimport CardActionArea from '@material-ui/core/CardActionArea'\r\nimport CardActions from '@material-ui/core/CardActions'\r\nimport CardContent from '@material-ui/core/CardContent'\r\nimport CardMedia from '@material-ui/core/CardMedia'\r\nimport Typography from '@material-ui/core/Typography'\r\n\r\nimport * as actions from '../actions/users'\r\nimport AdminNav from '../components/AdminNav'\r\nimport Footer from '../components/Footer'\r\n\r\nconst styles = (theme) => ({\r\n  root: {\r\n    '& .MuiTableCell-head': {\r\n      fontSize: '1.25rem',\r\n    },\r\n  },\r\n  paper: {\r\n    margin: theme.spacing(2),\r\n    padding: theme.spacing(2),\r\n  },\r\n  card: {\r\n    maxWidth: 345,\r\n    margin: 0,\r\n    padding: 10,\r\n    display: 'block',\r\n    width: '1000px',\r\n    transitionDuration: '0.3s',\r\n    height: '20vw',\r\n    raised: true,\r\n  },\r\n})\r\n\r\nconst AdminLandingPage = ({ classes, ...props }) => {\r\n  const history = useHistory()\r\n  console.log(history.location.state)\r\n  const adminId = history.location.state\r\n\r\n  useEffect(() => {\r\n    if (!history.location.state) {\r\n      history.push('/login')\r\n    }\r\n    props.fetchAllUsers()\r\n  }, [])\r\n\r\n  return (\r\n    <Fragment>\r\n      <AdminNav {...{ adminId }} />\r\n      <section className='container'>\r\n        <Grid container spacing={1}>\r\n          <br />\r\n          <br />\r\n          <br />\r\n          <br />\r\n          <Grid\r\n            container\r\n            item\r\n            xs={4}\r\n            spacing={0}\r\n            direction='column'\r\n            alignItems='center'\r\n            justify='center'\r\n          >\r\n            <Link\r\n              to={{\r\n                pathname: '/buyers',\r\n                state: adminId,\r\n              }}\r\n            >\r\n              <Card className={classes.card}>\r\n                <CardActionArea>\r\n                  <CardMedia\r\n                    component='img'\r\n                    alt='Contemplative Reptile'\r\n                    height='140'\r\n                    image='https://images.unsplash.com/photo-1594835494259-43c6e66ad369?ixid=MXwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHw%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=1052&q=80'\r\n                    title='Contemplative Reptile'\r\n                  />\r\n                  <CardContent>\r\n                    <Typography gutterBottom variant='h5' component='h2'>\r\n                      Buyers\r\n                    </Typography>\r\n                    <Typography\r\n                      variant='body2'\r\n                      color='textSecondary'\r\n                      component='p'\r\n                    >\r\n                      View add or Delete Buyers!\r\n                    </Typography>\r\n                    <Typography\r\n                      variant='body2'\r\n                      color='textSecondary'\r\n                      component='p'\r\n                    >\r\n                      <Typography\r\n                        variant='body2'\r\n                        color='textSecondary'\r\n                        component='p'\r\n                      >\r\n                        Click on the edit button to make changes\r\n                      </Typography>\r\n                    </Typography>\r\n                  </CardContent>\r\n                </CardActionArea>\r\n                <CardActions></CardActions>\r\n              </Card>\r\n            </Link>\r\n          </Grid>\r\n          <Grid\r\n            container\r\n            item\r\n            xs={4}\r\n            spacing={0}\r\n            direction='column'\r\n            alignItems='center'\r\n            justify='center'\r\n          >\r\n            <Link\r\n              to={{\r\n                pathname: '/sellers',\r\n                state: adminId,\r\n              }}\r\n            >\r\n              <Card className={classes.card}>\r\n                <CardActionArea>\r\n                  <CardMedia\r\n                    component='img'\r\n                    alt='Contemplative Reptile'\r\n                    height='140'\r\n                    image='https://images.unsplash.com/photo-1534683251650-3fd64cd1561a?ixid=MXwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHw%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=1020&q=80'\r\n                    title='Contemplative Reptile'\r\n                  />\r\n                  <CardContent>\r\n                    <Typography gutterBottom variant='h5' component='h2'>\r\n                      Sellers\r\n                    </Typography>\r\n                    <Typography\r\n                      variant='body2'\r\n                      color='textSecondary'\r\n                      component='p'\r\n                    >\r\n                      Click on the Add New button to add or click on the\r\n                      profiles to make changes.\r\n                    </Typography>\r\n                  </CardContent>\r\n                </CardActionArea>\r\n                <CardActions></CardActions>\r\n              </Card>\r\n            </Link>\r\n          </Grid>\r\n          <Grid\r\n            container\r\n            item\r\n            xs={4}\r\n            spacing={0}\r\n            direction='column'\r\n            alignItems='center'\r\n            justify='center'\r\n          >\r\n            <Link\r\n              to={{\r\n                pathname: '/admins',\r\n                state: adminId,\r\n              }}\r\n            >\r\n              <Card className={classes.card}>\r\n                <CardActionArea>\r\n                  <CardMedia\r\n                    component='img'\r\n                    alt='Contemplative Reptile'\r\n                    height='140'\r\n                    image='https://images.unsplash.com/photo-1517048676732-d65bc937f952?ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=1050&q=80'\r\n                    title='Contemplative Reptile'\r\n                  />\r\n                  <CardContent>\r\n                    <Typography gutterBottom variant='h5' component='h2'>\r\n                      Admins\r\n                    </Typography>\r\n                    <Typography\r\n                      variant='body2'\r\n                      color='textSecondary'\r\n                      component='p'\r\n                    >\r\n                      View add or Edit Admins!\r\n                    </Typography>\r\n                  </CardContent>\r\n                </CardActionArea>\r\n                <CardActions></CardActions>\r\n              </Card>\r\n            </Link>\r\n          </Grid>\r\n          <Grid\r\n            container\r\n            item\r\n            xs={12}\r\n            spacing={0}\r\n            direction='column'\r\n            alignItems='center'\r\n            justify='center'\r\n          >\r\n            <Link\r\n              to={{\r\n                pathname: '/adminorders',\r\n                state: adminId,\r\n              }}\r\n            >\r\n              <Card className={classes.card}>\r\n                <CardActionArea>\r\n                  <CardMedia\r\n                    component='img'\r\n                    alt='Contemplative Reptile'\r\n                    height='140'\r\n                    image='https://images.unsplash.com/photo-1564424555153-04228f0aa7ee?ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=1050&q=80'\r\n                    title='Contemplative Reptile'\r\n                  />\r\n                  <CardContent>\r\n                    <Typography gutterBottom variant='h5' component='h2'>\r\n                      Gigs\r\n                    </Typography>\r\n                    <Typography\r\n                      variant='body2'\r\n                      color='textSecondary'\r\n                      component='p'\r\n                    >\r\n                      Manage the current gigs!\r\n                    </Typography>\r\n                  </CardContent>\r\n                </CardActionArea>\r\n                <CardActions></CardActions>\r\n              </Card>\r\n            </Link>\r\n          </Grid>\r\n        </Grid>\r\n      </section>\r\n      <Footer />\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  userList: state.users.list,\r\n})\r\n\r\nconst mapActionToProps = {\r\n  fetchAllUsers: actions.fetchAll,\r\n  deleteUserr: actions.Delete,\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapActionToProps\r\n)(withStyles(styles)(AdminLandingPage))\r\n","import React, { useEffect, useState } from 'react'\r\nimport { Grid, TextField, withStyles, Button } from '@material-ui/core'\r\nimport useForm from '../useForm'\r\nimport { connect } from 'react-redux'\r\nimport * as actions from '../actions/users'\r\nimport { useToasts } from 'react-toast-notifications'\r\n\r\nimport Message from './Message'\r\n\r\nconst styles = (theme) => ({\r\n  root: {\r\n    '& .MuiTextField-root': {\r\n      margin: theme.spacing(1),\r\n      minWidth: '100%',\r\n    },\r\n  },\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    minWidth: '100%',\r\n  },\r\n  smMargin: {\r\n    margin: theme.spacing(1),\r\n  },\r\n})\r\n\r\nconst initialFieldValues = {\r\n  firstName: '',\r\n  lastName: '',\r\n  address: '',\r\n  userType: 'Seller',\r\n  category: '',\r\n  email: '',\r\n  password: '',\r\n}\r\n\r\nconst BuyersForm = ({ classes, ...props }) => {\r\n  const { addToast } = useToasts()\r\n\r\n  const [error, setError] = useState(false)\r\n\r\n  const validate = (fieldValues = values) => {\r\n    let temp = { ...errors }\r\n    if ('firstName' in fieldValues)\r\n      temp.firstName = fieldValues.firstName ? '' : 'This field is required.'\r\n    if ('lastName' in fieldValues)\r\n      temp.lastName = fieldValues.lastName ? '' : 'This field is required.'\r\n    if ('email' in fieldValues)\r\n      temp.email = /^$|.+@.+..+/.test(fieldValues.email)\r\n        ? ''\r\n        : 'Email is not valid.'\r\n    setErrors({\r\n      ...temp,\r\n    })\r\n\r\n    if (fieldValues === values)\r\n      return Object.values(temp).every((x) => x === '')\r\n  }\r\n\r\n  const { values, setValues, errors, setErrors, handleInputChange, resetForm } =\r\n    useForm(\r\n      initialFieldValues,\r\n      validate,\r\n      props.setCurrentId,\r\n      props.setOpenPopup\r\n    )\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault()\r\n    if (validate()) {\r\n      const onSuccess = () => {\r\n        resetForm()\r\n        addToast('Submitted successfully', { appearance: 'success' })\r\n      }\r\n      if (props.currentId === 0) {\r\n        props.createUser(values, onSuccess)\r\n      } else {\r\n        props.updateUser(props.currentId, values, onSuccess)\r\n      }\r\n    } else {\r\n      setError(true)\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (props.currentId !== 0) {\r\n      setValues({\r\n        ...props.userList.find((x) => x.userId === props.currentId),\r\n      })\r\n      setErrors({})\r\n    }\r\n  }, [])\r\n  return (\r\n    <>\r\n      {error && (\r\n        <Message variant='danger'>\r\n          Something went wrong! Please try again!\r\n        </Message>\r\n      )}\r\n      <form\r\n        autoComplete='off'\r\n        noValidate\r\n        className={classes.root}\r\n        onSubmit={handleSubmit}\r\n      >\r\n        <Grid container>\r\n          <TextField\r\n            name='firstName'\r\n            variant='outlined'\r\n            label='First Name'\r\n            value={values.firstName}\r\n            onChange={handleInputChange}\r\n            {...(errors.firstName && {\r\n              error: true,\r\n              helperText: errors.firstName,\r\n            })}\r\n          />\r\n          <TextField\r\n            name='lastName'\r\n            variant='outlined'\r\n            label='Last Name'\r\n            value={values.lastName}\r\n            onChange={handleInputChange}\r\n            {...(errors.lastName && {\r\n              error: true,\r\n              helperText: errors.lastName,\r\n            })}\r\n          />\r\n\r\n          <TextField\r\n            name='email'\r\n            variant='outlined'\r\n            label='Email'\r\n            value={values.email}\r\n            onChange={handleInputChange}\r\n            {...(errors.email && { error: true, helperText: errors.email })}\r\n          />\r\n          <Grid container justify='flex-end'>\r\n            <Button\r\n              variant='contained'\r\n              style={{ color: 'green' }}\r\n              type='submit'\r\n              className={classes.smMargin}\r\n            >\r\n              Submit\r\n            </Button>\r\n          </Grid>\r\n        </Grid>\r\n      </form>\r\n    </>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  userList: state.users.list,\r\n})\r\n\r\nconst mapActionToProps = {\r\n  createUser: actions.create,\r\n  updateUser: actions.update,\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapActionToProps\r\n)(withStyles(styles)(BuyersForm))\r\n","import React from \"react\";\r\nimport {\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  makeStyles,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\n// import Controls from \"./controls/Controls\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  dialogWrapper: {\r\n    padding: theme.spacing(2),\r\n    position: \"absolute\",\r\n    top: theme.spacing(5),\r\n  },\r\n  dialogTitle: {\r\n    paddingRight: \"0px\",\r\n  },\r\n}));\r\n\r\nexport default function Popup(props) {\r\n  const { title, children, openPopup, setOpenPopup } = props;\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Dialog\r\n      open={openPopup}\r\n      maxWidth=\"md\"\r\n      classes={{ paper: classes.dialogWrapper }}\r\n    >\r\n      <DialogTitle className={classes.dialogTitle}>\r\n        <div style={{ display: \"flex\" }}>\r\n          <Typography variant=\"h6\" component=\"div\" style={{ flexGrow: 1 }}>\r\n            {title}\r\n          </Typography>\r\n          <Button\r\n            color=\"secondary\"\r\n            onClick={() => {\r\n              setOpenPopup(false);\r\n            }}\r\n          >\r\n            <CloseIcon />\r\n          </Button>\r\n        </div>\r\n      </DialogTitle>\r\n      <DialogContent dividers>{children}</DialogContent>\r\n    </Dialog>\r\n  );\r\n}\r\n","import React, { Fragment, useState, useEffect } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { useToasts } from 'react-toast-notifications'\r\nimport { useHistory } from 'react-router-dom'\r\nimport InfiniteScroll from 'react-infinite-scroll-component'\r\n\r\nimport {\r\n  Grid,\r\n  Paper,\r\n  TableContainer,\r\n  Table,\r\n  TableHead,\r\n  TableRow,\r\n  TableCell,\r\n  TableBody,\r\n  withStyles,\r\n  ButtonGroup,\r\n  Button,\r\n} from '@material-ui/core'\r\nimport EditIcon from '@material-ui/icons/Edit'\r\nimport DeleteIcon from '@material-ui/icons/Delete'\r\n\r\nimport BuyerForm from '../components/BuyerForm'\r\nimport * as actions from '../actions/users'\r\nimport Popup from '../components/Popup'\r\nimport AdminNav from '../components/AdminNav'\r\nimport Footer from '../components/Footer'\r\n\r\nconst styles = (theme) => ({\r\n  root: {\r\n    '& .MuiTableCell-head': {\r\n      fontSize: '1.25rem',\r\n    },\r\n  },\r\n  paper: {\r\n    margin: theme.spacing(2),\r\n    padding: theme.spacing(2),\r\n  },\r\n})\r\n\r\nconst AdminBuyerList = ({ classes, ...props }) => {\r\n  const { addToast } = useToasts()\r\n  const history = useHistory()\r\n  const adminId = history.location.state\r\n\r\n  const [currentId, setCurrentId] = useState(0)\r\n  const [openPopup, setOpenPopup] = useState(false)\r\n\r\n  useEffect(() => {\r\n    if (!history.location.state) {\r\n      history.push('/login')\r\n    }\r\n    props.fetchAllUsers()\r\n  }, [props, history.location.state])\r\n\r\n  const onDelete = (id) => {\r\n    if (window.confirm('Are you sure to delete this record?'))\r\n      props.deleteUser(id, () =>\r\n        addToast('Deleted successfully', { appearance: 'info' })\r\n      )\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n      <AdminNav {...{ adminId }} />\r\n      <section className='container'>\r\n        <Paper className={classes.paper} elevation={3}>\r\n          <Grid>\r\n            <Grid item xs={12}>\r\n              <InfiniteScroll dataLength={6} height={350}>\r\n                <TableContainer>\r\n                  <Table>\r\n                    <TableHead className={classes.root}>\r\n                      <TableRow>\r\n                        <TableCell>First Name</TableCell>\r\n                        <TableCell>Last Name</TableCell>\r\n                        <TableCell>Email</TableCell>\r\n                        <TableCell></TableCell>\r\n                      </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                      {props.userList.map((record, index) => {\r\n                        if (record.userType === 'Buyer') {\r\n                          return (\r\n                            <TableRow key={index} hover>\r\n                              <TableCell>{record.firstName}</TableCell>\r\n                              <TableCell>{record.lastName}</TableCell>\r\n                              <TableCell>{record.email}</TableCell>\r\n                              <TableCell>\r\n                                <ButtonGroup variant='text'>\r\n                                  <Button>\r\n                                    <EditIcon\r\n                                      color='action'\r\n                                      onClick={() => {\r\n                                        setCurrentId(record.userId)\r\n                                        setOpenPopup(true)\r\n                                      }}\r\n                                    />\r\n                                  </Button>\r\n                                  <Button>\r\n                                    <DeleteIcon\r\n                                      color='action'\r\n                                      onClick={() => {\r\n                                        onDelete(record.userId)\r\n                                      }}\r\n                                    />\r\n                                  </Button>\r\n                                </ButtonGroup>\r\n                              </TableCell>\r\n                            </TableRow>\r\n                          )\r\n                        }\r\n                      })}\r\n                    </TableBody>\r\n                  </Table>\r\n                </TableContainer>\r\n              </InfiniteScroll>\r\n            </Grid>\r\n            <Popup\r\n              title='Edit Buyer Details'\r\n              openPopup={openPopup}\r\n              setOpenPopup={setOpenPopup}\r\n            >\r\n              <BuyerForm {...{ currentId, setCurrentId, setOpenPopup }} />\r\n            </Popup>\r\n          </Grid>\r\n        </Paper>\r\n      </section>\r\n      <Footer />\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  userList: state.users.list,\r\n})\r\n\r\nconst mapActionToProps = {\r\n  fetchAllUsers: actions.fetchAll,\r\n  deleteUser: actions.Delete,\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapActionToProps\r\n)(withStyles(styles)(AdminBuyerList))\r\n","import React, { useEffect, useState } from 'react'\r\nimport {\r\n  Grid,\r\n  TextField,\r\n  withStyles,\r\n  FormControl,\r\n  InputLabel,\r\n  Select,\r\n  MenuItem,\r\n  Button,\r\n  FormHelperText,\r\n} from '@material-ui/core'\r\nimport useForm from '../useForm'\r\nimport { connect } from 'react-redux'\r\nimport * as actions from '../actions/users'\r\nimport { useToasts } from 'react-toast-notifications'\r\n\r\nimport Message from './Message'\r\n\r\nconst styles = (theme) => ({\r\n  root: {\r\n    '& .MuiTextField-root': {\r\n      margin: theme.spacing(1),\r\n      minWidth: '100%',\r\n    },\r\n  },\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    minWidth: '100%',\r\n  },\r\n  smMargin: {\r\n    margin: theme.spacing(1),\r\n  },\r\n})\r\n\r\nconst initialFieldValues = {\r\n  firstName: '',\r\n  lastName: '',\r\n  address: '',\r\n  userType: 'Seller',\r\n  category: '',\r\n  email: '',\r\n  password: '',\r\n}\r\n\r\nconst SellersForm = ({ classes, ...props }) => {\r\n  const { addToast } = useToasts()\r\n\r\n  const [error, setError] = useState(false)\r\n\r\n  const validate = (fieldValues = values) => {\r\n    let temp = { ...errors }\r\n    if ('firstName' in fieldValues)\r\n      temp.firstName = fieldValues.firstName ? '' : 'This field is required.'\r\n    if ('lastName' in fieldValues)\r\n      temp.lastName = fieldValues.lastName ? '' : 'This field is required.'\r\n    if ('userTpye' in fieldValues)\r\n      temp.userType = fieldValues.userType ? '' : 'This field is required.'\r\n    if ('password' in fieldValues)\r\n      temp.password = fieldValues.password ? '' : 'This field is required.'\r\n    if ('category' in fieldValues)\r\n      temp.category = fieldValues.category ? '' : 'This field is required.'\r\n    if ('email' in fieldValues)\r\n      temp.email = /^$|.+@.+..+/.test(fieldValues.email)\r\n        ? ''\r\n        : 'Email is not valid.'\r\n    setErrors({\r\n      ...temp,\r\n    })\r\n\r\n    if (fieldValues === values)\r\n      return Object.values(temp).every((x) => x === '')\r\n  }\r\n\r\n  const { values, setValues, errors, setErrors, handleInputChange, resetForm } =\r\n    useForm(\r\n      initialFieldValues,\r\n      validate,\r\n      props.setCurrentId,\r\n      props.setOpenPopup\r\n    )\r\n\r\n  //material-ui select\r\n  const inputLabel = React.useRef(null)\r\n  const [labelWidth, setLabelWidth] = React.useState(0)\r\n  React.useEffect(() => {\r\n    setLabelWidth(inputLabel.current.offsetWidth)\r\n  }, [])\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault()\r\n    if (validate()) {\r\n      const onSuccess = () => {\r\n        resetForm()\r\n        addToast('Submitted successfully', { appearance: 'success' })\r\n      }\r\n      if (props.currentId === 0) {\r\n        props.createUser(values, onSuccess)\r\n      } else {\r\n        props.updateUser(props.currentId, values, onSuccess)\r\n      }\r\n    } else {\r\n      setError(true)\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (props.currentId !== 0) {\r\n      setValues({\r\n        ...props.userList.find((x) => x.userId === props.currentId),\r\n      })\r\n      setErrors({})\r\n    }\r\n  }, [])\r\n  return (\r\n    <>\r\n      {error && (\r\n        <Message variant='danger'>\r\n          Something went wrong! Please try again!\r\n        </Message>\r\n      )}\r\n      <form\r\n        autoComplete='off'\r\n        noValidate\r\n        className={classes.root}\r\n        onSubmit={handleSubmit}\r\n      >\r\n        <Grid container>\r\n          <TextField\r\n            name='firstName'\r\n            variant='outlined'\r\n            label='First Name'\r\n            value={values.firstName}\r\n            onChange={handleInputChange}\r\n            {...(errors.firstName && {\r\n              error: true,\r\n              helperText: errors.firstName,\r\n            })}\r\n          />\r\n          <TextField\r\n            name='lastName'\r\n            variant='outlined'\r\n            label='Last Name'\r\n            value={values.lastName}\r\n            onChange={handleInputChange}\r\n            {...(errors.lastName && {\r\n              error: true,\r\n              helperText: errors.lastName,\r\n            })}\r\n          />\r\n          <FormControl\r\n            variant='outlined'\r\n            className={classes.formControl}\r\n            {...(errors.category && { error: true })}\r\n          >\r\n            <InputLabel ref={inputLabel}>Category</InputLabel>\r\n            <Select\r\n              name='category'\r\n              value={values.category}\r\n              onChange={handleInputChange}\r\n              labelWidth={labelWidth}\r\n            >\r\n              <MenuItem value=''>Select a Category</MenuItem>\r\n              <MenuItem value='illustration'>Illustration</MenuItem>\r\n              <MenuItem value='albumCovers'>Album Covers</MenuItem>\r\n              <MenuItem value='vectorArts'>Vector Arts</MenuItem>\r\n              <MenuItem value='photoEditing'>Photo Editing</MenuItem>\r\n              <MenuItem value='videoEditing'>Video Editing</MenuItem>\r\n              <MenuItem value='uiDesigning'>UI Designing</MenuItem>\r\n            </Select>\r\n            {errors.category && (\r\n              <FormHelperText>{errors.category}</FormHelperText>\r\n            )}\r\n          </FormControl>\r\n\r\n          <TextField\r\n            name='email'\r\n            variant='outlined'\r\n            label='Email'\r\n            value={values.email}\r\n            onChange={handleInputChange}\r\n            {...(errors.email && { error: true, helperText: errors.email })}\r\n          />\r\n          <TextField\r\n            name='address'\r\n            variant='outlined'\r\n            label='Address'\r\n            value={values.address}\r\n            onChange={handleInputChange}\r\n            {...(errors.address && { error: true, helperText: errors.address })}\r\n          />\r\n          <Grid container justify='flex-end'>\r\n            <Button\r\n              variant='contained'\r\n              style={{ color: 'green' }}\r\n              type='submit'\r\n              className={classes.smMargin}\r\n            >\r\n              Submit\r\n            </Button>\r\n          </Grid>\r\n        </Grid>\r\n      </form>\r\n    </>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  userList: state.users.list,\r\n})\r\n\r\nconst mapActionToProps = {\r\n  createUser: actions.create,\r\n  updateUser: actions.update,\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapActionToProps\r\n)(withStyles(styles)(SellersForm))\r\n","import React, { Fragment, useState, useEffect } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { useHistory } from 'react-router-dom'\r\nimport InfiniteScroll from 'react-infinite-scroll-component'\r\n\r\nimport {\r\n  Grid,\r\n  Paper,\r\n  TableContainer,\r\n  Table,\r\n  TableHead,\r\n  TableRow,\r\n  TableCell,\r\n  TableBody,\r\n  withStyles,\r\n  ButtonGroup,\r\n  Button,\r\n} from '@material-ui/core'\r\nimport EditIcon from '@material-ui/icons/Edit'\r\nimport DeleteIcon from '@material-ui/icons/Delete'\r\nimport { useToasts } from 'react-toast-notifications'\r\n\r\nimport SellerForm from '../components/SellerForm'\r\nimport * as actions from '../actions/users'\r\nimport Popup from '../components/Popup'\r\nimport AdminNav from '../components/AdminNav'\r\nimport Footer from '../components/Footer'\r\n\r\nconst styles = (theme) => ({\r\n  root: {\r\n    '& .MuiTableCell-head': {\r\n      fontSize: '1.25rem',\r\n    },\r\n  },\r\n  paper: {\r\n    margin: theme.spacing(2),\r\n    padding: theme.spacing(2),\r\n  },\r\n})\r\n\r\nconst AdminSellersList = ({ classes, ...props }) => {\r\n  const { addToast } = useToasts()\r\n  const history = useHistory()\r\n  const adminId = history.location.state\r\n\r\n  const [currentId, setCurrentId] = useState(0)\r\n  const [openPopup, setOpenPopup] = useState(false)\r\n\r\n  useEffect(() => {\r\n    if (!history.location.state) {\r\n      history.push('/login')\r\n    }\r\n    props.fetchAllUsers()\r\n  }, [props, history])\r\n\r\n  const onDelete = (id) => {\r\n    if (window.confirm('Are you sure to delete this record?'))\r\n      props.deleteUser(id, () =>\r\n        addToast('Deleted successfully', { appearance: 'info' })\r\n      )\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n      <AdminNav {...{ adminId }} />\r\n      <section className='container'>\r\n        <Paper className={classes.paper} elevation={3}>\r\n          <Grid>\r\n            <Grid item xs={12}>\r\n              <InfiniteScroll dataLength={6} height={350}>\r\n                <TableContainer>\r\n                  <Table>\r\n                    <TableHead className={classes.root}>\r\n                      <TableRow>\r\n                        <TableCell>Seller Id</TableCell>\r\n                        <TableCell>First Name</TableCell>\r\n                        <TableCell>Last Name</TableCell>\r\n                        <TableCell>Address</TableCell>\r\n                        <TableCell>Category</TableCell>\r\n                        <TableCell>Email</TableCell>\r\n                        <TableCell></TableCell>\r\n                      </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                      {props.userList.map((record, index) => {\r\n                        if (record.userType === 'Seller') {\r\n                          return (\r\n                            <TableRow key={index} hover>\r\n                              <TableCell>{record.userId}</TableCell>\r\n                              <TableCell>{record.firstName}</TableCell>\r\n                              <TableCell>{record.lastName}</TableCell>\r\n                              <TableCell>{record.address}</TableCell>\r\n                              <TableCell>{record.category}</TableCell>\r\n                              <TableCell>{record.email}</TableCell>\r\n                              <TableCell>\r\n                                <ButtonGroup variant='text'>\r\n                                  <Button>\r\n                                    <EditIcon\r\n                                      color='action'\r\n                                      onClick={() => {\r\n                                        setCurrentId(record.userId)\r\n                                        setOpenPopup(true)\r\n                                      }}\r\n                                    />\r\n                                  </Button>\r\n                                  <Button>\r\n                                    <DeleteIcon\r\n                                      color='action'\r\n                                      onClick={() => {\r\n                                        onDelete(record.userId)\r\n                                      }}\r\n                                    />\r\n                                  </Button>\r\n                                </ButtonGroup>\r\n                              </TableCell>\r\n                            </TableRow>\r\n                          )\r\n                        }\r\n                      })}\r\n                    </TableBody>\r\n                  </Table>\r\n                </TableContainer>\r\n              </InfiniteScroll>\r\n            </Grid>\r\n            <Popup\r\n              title='Edit Seller Details'\r\n              openPopup={openPopup}\r\n              setOpenPopup={setOpenPopup}\r\n            >\r\n              <SellerForm {...{ currentId, setCurrentId, setOpenPopup }} />\r\n            </Popup>\r\n          </Grid>\r\n        </Paper>\r\n      </section>\r\n      <Footer />\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  userList: state.users.list,\r\n})\r\n\r\nconst mapActionToProps = {\r\n  fetchAllUsers: actions.fetchAll,\r\n  deleteUser: actions.Delete,\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapActionToProps\r\n)(withStyles(styles)(AdminSellersList))\r\n","import React, { useEffect } from 'react'\r\nimport { Grid, TextField, withStyles, Button } from '@material-ui/core'\r\nimport useForm from '../useForm'\r\nimport { connect } from 'react-redux'\r\nimport * as actions from '../actions/users'\r\nimport { useToasts } from 'react-toast-notifications'\r\n\r\nconst styles = (theme) => ({\r\n  root: {\r\n    '& .MuiTextField-root': {\r\n      margin: theme.spacing(1),\r\n      minWidth: '100%',\r\n    },\r\n  },\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    minWidth: '100%',\r\n  },\r\n  smMargin: {\r\n    margin: theme.spacing(1),\r\n  },\r\n})\r\n\r\nconst initialFieldValues = {\r\n  firstName: '',\r\n  lastName: '',\r\n  address: '',\r\n  userType: 'Seller',\r\n  category: '',\r\n  email: '',\r\n  password: '',\r\n}\r\n\r\nconst AdminForm = ({ classes, ...props }) => {\r\n  const { addToast } = useToasts()\r\n\r\n  const validate = (fieldValues = values) => {\r\n    let temp = { ...errors }\r\n    if ('firstName' in fieldValues)\r\n      temp.firstName = fieldValues.firstName ? '' : 'This field is required.'\r\n    if ('lastName' in fieldValues)\r\n      temp.lastName = fieldValues.lastName ? '' : 'This field is required.'\r\n    if ('address' in fieldValues)\r\n      temp.address = fieldValues.address ? '' : 'This field is required.'\r\n    if ('email' in fieldValues)\r\n      temp.email = /^$|.+@.+..+/.test(fieldValues.email)\r\n        ? ''\r\n        : 'Email is not valid.'\r\n    setErrors({\r\n      ...temp,\r\n    })\r\n\r\n    if (fieldValues === values)\r\n      return Object.values(temp).every((x) => x === '')\r\n  }\r\n\r\n  const { values, setValues, errors, setErrors, handleInputChange, resetForm } =\r\n    useForm(\r\n      initialFieldValues,\r\n      validate,\r\n      props.setCurrentId,\r\n      props.setOpenPopup\r\n    )\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault()\r\n    if (validate()) {\r\n      const onSuccess = () => {\r\n        resetForm()\r\n        addToast('Submitted successfully', { appearance: 'success' })\r\n      }\r\n      if (props.currentId === 0) {\r\n        props.createUser(values, onSuccess)\r\n      } else {\r\n        props.updateUser(props.currentId, values, onSuccess)\r\n      }\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (props.currentId !== 0) {\r\n      setValues({\r\n        ...props.userList.find((x) => x.userId === props.currentId),\r\n      })\r\n      setErrors({})\r\n    }\r\n  }, [props.currentId, props.userList, setValues, setErrors])\r\n  return (\r\n    <form\r\n      autoComplete='off'\r\n      noValidate\r\n      className={classes.root}\r\n      onSubmit={handleSubmit}\r\n    >\r\n      <Grid container>\r\n        <TextField\r\n          name='firstName'\r\n          variant='outlined'\r\n          label='First Name'\r\n          value={values.firstName}\r\n          onChange={handleInputChange}\r\n          {...(errors.firstName && {\r\n            error: true,\r\n            helperText: errors.firstName,\r\n          })}\r\n        />\r\n        <TextField\r\n          name='lastName'\r\n          variant='outlined'\r\n          label='Last Name'\r\n          value={values.lastName}\r\n          onChange={handleInputChange}\r\n          {...(errors.lastName && {\r\n            error: true,\r\n            helperText: errors.lastName,\r\n          })}\r\n        />\r\n\r\n        <TextField\r\n          name='email'\r\n          variant='outlined'\r\n          label='Email'\r\n          value={values.email}\r\n          onChange={handleInputChange}\r\n          {...(errors.email && { error: true, helperText: errors.email })}\r\n        />\r\n        <TextField\r\n          name='address'\r\n          variant='outlined'\r\n          label='Address'\r\n          value={values.address}\r\n          onChange={handleInputChange}\r\n          {...(errors.address && { error: true, helperText: errors.address })}\r\n        />\r\n        <Grid container justify='flex-end'>\r\n          <Button\r\n            variant='contained'\r\n            style={{ color: 'green' }}\r\n            type='submit'\r\n            className={classes.smMargin}\r\n          >\r\n            Submit\r\n          </Button>\r\n        </Grid>\r\n      </Grid>\r\n    </form>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  userList: state.users.list,\r\n})\r\n\r\nconst mapActionToProps = {\r\n  createUser: actions.create,\r\n  updateUser: actions.update,\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapActionToProps\r\n)(withStyles(styles)(AdminForm))\r\n","import React, { useEffect, useState, Fragment } from 'react'\r\nimport { Grid, TextField, withStyles, Button } from '@material-ui/core'\r\nimport useForm from '../useForm'\r\nimport { connect } from 'react-redux'\r\nimport * as actions from '../actions/users'\r\nimport { useToasts } from 'react-toast-notifications'\r\nimport { useHistory } from 'react-router-dom'\r\n\r\nimport Message from '../components/Message'\r\n\r\nconst styles = (theme) => ({\r\n  root: {\r\n    '& .MuiTextField-root': {\r\n      margin: theme.spacing(1),\r\n      minWidth: '100%',\r\n    },\r\n  },\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    minWidth: '100%',\r\n  },\r\n  smMargin: {\r\n    margin: theme.spacing(1),\r\n  },\r\n})\r\n\r\nconst initialFieldValues = {\r\n  firstName: '',\r\n  lastName: '',\r\n  address: '',\r\n  userType: '',\r\n  category: '',\r\n  email: '',\r\n  password: '',\r\n}\r\n\r\nconst AdminRegister = ({ classes, ...props }) => {\r\n  const { addToast } = useToasts()\r\n  let history = useHistory()\r\n\r\n  const [error, setError] = useState(false)\r\n\r\n  const validate = (fieldValues = values) => {\r\n    let temp = { ...errors }\r\n    if ('firstName' in fieldValues)\r\n      temp.firstName = fieldValues.firstName ? '' : 'This field is required.'\r\n    if ('lastName' in fieldValues)\r\n      temp.lastName = fieldValues.lastName ? '' : 'This field is required.'\r\n    if ('userTpye' in fieldValues)\r\n      temp.userType = fieldValues.userType ? '' : 'This field is required.'\r\n    if ('password' in fieldValues)\r\n      temp.password = fieldValues.password ? '' : 'This field is required.'\r\n    if ('category' in fieldValues)\r\n      temp.category = fieldValues.category ? '' : 'This field is required.'\r\n    if ('email' in fieldValues)\r\n      temp.email = /^$|.+@.+..+/.test(fieldValues.email)\r\n        ? ''\r\n        : 'Email is not valid.'\r\n    setErrors({\r\n      ...temp,\r\n    })\r\n\r\n    if (fieldValues === values)\r\n      return Object.values(temp).every((x) => x === '')\r\n  }\r\n\r\n  const { values, setValues, errors, setErrors, handleInputChange, resetForm } =\r\n    useForm(\r\n      initialFieldValues,\r\n      validate,\r\n      props.setCurrentId,\r\n      props.setOpenPopup\r\n    )\r\n\r\n  const setRole = (fieldValues = values) => {\r\n    fieldValues.userType = 'Admin'\r\n  }\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault()\r\n    setRole()\r\n    if (validate()) {\r\n      history.push({\r\n        pathname: '/admin',\r\n        state: values.email,\r\n      })\r\n      const onSuccess = () => {\r\n        resetForm()\r\n        addToast('Submitted successfully', { appearance: 'success' })\r\n      }\r\n\r\n      props.createUser(values, onSuccess)\r\n    } else {\r\n      setError(true)\r\n    }\r\n  }\r\n\r\n  useEffect(\r\n    () => {\r\n      if (props.currentId !== 0) {\r\n        setValues({\r\n          ...props.userList.find((x) => x.userId === props.currentId),\r\n        })\r\n        setErrors({})\r\n      }\r\n    },\r\n    [props.currentId, props.userList],\r\n    setErrors,\r\n    setValues\r\n  )\r\n  return (\r\n    <Fragment>\r\n      <section className='container'>\r\n        <div>\r\n          <h1 className='large text-primary'>Add an Admin!</h1>\r\n          <p className='lead'>\r\n            <i className='fas fa-user'></i> Create the Profile of the new Admin\r\n          </p>\r\n        </div>\r\n        {error && (\r\n          <Message variant='danger'>\r\n            Something went wrong! Please try again!\r\n          </Message>\r\n        )}\r\n        <form\r\n          autoComplete='off'\r\n          noValidate\r\n          className={classes.root}\r\n          onSubmit={handleSubmit}\r\n        >\r\n          <Grid container>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                name='firstName'\r\n                variant='outlined'\r\n                label='First Name'\r\n                value={values.firstName}\r\n                onChange={handleInputChange}\r\n                {...(errors.firstName && {\r\n                  error: true,\r\n                  helperText: errors.firstName,\r\n                })}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                name='lastName'\r\n                variant='outlined'\r\n                label='Last Name'\r\n                value={values.lastName}\r\n                onChange={handleInputChange}\r\n                {...(errors.lastName && {\r\n                  error: true,\r\n                  helperText: errors.lastName,\r\n                })}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                name='email'\r\n                variant='outlined'\r\n                label='Email'\r\n                value={values.email}\r\n                onChange={handleInputChange}\r\n                {...(errors.email && { error: true, helperText: errors.email })}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                name='address'\r\n                variant='outlined'\r\n                label='Address'\r\n                value={values.address}\r\n                onChange={handleInputChange}\r\n                {...(errors.address && {\r\n                  error: true,\r\n                  helperText: errors.address,\r\n                })}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                name='password'\r\n                variant='outlined'\r\n                label='Password'\r\n                value={values.password}\r\n                onChange={handleInputChange}\r\n                {...(errors.password && {\r\n                  error: true,\r\n                  helperText: errors.password,\r\n                })}\r\n              />\r\n              <div>{props.currentId}</div>\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <div>\r\n                <Button\r\n                  variant='contained'\r\n                  style={{ color: 'green' }}\r\n                  type='submit'\r\n                  className={classes.smMargin}\r\n                >\r\n                  Submit\r\n                </Button>\r\n              </div>\r\n            </Grid>\r\n          </Grid>\r\n        </form>\r\n      </section>\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  userList: state.users.list,\r\n})\r\n\r\nconst mapActionToProps = {\r\n  createUser: actions.create,\r\n  updateUser: actions.update,\r\n  fetchAllUsers: actions.fetchAll,\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapActionToProps\r\n)(withStyles(styles)(AdminRegister))\r\n","import React, { Fragment, useState, useEffect } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { useHistory } from 'react-router-dom'\r\n\r\nimport {\r\n  Grid,\r\n  Paper,\r\n  TableContainer,\r\n  Table,\r\n  TableHead,\r\n  TableRow,\r\n  TableCell,\r\n  TableBody,\r\n  withStyles,\r\n  ButtonGroup,\r\n  Button,\r\n} from '@material-ui/core'\r\nimport EditIcon from '@material-ui/icons/Edit'\r\nimport DeleteIcon from '@material-ui/icons/Delete'\r\nimport { useToasts } from 'react-toast-notifications'\r\n\r\nimport AdminForm from '../components/AdminForm'\r\nimport * as actions from '../actions/users'\r\nimport Popup from '../components/Popup'\r\nimport AdminNav from '../components/AdminNav'\r\nimport Footer from '../components/Footer'\r\nimport AddanAdmin from '../components/AdminRegister'\r\nimport InfiniteScroll from 'react-infinite-scroll-component'\r\n\r\nconst styles = (theme) => ({\r\n  root: {\r\n    '& .MuiTableCell-head': {\r\n      fontSize: '1.25rem',\r\n    },\r\n  },\r\n  paper: {\r\n    margin: theme.spacing(2),\r\n    padding: theme.spacing(2),\r\n  },\r\n})\r\n\r\nconst AdminAdminsList = ({ classes, ...props }) => {\r\n  const { addToast } = useToasts()\r\n  const history = useHistory()\r\n  const adminId = history.location.state\r\n\r\n  const [currentId, setCurrentId] = useState(0)\r\n  const [openPopup, setOpenPopup] = useState(false)\r\n\r\n  useEffect(() => {\r\n    if (!history.location.state) {\r\n      history.push('/login')\r\n    }\r\n    props.fetchAllUsers()\r\n  }, [props, history.location.state])\r\n\r\n  const onDelete = (id) => {\r\n    if (window.confirm('Are you sure to delete this record?'))\r\n      props.deleteUser(id, () =>\r\n        addToast('Deleted successfully', { appearance: 'info' })\r\n      )\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n      <AdminNav {...{ adminId }} />\r\n      <section className='container'>\r\n        <Paper className={classes.paper} elevation={3}>\r\n          <Grid>\r\n            <Grid item xs={12}>\r\n              <InfiniteScroll dataLength={6} height={350}>\r\n                <TableContainer>\r\n                  <Table>\r\n                    <TableHead className={classes.root}>\r\n                      <TableRow>\r\n                        <TableCell>First Name</TableCell>\r\n                        <TableCell>Last Name</TableCell>\r\n                        <TableCell>Address</TableCell>\r\n                        <TableCell>Email</TableCell>\r\n                        <TableCell></TableCell>\r\n                      </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                      {props.userList.map((record, index) => {\r\n                        if (record.userType === 'Admin') {\r\n                          return (\r\n                            <TableRow key={index} hover>\r\n                              <TableCell>{record.firstName}</TableCell>\r\n                              <TableCell>{record.lastName}</TableCell>\r\n                              <TableCell>{record.address}</TableCell>\r\n                              <TableCell>{record.email}</TableCell>\r\n                              <TableCell>\r\n                                <ButtonGroup variant='text'>\r\n                                  <Button>\r\n                                    <EditIcon\r\n                                      color='action'\r\n                                      onClick={() => {\r\n                                        setCurrentId(record.userId)\r\n                                        setOpenPopup(true)\r\n                                      }}\r\n                                    />\r\n                                  </Button>\r\n                                  <Button>\r\n                                    <DeleteIcon\r\n                                      color='action'\r\n                                      onClick={() => {\r\n                                        onDelete(record.userId)\r\n                                      }}\r\n                                    />\r\n                                  </Button>\r\n                                </ButtonGroup>\r\n                              </TableCell>\r\n                            </TableRow>\r\n                          )\r\n                        }\r\n                      })}\r\n                    </TableBody>\r\n                  </Table>\r\n                </TableContainer>\r\n              </InfiniteScroll>\r\n            </Grid>\r\n            <Popup\r\n              title='Edit Admin Details'\r\n              openPopup={openPopup}\r\n              setOpenPopup={setOpenPopup}\r\n            >\r\n              <AdminForm {...{ currentId, setCurrentId, setOpenPopup }} />\r\n            </Popup>\r\n          </Grid>\r\n        </Paper>\r\n        <AddanAdmin />\r\n      </section>\r\n      <Footer />\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  userList: state.users.list,\r\n})\r\n\r\nconst mapActionToProps = {\r\n  fetchAllUsers: actions.fetchAll,\r\n  deleteUser: actions.Delete,\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapActionToProps\r\n)(withStyles(styles)(AdminAdminsList))\r\n","import axios from 'axios'\r\n\r\nconst baseUrl = process.env.REACT_APP_API_URL\r\n\r\nexport default {\r\n  gigs(url = baseUrl + '/gig/') {\r\n    return {\r\n      fetchAll: () => axios.get(url),\r\n      fetchById: (id) => axios.get(url + id),\r\n      create: (newRecord) => axios.post(url, newRecord),\r\n      update: (id, updatedRecord) => axios.put(url + id, updatedRecord),\r\n      delete: (id) => axios.delete(url + id),\r\n    }\r\n  },\r\n}\r\n","import api from './gig'\r\n\r\nexport const ACTION_TYPES = {\r\n  CREATE: 'CREATE',\r\n  UPDATE: 'UPDATE',\r\n  DELETE: 'DELETE',\r\n  FETCH_ALL: 'FETCH_ALL',\r\n}\r\n\r\nconst formateData = (data) => ({\r\n  ...data,\r\n  age: parseInt(data.age ? data.age : 0),\r\n})\r\n\r\nexport const fetchAll = () => (dispatch) => {\r\n  api\r\n    .gigs()\r\n    .fetchAll()\r\n    .then((response) => {\r\n      console.log(response)\r\n      dispatch({\r\n        type: ACTION_TYPES.FETCH_ALL,\r\n        payload: response.data,\r\n      })\r\n    })\r\n    .catch((error) => console.log(error))\r\n}\r\n\r\nexport const create = (data, onSuccess) => (dispatch) => {\r\n  data = formateData(data)\r\n  api\r\n    .gigs()\r\n    .create(data)\r\n    .then((res) => {\r\n      dispatch({\r\n        type: ACTION_TYPES.CREATE,\r\n        payload: res.data,\r\n      })\r\n      onSuccess()\r\n    })\r\n    .catch((err) => console.log(err))\r\n}\r\n\r\nexport const update = (id, data, onSuccess) => (dispatch) => {\r\n  data = formateData(data)\r\n  api\r\n    .gigs()\r\n    .update(id, data)\r\n    .then((res) => {\r\n      dispatch({\r\n        type: ACTION_TYPES.UPDATE,\r\n        payload: { id, ...data },\r\n      })\r\n      onSuccess()\r\n    })\r\n    .catch((err) => console.log(err))\r\n}\r\n\r\nexport const Delete = (id, onSuccess) => (dispatch) => {\r\n  api\r\n    .gigs()\r\n    .delete(id)\r\n    .then((res) => {\r\n      dispatch({\r\n        type: ACTION_TYPES.DELETE,\r\n        payload: id,\r\n      })\r\n      onSuccess()\r\n    })\r\n    .catch((err) => console.log(err))\r\n}\r\n","import React, { useEffect, useState } from 'react'\r\nimport { Grid, TextField, withStyles, Button } from '@material-ui/core'\r\nimport useForm from '../useForm'\r\nimport { connect } from 'react-redux'\r\nimport * as actions from '../actions/gigs'\r\nimport { useToasts } from 'react-toast-notifications'\r\n\r\nimport Message from './Message'\r\n\r\nconst styles = (theme) => ({\r\n  root: {\r\n    '& .MuiTextField-root': {\r\n      margin: theme.spacing(1),\r\n      minWidth: '100%',\r\n    },\r\n  },\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    minWidth: '100%',\r\n  },\r\n  smMargin: {\r\n    margin: theme.spacing(1),\r\n  },\r\n})\r\n\r\nconst initialFieldValues = {\r\n  startDate: new Date().toISOString(),\r\n  deadline: '0001-01-01T00:00:00',\r\n  category: 'None',\r\n  buyerRating: 0,\r\n  sellerRating: 0,\r\n  description: 'I need ...',\r\n  buyerId: 0,\r\n  sellerId: 0,\r\n  delivered: false,\r\n  price: 0,\r\n}\r\n\r\nconst SellersForm = ({ classes, ...props }) => {\r\n  const { addToast } = useToasts()\r\n\r\n  const [error, setError] = useState(false)\r\n\r\n  const validate = (fieldValues = values) => {\r\n    let temp = { ...errors }\r\n    if ('sellerId' in fieldValues)\r\n      temp.sellerId = fieldValues.sellerId ? '' : 'This field is required.'\r\n    setErrors({\r\n      ...temp,\r\n    })\r\n\r\n    if (fieldValues === values)\r\n      return Object.values(temp).every((x) => x === '')\r\n  }\r\n\r\n  const { values, setValues, errors, setErrors, handleInputChange, resetForm } =\r\n    useForm(\r\n      initialFieldValues,\r\n      validate,\r\n      props.setCurrentId,\r\n      props.setOpenPopup\r\n    )\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault()\r\n    if (validate()) {\r\n      const onSuccess = () => {\r\n        resetForm()\r\n        addToast('Seller assigned successfully!', { appearance: 'success' })\r\n      }\r\n      if (props.currentId === 0) {\r\n        props.createGig(values, onSuccess)\r\n      } else {\r\n        props.updateGig(props.currentId, values, onSuccess)\r\n      }\r\n    } else {\r\n      setError(true)\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (props.currentId !== 0) {\r\n      setValues({\r\n        ...props.gigList.find((x) => x.gigId === props.currentId),\r\n      })\r\n      setErrors({})\r\n    }\r\n  }, [])\r\n  return (\r\n    <>\r\n      {error && (\r\n        <Message variant='danger'>\r\n          Something went wrong! Please try again!\r\n        </Message>\r\n      )}\r\n      <form\r\n        autoComplete='off'\r\n        noValidate\r\n        className={classes.root}\r\n        onSubmit={handleSubmit}\r\n      >\r\n        <Grid container>\r\n          <TextField\r\n            name='sellerId'\r\n            variant='outlined'\r\n            label='Enter the Seller Id'\r\n            value={values.sellerId}\r\n            onChange={handleInputChange}\r\n            {...(errors.sellerId && {\r\n              error: true,\r\n              helperText: errors.sellerId,\r\n            })}\r\n          />\r\n          <Grid container justify='flex-end'>\r\n            <Button\r\n              variant='contained'\r\n              style={{ color: 'green' }}\r\n              type='submit'\r\n              className={classes.smMargin}\r\n            >\r\n              Submit\r\n            </Button>\r\n          </Grid>\r\n        </Grid>\r\n      </form>\r\n    </>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  gigList: state.gigs.list,\r\n})\r\n\r\nconst mapActionToProps = {\r\n  createGig: actions.create,\r\n  updateGig: actions.update,\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapActionToProps\r\n)(withStyles(styles)(SellersForm))\r\n","import React, { Fragment, useState, useEffect } from 'react'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport InfiniteScroll from 'react-infinite-scroll-component'\r\nimport * as actions from '../actions/gigs'\r\nimport {\r\n  Grid,\r\n  Paper,\r\n  TableContainer,\r\n  Table,\r\n  TableHead,\r\n  TableRow,\r\n  TableCell,\r\n  TableBody,\r\n  withStyles,\r\n} from '@material-ui/core'\r\n\r\nimport CheckCircleOutlineIcon from '@material-ui/icons/CheckCircleOutline'\r\nimport NotInterestedIcon from '@material-ui/icons/NotInterested'\r\nimport IconButton from '@material-ui/core/IconButton'\r\n\r\nimport { useToasts } from 'react-toast-notifications'\r\n\r\nimport Popup from '../components/Popup'\r\nimport AdminNav from '../components/AdminNav'\r\nimport Footer from '../components/Footer'\r\nimport AssignSellerForm from '../components/AssignSellerForm'\r\n\r\nconst styles = (theme) => ({\r\n  root: {\r\n    '& .MuiTableCell-head': {\r\n      fontSize: '1.25rem',\r\n    },\r\n  },\r\n  paper: {\r\n    margin: theme.spacing(2),\r\n    padding: theme.spacing(2),\r\n  },\r\n})\r\n\r\nconst GigsList = ({ classes, ...props }) => {\r\n  const { addToast } = useToasts()\r\n  const history = useHistory()\r\n  const adminId = history.location.state\r\n\r\n  const [currentId, setCurrentId] = useState(0)\r\n  const [openPopup, setOpenPopup] = useState(false)\r\n\r\n  useEffect(() => {\r\n    if (!history.location.state) {\r\n      history.push('/login')\r\n    }\r\n    props.fetchAllGigs()\r\n  }, [props, history])\r\n\r\n  return (\r\n    <Fragment>\r\n      <AdminNav {...{ adminId }} />\r\n      <section className='container'>\r\n        <Paper className={classes.paper} elevation={3}>\r\n          <Grid>\r\n            <Grid item xs={12}>\r\n              <InfiniteScroll dataLength={6} height={350}>\r\n                <TableContainer>\r\n                  <Table>\r\n                    <TableHead className={classes.root}>\r\n                      <TableRow>\r\n                        <TableCell>Gig Id</TableCell>\r\n                        <TableCell>Start Date</TableCell>\r\n                        <TableCell>Deadline</TableCell>\r\n                        <TableCell>Category</TableCell>\r\n                        <TableCell>Description</TableCell>\r\n                        <TableCell>Buyer Id</TableCell>\r\n                        <TableCell>Seller Id</TableCell>\r\n                        <TableCell>Delivered</TableCell>\r\n                        <TableCell>Assign a Seller</TableCell>\r\n                      </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                      {props.gigList.map((record, index) => {\r\n                        return (\r\n                          <TableRow key={index} hover>\r\n                            <TableCell>{record.gigId}</TableCell>\r\n                            <TableCell>{record.startDate}</TableCell>\r\n                            <TableCell>{record.deadline}</TableCell>\r\n                            <TableCell>{record.category}</TableCell>\r\n                            <TableCell>{record.description}</TableCell>\r\n                            <TableCell>{record.buyerId}</TableCell>\r\n                            <TableCell>{record.sellerId}</TableCell>\r\n                            <TableCell>\r\n                              {record.delivered ? (\r\n                                <CheckCircleOutlineIcon\r\n                                  style={{ color: 'green' }}\r\n                                />\r\n                              ) : (\r\n                                <NotInterestedIcon style={{ color: 'red' }} />\r\n                              )}\r\n                            </TableCell>\r\n                            <TableCell>\r\n                              <IconButton\r\n                                style={{ marginRight: '10px' }}\r\n                                aria-label='delete'\r\n                                onClick={() => {\r\n                                  setCurrentId(record.gigId)\r\n                                  setOpenPopup(true)\r\n                                }}\r\n                              >\r\n                                {record.sellerId === 0 ? (\r\n                                  <NotInterestedIcon style={{ color: 'red' }} />\r\n                                ) : (\r\n                                  <CheckCircleOutlineIcon\r\n                                    style={{ color: 'green' }}\r\n                                  />\r\n                                )}\r\n                              </IconButton>\r\n                            </TableCell>\r\n                          </TableRow>\r\n                        )\r\n                      })}\r\n                    </TableBody>\r\n                  </Table>\r\n                </TableContainer>\r\n              </InfiniteScroll>\r\n            </Grid>\r\n            <Popup\r\n              title='Seller Assign Form'\r\n              openPopup={openPopup}\r\n              setOpenPopup={setOpenPopup}\r\n            >\r\n              <AssignSellerForm\r\n                {...{ currentId, setCurrentId, setOpenPopup }}\r\n              />\r\n            </Popup>\r\n          </Grid>\r\n        </Paper>\r\n      </section>\r\n      <Footer />\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  gigList: state.gigs.list,\r\n})\r\n\r\nconst mapActionToProps = {\r\n  fetchAllGigs: actions.fetchAll,\r\n  deleteGig: actions.Delete,\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapActionToProps\r\n)(withStyles(styles)(GigsList))\r\n","import React, { Fragment, useState, useEffect } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { useHistory } from 'react-router-dom'\r\n\r\nimport {\r\n  Grid,\r\n  Paper,\r\n  TableContainer,\r\n  Table,\r\n  TableHead,\r\n  TableRow,\r\n  TableCell,\r\n  withStyles,\r\n  ButtonGroup,\r\n  Button,\r\n} from '@material-ui/core'\r\nimport EditIcon from '@material-ui/icons/Edit'\r\nimport DeleteIcon from '@material-ui/icons/Delete'\r\nimport { useToasts } from 'react-toast-notifications'\r\n\r\nimport AdminForm from '../components/AdminForm'\r\nimport * as actions from '../actions/users'\r\nimport Popup from '../components/Popup'\r\nimport AdminNav from '../components/AdminNav'\r\nimport Footer from '../components/Footer'\r\n\r\nconst styles = (theme) => ({\r\n  root: {\r\n    '& .MuiTableCell-head': {\r\n      fontSize: '1.25rem',\r\n    },\r\n  },\r\n  paper: {\r\n    margin: theme.spacing(2),\r\n    padding: theme.spacing(2),\r\n  },\r\n})\r\n\r\nconst AdminProfile = ({ classes, ...props }) => {\r\n  const { addToast } = useToasts()\r\n  const history = useHistory()\r\n  const profileId = history.location.state\r\n  const adminId = history.location.state\r\n  const [currentId, setCurrentId] = useState(0)\r\n  const [openPopup, setOpenPopup] = useState(false)\r\n\r\n  useEffect(() => {\r\n    if (!history.location.state) {\r\n      history.push('/login')\r\n    }\r\n    props.fetchAllUsers()\r\n  }, [props, history])\r\n\r\n  const onDelete = (id) => {\r\n    if (window.confirm('Are you sure to delete your Admin Profile?'))\r\n      props.deleteUser(id, () =>\r\n        addToast('Deleted successfully', { appearance: 'info' })\r\n      )\r\n    history.push('/login')\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n      <AdminNav {...{ adminId }} />\r\n      <section className='container'>\r\n        <p className='lead'>Edit your Admin Profile!</p>\r\n        <Paper className={classes.paper} elevation={3}>\r\n          <Grid>\r\n            <Grid item xs={12}>\r\n              <TableContainer>\r\n                <Table>\r\n                  {props.userList.map((record, index) => {\r\n                    if (record.userId === profileId) {\r\n                      return (\r\n                        <TableHead className={classes.root}>\r\n                          <TableRow>\r\n                            <TableCell>First Name</TableCell>\r\n                            <TableCell>{record.firstName}</TableCell>\r\n                          </TableRow>\r\n\r\n                          <TableRow>\r\n                            <TableCell>Last Name</TableCell>\r\n                            <TableCell>{record.lastName}</TableCell>\r\n                          </TableRow>\r\n\r\n                          <TableRow>\r\n                            <TableCell>Address</TableCell>\r\n                            <TableCell>{record.address}</TableCell>\r\n                          </TableRow>\r\n\r\n                          <TableRow>\r\n                            <TableCell>Email</TableCell>\r\n                            <TableCell>{record.email}</TableCell>\r\n                          </TableRow>\r\n\r\n                          <TableRow>\r\n                            <TableCell>Edit or Delete</TableCell>\r\n                            <TableCell>\r\n                              <ButtonGroup variant='text'>\r\n                                <Button>\r\n                                  <EditIcon\r\n                                    color='action'\r\n                                    onClick={() => {\r\n                                      setCurrentId(record.userId)\r\n                                      setOpenPopup(true)\r\n                                    }}\r\n                                  />\r\n                                </Button>\r\n                                <Button>\r\n                                  <DeleteIcon\r\n                                    color='action'\r\n                                    onClick={() => {\r\n                                      onDelete(record.userId)\r\n                                    }}\r\n                                  />\r\n                                </Button>\r\n                              </ButtonGroup>\r\n                            </TableCell>\r\n                          </TableRow>\r\n                        </TableHead>\r\n                      )\r\n                    }\r\n                  })}\r\n                </Table>\r\n              </TableContainer>\r\n            </Grid>\r\n            <Popup\r\n              title='Edit your Admin Profile!'\r\n              openPopup={openPopup}\r\n              setOpenPopup={setOpenPopup}\r\n            >\r\n              <AdminForm {...{ currentId, setCurrentId, setOpenPopup }} />\r\n            </Popup>\r\n          </Grid>\r\n        </Paper>\r\n      </section>\r\n      <Footer />\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  userList: state.users.list,\r\n})\r\n\r\nconst mapActionToProps = {\r\n  fetchAllUsers: actions.fetchAll,\r\n  deleteUser: actions.Delete,\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapActionToProps\r\n)(withStyles(styles)(AdminProfile))\r\n","import React, { Fragment } from 'react'\r\n\r\nimport LandingNav from '../components/LandingNav'\r\nimport Footer from '../components/Footer'\r\nimport AddAnAdmin from '../components/AdminRegister'\r\n\r\nconst AdminRegister = () => {\r\n  return (\r\n    <Fragment>\r\n      <LandingNav />\r\n      <section className='container'>\r\n        <AddAnAdmin />\r\n      </section>\r\n      <Footer />\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default AdminRegister\r\n","import React, { useEffect, useState } from 'react'\r\nimport {\r\n  Grid,\r\n  TextField,\r\n  withStyles,\r\n  FormControl,\r\n  InputLabel,\r\n  Select,\r\n  MenuItem,\r\n  Button,\r\n  FormHelperText,\r\n} from '@material-ui/core'\r\nimport useForm from '../useForm'\r\nimport { connect } from 'react-redux'\r\nimport * as actions from '../actions/gigs'\r\nimport { useToasts } from 'react-toast-notifications'\r\n\r\nimport Message from './Message'\r\n\r\nconst styles = (theme) => ({\r\n  root: {\r\n    '& .MuiTextField-root': {\r\n      margin: theme.spacing(1),\r\n      minWidth: '100%',\r\n    },\r\n  },\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    minWidth: '100%',\r\n  },\r\n  smMargin: {\r\n    margin: theme.spacing(1),\r\n  },\r\n})\r\n\r\nconst initialFieldValues = {\r\n  startDate: new Date().toISOString(),\r\n  deadline: '0001-01-01T00:00:00',\r\n  category: '',\r\n  buyerRating: 0,\r\n  sellerRating: 0,\r\n  description: 'I need ...',\r\n  buyerId: 0,\r\n  sellerId: 0,\r\n  delivered: false,\r\n  price: 0,\r\n}\r\n\r\nconst SellersForm = ({ classes, ...props }) => {\r\n  const { addToast } = useToasts()\r\n\r\n  const [error, setError] = useState(false)\r\n\r\n  const validate = (fieldValues = values) => {\r\n    let temp = { ...errors }\r\n    if ('deadline' in fieldValues)\r\n      temp.deadline = fieldValues.deadline ? '' : 'This field is required.'\r\n    if ('description' in fieldValues)\r\n      temp.description = fieldValues.description\r\n        ? ''\r\n        : 'This field is required.'\r\n    if ('price' in fieldValues)\r\n      temp.price = fieldValues.price ? '' : 'This field is required.'\r\n    if ('category' in fieldValues)\r\n      temp.category = fieldValues.category ? '' : 'This field is required.'\r\n    setErrors({\r\n      ...temp,\r\n    })\r\n\r\n    if (fieldValues === values)\r\n      return Object.values(temp).every((x) => x === '')\r\n  }\r\n\r\n  const { values, setValues, errors, setErrors, handleInputChange, resetForm } =\r\n    useForm(\r\n      initialFieldValues,\r\n      validate,\r\n      props.setCurrentId,\r\n      props.setOpenPopup\r\n    )\r\n\r\n  //material-ui select\r\n  const inputLabel = React.useRef(null)\r\n  const [labelWidth, setLabelWidth] = React.useState(0)\r\n  React.useEffect(() => {\r\n    setLabelWidth(inputLabel.current.offsetWidth)\r\n  }, [])\r\n\r\n  const setBuyer = (fieldValues = values) => {\r\n    fieldValues.buyerId = props.userId\r\n  }\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault()\r\n    setBuyer()\r\n    if (validate()) {\r\n      const onSuccess = () => {\r\n        resetForm()\r\n        addToast('Submitted successfully', { appearance: 'success' })\r\n      }\r\n      if (props.currentId === 0) {\r\n        props.createGig(values, onSuccess)\r\n      } else {\r\n        props.updateGig(props.currentId, values, onSuccess)\r\n      }\r\n    } else {\r\n      setError(true)\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (props.currentId !== 0) {\r\n      setValues({\r\n        ...props.gigList.find((x) => x.gigId === props.currentId),\r\n      })\r\n      setErrors({})\r\n    }\r\n  }, [])\r\n  return (\r\n    <>\r\n      {error && (\r\n        <Message variant='danger'>\r\n          Something went wrong! Please try again!\r\n        </Message>\r\n      )}\r\n      <form\r\n        autoComplete='off'\r\n        noValidate\r\n        className={classes.root}\r\n        onSubmit={handleSubmit}\r\n      >\r\n        <Grid container>\r\n          <TextField\r\n            name='description'\r\n            variant='outlined'\r\n            label='Description'\r\n            value={values.description}\r\n            onChange={handleInputChange}\r\n            {...(errors.description && {\r\n              error: true,\r\n              helperText: errors.description,\r\n            })}\r\n          />\r\n          <FormControl\r\n            variant='outlined'\r\n            className={classes.formControl}\r\n            {...(errors.category && { error: true })}\r\n          >\r\n            <InputLabel ref={inputLabel}>Category</InputLabel>\r\n            <Select\r\n              name='category'\r\n              value={values.category}\r\n              onChange={handleInputChange}\r\n              labelWidth={labelWidth}\r\n            >\r\n              <MenuItem value=''>Select a Category</MenuItem>\r\n              <MenuItem value='illustration'>Illustration</MenuItem>\r\n              <MenuItem value='albumCovers'>Album Covers</MenuItem>\r\n              <MenuItem value='vectorArts'>Vector Arts</MenuItem>\r\n              <MenuItem value='photoEditing'>Photo Editing</MenuItem>\r\n              <MenuItem value='videoEditing'>Video Editing</MenuItem>\r\n              <MenuItem value='uiDesigning'>UI Designing</MenuItem>\r\n            </Select>\r\n            {errors.category && (\r\n              <FormHelperText>{errors.category}</FormHelperText>\r\n            )}\r\n          </FormControl>\r\n\r\n          <TextField\r\n            name='deadline'\r\n            variant='outlined'\r\n            type='date'\r\n            defaultValue={new Date()}\r\n            value={values.deadline}\r\n            onChange={handleInputChange}\r\n            {...(errors.deadline && {\r\n              error: true,\r\n              helperText: errors.deadline,\r\n            })}\r\n          />\r\n\r\n          <TextField\r\n            name='price'\r\n            variant='outlined'\r\n            label='price'\r\n            value={values.price}\r\n            onChange={handleInputChange}\r\n            {...(errors.price && { error: true, helperText: errors.price })}\r\n          />\r\n          <Grid container justify='flex-end'>\r\n            <Button\r\n              variant='contained'\r\n              color='primary'\r\n              type='submit'\r\n              className={classes.smMargin}\r\n            >\r\n              Submit\r\n            </Button>\r\n          </Grid>\r\n        </Grid>\r\n      </form>\r\n    </>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  gigList: state.gigs.list,\r\n})\r\n\r\nconst mapActionToProps = {\r\n  createGig: actions.create,\r\n  updateGig: actions.update,\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapActionToProps\r\n)(withStyles(styles)(SellersForm))\r\n","import React, { Fragment, useState, useEffect } from 'react'\r\nimport { useHistory } from 'react-router-dom'\r\n\r\nimport { Grid } from '@material-ui/core'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport Card from '@material-ui/core/Card'\r\nimport CardActionArea from '@material-ui/core/CardActionArea'\r\nimport CardActions from '@material-ui/core/CardActions'\r\nimport CardContent from '@material-ui/core/CardContent'\r\nimport CardMedia from '@material-ui/core/CardMedia'\r\nimport Button from '@material-ui/core/Button'\r\nimport Typography from '@material-ui/core/Typography'\r\n\r\nimport BuyerNav from '../components/BuyerNav'\r\nimport Footer from '../components/Footer'\r\nimport Popup from '../components/Popup'\r\nimport BuyerGigForm from '../components/BuyerGigForm'\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    maxWidth: 345,\r\n    margin: 0,\r\n    padding: 10,\r\n    display: 'block',\r\n    width: '1000px',\r\n    transitionDuration: '0.3s',\r\n    height: '28vw',\r\n    raised: true,\r\n  },\r\n})\r\n\r\nconst Order = () => {\r\n  const [currentId, setCurrentId] = useState(0)\r\n  const [openPopup, setOpenPopup] = useState(false)\r\n  const [userId, setUserId] = useState(false)\r\n\r\n  const classes = useStyles()\r\n  const history = useHistory()\r\n  console.log(history.location.state)\r\n  const buyerId = history.location.state\r\n\r\n  useEffect(() => {\r\n    if (!history.location.state) {\r\n      history.push('/login')\r\n    }\r\n  }, [history.location.state])\r\n\r\n  const openGigForm = () => {\r\n    if (!history.location.state) {\r\n      history.push('/login')\r\n    }\r\n    setUserId(history.location.state)\r\n    setOpenPopup(true)\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n      <BuyerNav {...{ buyerId }} />\r\n      <section className='container'>\r\n        <div></div>\r\n        <Grid container spacing={1}>\r\n          <Grid\r\n            container\r\n            item\r\n            xs={4}\r\n            spacing={0}\r\n            direction='column'\r\n            alignItems='center'\r\n            justify='center'\r\n          >\r\n            <Card className={classes.root}>\r\n              <CardActionArea>\r\n                <CardMedia\r\n                  component='img'\r\n                  alt='Contemplative Reptile'\r\n                  height='140'\r\n                  image='https://images.unsplash.com/photo-1579762593175-20226054cad0?ixid=MXwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHw%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=1107&q=80'\r\n                  title='Contemplative Reptile'\r\n                />\r\n                <CardContent>\r\n                  <Typography gutterBottom variant='h5' component='h2'>\r\n                    Illustration\r\n                  </Typography>\r\n                  <Typography\r\n                    variant='body2'\r\n                    color='textSecondary'\r\n                    component='p'\r\n                  >\r\n                    An illustration is a decoration, interpretation or visual\r\n                    explanation of a text, concept or process, designed for\r\n                    integration in print and digital published media, such as\r\n                    posters, flyers, magazines, books, teaching materials,\r\n                    animations, video games and films. An illustration is\r\n                    typically created by an illustrator.\r\n                  </Typography>\r\n                </CardContent>\r\n              </CardActionArea>\r\n              <CardActions>\r\n                <Button size='small' color='primary' onClick={openGigForm}>\r\n                  Place Order\r\n                </Button>\r\n              </CardActions>\r\n            </Card>\r\n          </Grid>\r\n          <Grid\r\n            container\r\n            item\r\n            xs={4}\r\n            spacing={0}\r\n            direction='column'\r\n            alignItems='center'\r\n            justify='center'\r\n          >\r\n            <Card className={classes.root}>\r\n              <CardActionArea>\r\n                <CardMedia\r\n                  component='img'\r\n                  alt='Contemplative Reptile'\r\n                  height='140'\r\n                  image='https://images.unsplash.com/photo-1542539097-00f1e264494f?ixid=MXwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHw%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=1050&q=80'\r\n                  title='Contemplative Reptile'\r\n                />\r\n                <CardContent>\r\n                  <Typography gutterBottom variant='h5' component='h2'>\r\n                    Album Covers\r\n                  </Typography>\r\n                  <Typography\r\n                    variant='body2'\r\n                    color='textSecondary'\r\n                    component='p'\r\n                  >\r\n                    Besides the practicalities of identifying specific records,\r\n                    album covers serve the purpose of advertising the musical\r\n                    contents on the LP, through the use of graphic design,\r\n                    photography, and/or illustration. An album cover normally\r\n                    has the artist's name, sometimes in logo form; and the album\r\n                    title.\r\n                  </Typography>\r\n                </CardContent>\r\n              </CardActionArea>\r\n              <CardActions>\r\n                <Button size='small' color='primary' onClick={openGigForm}>\r\n                  Place Order\r\n                </Button>\r\n              </CardActions>\r\n            </Card>\r\n          </Grid>\r\n          <Grid\r\n            container\r\n            item\r\n            xs={4}\r\n            spacing={0}\r\n            direction='column'\r\n            alignItems='center'\r\n            justify='center'\r\n          >\r\n            <Card className={classes.root}>\r\n              <CardActionArea>\r\n                <CardMedia\r\n                  component='img'\r\n                  alt='Contemplative Reptile'\r\n                  height='140'\r\n                  image='https://images.unsplash.com/photo-1499781350541-7783f6c6a0c8?ixid=MXwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHw%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=1115&q=80'\r\n                  title='Contemplative Reptile'\r\n                />\r\n                <CardContent>\r\n                  <Typography gutterBottom variant='h5' component='h2'>\r\n                    Vector Arts\r\n                  </Typography>\r\n                  <Typography\r\n                    variant='body2'\r\n                    color='textSecondary'\r\n                    component='p'\r\n                  >\r\n                    Vector artwork is art that's made up of vector graphics.\r\n                    These graphics are points, lines, curves and shapes that are\r\n                    based on mathematical formulas. When you scale a vector\r\n                    image file, it isn't low resolution and there's no loss of\r\n                    quality, so it can be sized to however large or small you\r\n                    need it to be.\r\n                  </Typography>\r\n                </CardContent>\r\n              </CardActionArea>\r\n              <CardActions>\r\n                <Button size='small' color='primary' onClick={openGigForm}>\r\n                  Place Order\r\n                </Button>\r\n              </CardActions>\r\n            </Card>\r\n          </Grid>\r\n\r\n          <Grid\r\n            container\r\n            item\r\n            xs={12}\r\n            height={100}\r\n            spacing={0}\r\n            direction='column'\r\n            alignItems='center'\r\n            justify='center'\r\n          ></Grid>\r\n          <Grid\r\n            container\r\n            item\r\n            xs={4}\r\n            spacing={0}\r\n            direction='column'\r\n            alignItems='center'\r\n            justify='center'\r\n          >\r\n            <Card className={classes.root}>\r\n              <CardActionArea>\r\n                <CardMedia\r\n                  component='img'\r\n                  alt='Contemplative Reptile'\r\n                  height='140'\r\n                  image='https://images.unsplash.com/photo-1548101977-da6da849636b?ixid=MXwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHw%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=1050&q=80'\r\n                  title='Contemplative Reptile'\r\n                />\r\n                <CardContent>\r\n                  <Typography gutterBottom variant='h5' component='h2'>\r\n                    Photo Editing\r\n                  </Typography>\r\n                  <Typography\r\n                    variant='body2'\r\n                    color='textSecondary'\r\n                    component='p'\r\n                  >\r\n                    Photo editors review and select photos for promotion,\r\n                    publication, and dissemination. They identify relevant\r\n                    images, edit photos to make them more appealing, and arrange\r\n                    them in a suitable layout. Photo editors also assign\r\n                    projects to photographers to meet the organization's\r\n                    photography needs\r\n                  </Typography>\r\n                </CardContent>\r\n              </CardActionArea>\r\n              <CardActions>\r\n                <Button size='small' color='primary' onClick={openGigForm}>\r\n                  Place Order\r\n                </Button>\r\n              </CardActions>\r\n            </Card>\r\n          </Grid>\r\n          <Grid\r\n            container\r\n            item\r\n            xs={4}\r\n            spacing={0}\r\n            direction='column'\r\n            alignItems='center'\r\n            justify='center'\r\n          >\r\n            <Card className={classes.root}>\r\n              <CardActionArea>\r\n                <CardMedia\r\n                  component='img'\r\n                  alt='Contemplative Reptile'\r\n                  height='140'\r\n                  image='https://images.unsplash.com/photo-1607112812619-182cb1c7bb61?ixid=MXwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHw%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=1050&q=80'\r\n                  title='Contemplative Reptile'\r\n                />\r\n                <CardContent>\r\n                  <Typography gutterBottom variant='h5' component='h2'>\r\n                    Video Editing\r\n                  </Typography>\r\n                  <Typography\r\n                    variant='body2'\r\n                    color='textSecondary'\r\n                    component='p'\r\n                  >\r\n                    Video editors manipulate film and video footage to create a\r\n                    coherent and complete project that accurately depicts the\r\n                    film directors envision. They use complex editing software\r\n                    to piece together stills, footage, sound effects, dialog,\r\n                    and animation effects.\r\n                  </Typography>\r\n                </CardContent>\r\n              </CardActionArea>\r\n              <CardActions>\r\n                <Button size='small' color='primary' onClick={openGigForm}>\r\n                  Place Order\r\n                </Button>\r\n              </CardActions>\r\n            </Card>\r\n          </Grid>\r\n          <Grid\r\n            container\r\n            item\r\n            xs={4}\r\n            spacing={0}\r\n            direction='column'\r\n            alignItems='center'\r\n            justify='center'\r\n          >\r\n            <Card className={classes.root}>\r\n              <CardActionArea>\r\n                <CardMedia\r\n                  component='img'\r\n                  alt='Contemplative Reptile'\r\n                  height='140'\r\n                  image='https://images.unsplash.com/photo-1571101628768-6bae026844b6?ixid=MXwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHw%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=634&q=80'\r\n                  title='Contemplative Reptile'\r\n                />\r\n                <CardContent>\r\n                  <Typography gutterBottom variant='h5' component='h2'>\r\n                    UI Designing\r\n                  </Typography>\r\n                  <Typography\r\n                    variant='body2'\r\n                    color='textSecondary'\r\n                    component='p'\r\n                  >\r\n                    User interface (UI) design is the process designers use to\r\n                    build interfaces in software or computerized devices,\r\n                    focusing on looks or style. Designers aim to create\r\n                    interfaces which users find easy to use and pleasurable. UI\r\n                    design refers to graphical user interfaces and other\r\n                    forms—e.g., voice-controlled interfaces\r\n                  </Typography>\r\n                </CardContent>\r\n              </CardActionArea>\r\n              <CardActions>\r\n                <Button size='small' color='primary' onClick={openGigForm}>\r\n                  Place Order\r\n                </Button>\r\n              </CardActions>\r\n            </Card>\r\n          </Grid>\r\n        </Grid>\r\n\r\n        <Popup\r\n          title='Add an Order'\r\n          openPopup={openPopup}\r\n          setOpenPopup={setOpenPopup}\r\n        >\r\n          <BuyerGigForm\r\n            {...{ userId, currentId, setCurrentId, setOpenPopup }}\r\n          />\r\n        </Popup>\r\n      </section>\r\n      <Footer />\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default Order\r\n","import React, { useEffect, useState } from 'react'\r\nimport {\r\n  Grid,\r\n  TextField,\r\n  withStyles,\r\n  FormControl,\r\n  InputLabel,\r\n  Select,\r\n  MenuItem,\r\n  Button,\r\n  FormHelperText,\r\n} from '@material-ui/core'\r\nimport useForm from '../useForm'\r\nimport { connect } from 'react-redux'\r\nimport * as actions from '../actions/gigs'\r\nimport { useToasts } from 'react-toast-notifications'\r\n\r\nimport Message from './Message'\r\n\r\nconst styles = (theme) => ({\r\n  root: {\r\n    '& .MuiTextField-root': {\r\n      margin: theme.spacing(1),\r\n      minWidth: '100%',\r\n    },\r\n  },\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    minWidth: '100%',\r\n  },\r\n  smMargin: {\r\n    margin: theme.spacing(1),\r\n  },\r\n})\r\n\r\nconst initialFieldValues = {\r\n  startDate: new Date().toISOString(),\r\n  deadline: '0001-01-01T00:00:00',\r\n  category: 'None',\r\n  buyerRating: 0,\r\n  sellerRating: 0,\r\n  description: 'I need ...',\r\n  buyerId: 0,\r\n  sellerId: 0,\r\n  delivered: false,\r\n  price: 0,\r\n}\r\n\r\nconst SellersForm = ({ classes, ...props }) => {\r\n  const { addToast } = useToasts()\r\n\r\n  const [error, setError] = useState(false)\r\n\r\n  const validate = (fieldValues = values) => {\r\n    let temp = { ...errors }\r\n    if ('deadline' in fieldValues)\r\n      temp.deadline = fieldValues.deadline ? '' : 'This field is required.'\r\n    if ('description' in fieldValues)\r\n      temp.description = fieldValues.description\r\n        ? ''\r\n        : 'This field is required.'\r\n    if ('price' in fieldValues)\r\n      temp.price = fieldValues.price ? '' : 'This field is required.'\r\n    if ('category' in fieldValues)\r\n      temp.category = fieldValues.category ? '' : 'This field is required.'\r\n    setErrors({\r\n      ...temp,\r\n    })\r\n\r\n    if (fieldValues === values)\r\n      return Object.values(temp).every((x) => x === '')\r\n  }\r\n\r\n  const { values, setValues, errors, setErrors, handleInputChange, resetForm } =\r\n    useForm(\r\n      initialFieldValues,\r\n      validate,\r\n      props.setCurrentId,\r\n      props.setOpenPopup\r\n    )\r\n\r\n  //material-ui select\r\n  const inputLabel = React.useRef(null)\r\n  const [labelWidth, setLabelWidth] = React.useState(0)\r\n  React.useEffect(() => {\r\n    setLabelWidth(inputLabel.current.offsetWidth)\r\n  }, [])\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault()\r\n    if (validate()) {\r\n      const onSuccess = () => {\r\n        resetForm()\r\n        addToast('Submitted successfully', { appearance: 'success' })\r\n      }\r\n      if (props.currentId === 0) {\r\n        props.createGig(values, onSuccess)\r\n      } else {\r\n        props.updateGig(props.currentId, values, onSuccess)\r\n      }\r\n    } else {\r\n      setError(true)\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (props.currentId !== 0) {\r\n      setValues({\r\n        ...props.gigList.find((x) => x.gigId === props.currentId),\r\n      })\r\n      setErrors({})\r\n    }\r\n  }, [])\r\n  return (\r\n    <>\r\n      {error && (\r\n        <Message variant='danger'>\r\n          Something went wrong! Please try again!\r\n        </Message>\r\n      )}\r\n      <form\r\n        autoComplete='off'\r\n        noValidate\r\n        className={classes.root}\r\n        onSubmit={handleSubmit}\r\n      >\r\n        <Grid container>\r\n          <TextField\r\n            name='description'\r\n            variant='outlined'\r\n            label='Description'\r\n            value={values.description}\r\n            onChange={handleInputChange}\r\n            {...(errors.description && {\r\n              error: true,\r\n              helperText: errors.description,\r\n            })}\r\n          />\r\n          <FormControl\r\n            variant='outlined'\r\n            className={classes.formControl}\r\n            {...(errors.category && { error: true })}\r\n          >\r\n            <InputLabel ref={inputLabel}>Category</InputLabel>\r\n            <Select\r\n              name='category'\r\n              value={values.category}\r\n              onChange={handleInputChange}\r\n              labelWidth={labelWidth}\r\n            >\r\n              <MenuItem value=''>Select a Category</MenuItem>\r\n              <MenuItem value='illustration'>Illustration</MenuItem>\r\n              <MenuItem value='albumCovers'>Album Covers</MenuItem>\r\n              <MenuItem value='vectorArts'>Vector Arts</MenuItem>\r\n              <MenuItem value='photoEditing'>Photo Editing</MenuItem>\r\n              <MenuItem value='videoEditing'>Video Editing</MenuItem>\r\n              <MenuItem value='uiDesigning'>UI Designing</MenuItem>\r\n            </Select>\r\n            {errors.category && (\r\n              <FormHelperText>{errors.category}</FormHelperText>\r\n            )}\r\n          </FormControl>\r\n\r\n          <TextField\r\n            name='deadline'\r\n            variant='outlined'\r\n            type='date'\r\n            defaultValue={new Date()}\r\n            value={values.deadline}\r\n            onChange={handleInputChange}\r\n            {...(errors.deadline && {\r\n              error: true,\r\n              helperText: errors.deadline,\r\n            })}\r\n          />\r\n\r\n          <TextField\r\n            name='price'\r\n            variant='outlined'\r\n            label='price'\r\n            value={values.price}\r\n            onChange={handleInputChange}\r\n            {...(errors.price && { error: true, helperText: errors.price })}\r\n          />\r\n          <Grid container justify='flex-end'>\r\n            <Button\r\n              variant='contained'\r\n              style={{ color: 'green' }}\r\n              type='submit'\r\n              className={classes.smMargin}\r\n            >\r\n              Submit\r\n            </Button>\r\n          </Grid>\r\n        </Grid>\r\n      </form>\r\n    </>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  gigList: state.gigs.list,\r\n})\r\n\r\nconst mapActionToProps = {\r\n  createGig: actions.create,\r\n  updateGig: actions.update,\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapActionToProps\r\n)(withStyles(styles)(SellersForm))\r\n","import React, { useEffect, useState } from 'react'\r\nimport {\r\n  Grid,\r\n  withStyles,\r\n  FormControl,\r\n  InputLabel,\r\n  Select,\r\n  MenuItem,\r\n  Button,\r\n  FormHelperText,\r\n} from '@material-ui/core'\r\nimport useForm from '../useForm'\r\nimport { connect } from 'react-redux'\r\nimport * as actions from '../actions/gigs'\r\nimport { useToasts } from 'react-toast-notifications'\r\n\r\nimport Message from './Message'\r\n\r\nconst styles = (theme) => ({\r\n  root: {\r\n    '& .MuiTextField-root': {\r\n      margin: theme.spacing(1),\r\n      minWidth: '100%',\r\n    },\r\n  },\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    minWidth: '100%',\r\n  },\r\n  smMargin: {\r\n    margin: theme.spacing(1),\r\n  },\r\n})\r\n\r\nconst initialFieldValues = {\r\n  startDate: new Date().toISOString(),\r\n  deadline: '0001-01-01T00:00:00',\r\n  category: 'None',\r\n  buyerRating: 0,\r\n  sellerRating: 0,\r\n  description: 'I need ...',\r\n  buyerId: 0,\r\n  sellerId: 0,\r\n  delivered: false,\r\n  price: 0,\r\n}\r\n\r\nconst SellersForm = ({ classes, ...props }) => {\r\n  const { addToast } = useToasts()\r\n\r\n  const [error, setError] = useState(false)\r\n\r\n  const validate = (fieldValues = values) => {\r\n    let temp = { ...errors }\r\n    if ('sellerRating' in fieldValues)\r\n      temp.sellerRating = fieldValues.sellerRating\r\n        ? ''\r\n        : 'This field is required.'\r\n    setErrors({\r\n      ...temp,\r\n    })\r\n\r\n    if (fieldValues === values)\r\n      return Object.values(temp).every((x) => x === '')\r\n  }\r\n\r\n  const { values, setValues, errors, setErrors, handleInputChange, resetForm } =\r\n    useForm(\r\n      initialFieldValues,\r\n      validate,\r\n      props.setCurrentId,\r\n      props.setOpenRating\r\n    )\r\n\r\n  //material-ui select\r\n  const inputLabel = React.useRef(null)\r\n  const [labelWidth, setLabelWidth] = React.useState(0)\r\n  React.useEffect(() => {\r\n    setLabelWidth(inputLabel.current.offsetWidth)\r\n  }, [])\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault()\r\n    if (validate()) {\r\n      const onSuccess = () => {\r\n        resetForm()\r\n        addToast('Submitted successfully', { appearance: 'success' })\r\n      }\r\n      if (props.currentId === 0) {\r\n        props.createGig(values, onSuccess)\r\n      } else {\r\n        props.updateGig(props.currentId, values, onSuccess)\r\n      }\r\n    } else {\r\n      setError(true)\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (props.currentId !== 0) {\r\n      setValues({\r\n        ...props.gigList.find((x) => x.gigId === props.currentId),\r\n      })\r\n      setErrors({})\r\n    }\r\n  }, [])\r\n  return (\r\n    <>\r\n      {error && (\r\n        <Message variant='danger'>\r\n          Something went wrong! Please try again!\r\n        </Message>\r\n      )}\r\n      <form\r\n        autoComplete='off'\r\n        noValidate\r\n        className={classes.root}\r\n        onSubmit={handleSubmit}\r\n      >\r\n        <Grid container>\r\n          <FormControl\r\n            variant='outlined'\r\n            className={classes.formControl}\r\n            {...(errors.category && { error: true })}\r\n          >\r\n            <InputLabel ref={inputLabel}>Rate the Seller!</InputLabel>\r\n            <Select\r\n              name='sellerRating'\r\n              value={values.sellerRating}\r\n              onChange={handleInputChange}\r\n              labelWidth={labelWidth}\r\n            >\r\n              <MenuItem value='1'>Poor</MenuItem>\r\n              <MenuItem value='2'>Ok</MenuItem>\r\n              <MenuItem value='3'>Good</MenuItem>\r\n              <MenuItem value='4'>Great</MenuItem>\r\n              <MenuItem value='5'>Excellent</MenuItem>\r\n            </Select>\r\n            {errors.sellerRating && (\r\n              <FormHelperText>{errors.sellerRating}</FormHelperText>\r\n            )}\r\n          </FormControl>\r\n\r\n          <Grid container justify='flex-end'>\r\n            <Button\r\n              variant='contained'\r\n              style={{ color: 'green' }}\r\n              type='submit'\r\n              className={classes.smMargin}\r\n            >\r\n              Submit\r\n            </Button>\r\n          </Grid>\r\n        </Grid>\r\n      </form>\r\n    </>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  gigList: state.gigs.list,\r\n})\r\n\r\nconst mapActionToProps = {\r\n  createGig: actions.create,\r\n  updateGig: actions.update,\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapActionToProps\r\n)(withStyles(styles)(SellersForm))\r\n","import React, { Fragment, useState, useEffect } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { useHistory } from 'react-router-dom'\r\nimport InfiniteScroll from 'react-infinite-scroll-component'\r\n\r\nimport * as actions from '../actions/gigs'\r\nimport {\r\n  Grid,\r\n  Paper,\r\n  TableContainer,\r\n  Table,\r\n  TableHead,\r\n  TableRow,\r\n  TableCell,\r\n  TableBody,\r\n  withStyles,\r\n  ButtonGroup,\r\n  Button,\r\n} from '@material-ui/core'\r\nimport GigForm from './GigForm'\r\nimport BuyerRating from './BuyerRating'\r\nimport EditIcon from '@material-ui/icons/Edit'\r\nimport DeleteIcon from '@material-ui/icons/Delete'\r\nimport ChatIcon from '@material-ui/icons/Chat'\r\nimport CreditCardIcon from '@material-ui/icons/CreditCard'\r\nimport CheckCircleOutlineIcon from '@material-ui/icons/CheckCircleOutline'\r\nimport NotInterestedIcon from '@material-ui/icons/NotInterested'\r\nimport StarOutlineIcon from '@material-ui/icons/StarOutline'\r\nimport StarIcon from '@material-ui/icons/Star'\r\n\r\nimport { useToasts } from 'react-toast-notifications'\r\n\r\nimport Popup from './Popup'\r\n\r\nconst styles = (theme) => ({\r\n  root: {\r\n    '& .MuiTableCell-head': {\r\n      fontSize: '1.25rem',\r\n    },\r\n  },\r\n  paper: {\r\n    margin: theme.spacing(2),\r\n    padding: theme.spacing(2),\r\n  },\r\n})\r\n\r\nconst GigsList = ({ classes, ...props }) => {\r\n  const { addToast } = useToasts()\r\n  const history = useHistory()\r\n\r\n  const [currentId, setCurrentId] = useState(0)\r\n  const [openPopup, setOpenPopup] = useState(false)\r\n  const [openRating, setOpenRating] = useState(false)\r\n\r\n  useEffect(() => {\r\n    props.fetchAllGigs()\r\n  }, [props])\r\n\r\n  const onDelete = (id, sellerId) => {\r\n    if (sellerId === 0) {\r\n      if (window.confirm('Are you sure to delete this record?'))\r\n        props.deleteGig(id, () =>\r\n          addToast('Deleted successfully', { appearance: 'info' })\r\n        )\r\n    } else {\r\n      addToast('Delete feature is disabled after the seller is assigned!', {\r\n        appearance: 'info',\r\n      })\r\n    }\r\n  }\r\n\r\n  const handleEdit = (gigId, delivered) => {\r\n    if (!delivered) {\r\n      setCurrentId(gigId)\r\n      setOpenPopup(true)\r\n    } else {\r\n      addToast('Edit feature is disabled for delivered gigs!', {\r\n        appearance: 'info',\r\n      })\r\n    }\r\n  }\r\n\r\n  const handleRating = (gigId, delivered) => {\r\n    if (!delivered) {\r\n      setCurrentId(gigId)\r\n      setOpenRating(true)\r\n    } else {\r\n      addToast('Rating feature is disabled for delivered gigs!', {\r\n        appearance: 'info',\r\n      })\r\n    }\r\n  }\r\n\r\n  const chatWithSeller = (sellerID, delivered) => {\r\n    if (!delivered) {\r\n      history.push({\r\n        pathname: '/buyerchat',\r\n        recieverId: sellerID,\r\n        senderId: props.senderId,\r\n      })\r\n    } else {\r\n      addToast('Chat option is disabled for delivered gigs!', {\r\n        appearance: 'info',\r\n      })\r\n    }\r\n  }\r\n\r\n  const payment = (delivered) => {\r\n    if (!delivered) {\r\n      history.push('./payment')\r\n    } else {\r\n      addToast('Payment feature is disabled for delivered gigs!', {\r\n        appearance: 'info',\r\n      })\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Paper className={classes.paper} elevation={3}>\r\n      <Grid>\r\n        <Grid item xs={12}>\r\n          <InfiniteScroll dataLength={6} height={350}>\r\n            <TableContainer>\r\n              <Table>\r\n                <TableHead className={classes.root}>\r\n                  <TableRow>\r\n                    <TableCell>Gig Id</TableCell>\r\n                    <TableCell>Start Date</TableCell>\r\n                    <TableCell>Deadline</TableCell>\r\n                    <TableCell>Category</TableCell>\r\n                    <TableCell>Description</TableCell>\r\n                    <TableCell>Is Seller Assigned?</TableCell>\r\n                    <TableCell>Delivered</TableCell>\r\n                    <TableCell></TableCell>\r\n                  </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                  {props.gigList.map((record, index) => {\r\n                    if (record.buyerId === props.buyerId) {\r\n                      return (\r\n                        <TableRow key={index} hover>\r\n                          <TableCell>{record.gigId}</TableCell>\r\n                          <TableCell>{record.startDate}</TableCell>\r\n                          <TableCell>{record.deadline}</TableCell>\r\n                          <TableCell>{record.category}</TableCell>\r\n                          <TableCell>{record.description}</TableCell>\r\n                          <TableCell>\r\n                            {record.sellerId === 0 ? (\r\n                              <NotInterestedIcon style={{ color: 'red' }} />\r\n                            ) : (\r\n                              <CheckCircleOutlineIcon\r\n                                style={{ color: 'green' }}\r\n                              />\r\n                            )}\r\n                          </TableCell>\r\n                          <TableCell>\r\n                            {record.delivered ? (\r\n                              <CheckCircleOutlineIcon\r\n                                style={{ color: 'green' }}\r\n                              />\r\n                            ) : (\r\n                              <NotInterestedIcon style={{ color: 'red' }} />\r\n                            )}\r\n                          </TableCell>\r\n                          <TableCell>\r\n                            <ButtonGroup variant='text'>\r\n                              <Button>\r\n                                <EditIcon\r\n                                  color={\r\n                                    record.delivered ? 'disabled' : 'action'\r\n                                  }\r\n                                  onClick={() => {\r\n                                    handleEdit(record.gigId, record.delivered)\r\n                                  }}\r\n                                />\r\n                              </Button>\r\n                              <Button>\r\n                                <DeleteIcon\r\n                                  color={\r\n                                    record.sellerId === 0\r\n                                      ? 'action'\r\n                                      : 'disabled'\r\n                                  }\r\n                                  onClick={() => {\r\n                                    onDelete(record.gigId, record.sellerId)\r\n                                  }}\r\n                                />\r\n                              </Button>\r\n                              <Button>\r\n                                <ChatIcon\r\n                                  color={\r\n                                    record.delivered ? 'disabled' : 'action'\r\n                                  }\r\n                                  onClick={() =>\r\n                                    chatWithSeller(\r\n                                      record.sellerId,\r\n                                      record.delivered\r\n                                    )\r\n                                  }\r\n                                />\r\n                              </Button>\r\n                              <Button>\r\n                                <CreditCardIcon\r\n                                  color={\r\n                                    record.delivered ? 'disabled' : 'action'\r\n                                  }\r\n                                  onClick={() => {\r\n                                    payment(record.delivered)\r\n                                  }}\r\n                                />\r\n                              </Button>\r\n                              <Button\r\n                                onClick={() => {\r\n                                  handleRating(record.gigId, record.delivered)\r\n                                }}\r\n                              >\r\n                                {record.sellerRating === 0 ? (\r\n                                  <StarOutlineIcon\r\n                                    color={\r\n                                      record.delivered ? 'disabled' : 'action'\r\n                                    }\r\n                                  />\r\n                                ) : (\r\n                                  <StarIcon\r\n                                    color={\r\n                                      record.delivered ? 'disabled' : 'action'\r\n                                    }\r\n                                  />\r\n                                )}\r\n                              </Button>\r\n                            </ButtonGroup>\r\n                          </TableCell>\r\n                        </TableRow>\r\n                      )\r\n                    }\r\n                  })}\r\n                </TableBody>\r\n              </Table>\r\n            </TableContainer>\r\n          </InfiniteScroll>\r\n        </Grid>\r\n        <Popup\r\n          title='Gig Edit Form'\r\n          openPopup={openPopup}\r\n          setOpenPopup={setOpenPopup}\r\n        >\r\n          <GigForm {...{ currentId, setCurrentId, setOpenPopup }} />\r\n        </Popup>\r\n        <Popup\r\n          title='Rate the Seller!'\r\n          openPopup={openRating}\r\n          setOpenPopup={setOpenRating}\r\n        >\r\n          <BuyerRating {...{ currentId, setCurrentId, setOpenRating }} />\r\n        </Popup>\r\n      </Grid>\r\n    </Paper>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  gigList: state.gigs.list,\r\n})\r\n\r\nconst mapActionToProps = {\r\n  fetchAllGigs: actions.fetchAll,\r\n  deleteGig: actions.Delete,\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapActionToProps\r\n)(withStyles(styles)(GigsList))\r\n","import { Fragment } from 'react'\r\nimport React, { useEffect, useState } from 'react'\r\nimport { useHistory } from 'react-router-dom'\r\n\r\nimport { Grid, Button } from '@material-ui/core'\r\n\r\nimport BuyerGigForm from '../components/BuyerGigForm'\r\nimport BuyerGigList from '../components/BuyerGigList'\r\nimport BuyerNav from '../components/BuyerNav'\r\nimport Footer from '../components/Footer'\r\nimport Popup from '../components/Popup'\r\n\r\nfunction Orderpage() {\r\n  let history = useHistory()\r\n  const senderId = history.location.state\r\n  const buyerId = history.location.state\r\n  const [currentId, setCurrentId] = useState(0)\r\n  const [openPopup, setOpenPopup] = useState(false)\r\n  const [userId, setUserId] = useState(false)\r\n  console.log(senderId)\r\n\r\n  useEffect(() => {\r\n    if (!history.location.state) {\r\n      history.push('/login')\r\n    }\r\n  }, [history])\r\n\r\n  const openGigForm = () => {\r\n    if (!history.location.state) {\r\n      history.push('/login')\r\n    }\r\n    setUserId(history.location.state)\r\n    setOpenPopup(true)\r\n  }\r\n  return (\r\n    <Fragment>\r\n      <BuyerNav {...{ buyerId }} />\r\n      <section className='container'>\r\n        <div>\r\n          <Popup\r\n            title='Add an Order'\r\n            openPopup={openPopup}\r\n            setOpenPopup={setOpenPopup}\r\n          >\r\n            <BuyerGigForm\r\n              {...{ userId, currentId, setCurrentId, setOpenPopup }}\r\n            />\r\n          </Popup>\r\n          <BuyerGigList buyerId={buyerId} senderId={history.location.state} />\r\n          <Grid container justify='flex-end'>\r\n            <Button\r\n              onClick={openGigForm}\r\n              variant='contained'\r\n              style={{ color: 'green' }}\r\n            >\r\n              Place another order!\r\n            </Button>\r\n          </Grid>\r\n        </div>\r\n      </section>\r\n      <Footer />\r\n    </Fragment>\r\n  )\r\n}\r\nexport default Orderpage\r\n","import React, { useEffect, useState, Fragment } from 'react'\r\nimport { useToasts } from 'react-toast-notifications'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\n\r\nimport {\r\n  Grid,\r\n  TextField,\r\n  withStyles,\r\n  FormControl,\r\n  InputLabel,\r\n  Select,\r\n  MenuItem,\r\n  Button,\r\n  FormHelperText,\r\n} from '@material-ui/core'\r\nimport Container from '@material-ui/core/Container'\r\n\r\nimport useForm from '../useForm'\r\nimport * as actions from '../actions/users'\r\nimport BuyerNav from '../components/BuyerNav'\r\nimport Footer from '../components/Footer'\r\nimport Message from '../components/Message'\r\n\r\nconst styles = (theme) => ({\r\n  root: {\r\n    '& .MuiTextField-root': {\r\n      margin: theme.spacing(1),\r\n      minWidth: '100%',\r\n    },\r\n  },\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    minWidth: '100%',\r\n  },\r\n  smMargin: {\r\n    margin: theme.spacing(1),\r\n  },\r\n})\r\n\r\nconst initialFieldValues = {\r\n  firstName: '',\r\n  lastName: '',\r\n  address: '',\r\n  userType: '',\r\n  category: '',\r\n  email: '',\r\n  password: '',\r\n}\r\n\r\nconst BuyerToSeller = ({ classes, ...props }) => {\r\n  const { addToast } = useToasts()\r\n  let history = useHistory()\r\n  const buyerId = history.location.state\r\n\r\n  const [error, setError] = useState(false)\r\n\r\n  const validate = (fieldValues = values) => {\r\n    let temp = { ...errors }\r\n    if ('firstName' in fieldValues)\r\n      temp.firstName = fieldValues.firstName ? '' : 'This field is required.'\r\n    if ('lastName' in fieldValues)\r\n      temp.lastName = fieldValues.lastName ? '' : 'This field is required.'\r\n    if ('userTpye' in fieldValues)\r\n      temp.userType = fieldValues.userType ? '' : 'This field is required.'\r\n    if ('password' in fieldValues)\r\n      temp.password = fieldValues.password ? '' : 'This field is required.'\r\n    if ('category' in fieldValues)\r\n      temp.category = fieldValues.category ? '' : 'This field is required.'\r\n    if ('email' in fieldValues)\r\n      temp.email = /^$|.+@.+..+/.test(fieldValues.email)\r\n        ? ''\r\n        : 'Email is not valid.'\r\n    setErrors({\r\n      ...temp,\r\n    })\r\n\r\n    if (fieldValues === values)\r\n      return Object.values(temp).every((x) => x === '')\r\n  }\r\n\r\n  const { values, setValues, errors, setErrors, handleInputChange, resetForm } =\r\n    useForm(\r\n      initialFieldValues,\r\n      validate,\r\n      props.setCurrentId,\r\n      props.setOpenPopup\r\n    )\r\n\r\n  //material-ui select\r\n  const inputLabel = React.useRef(null)\r\n  const [labelWidth, setLabelWidth] = React.useState(0)\r\n  React.useEffect(() => {\r\n    if (!history.location.state) {\r\n      history.push('/login')\r\n    }\r\n    setLabelWidth(inputLabel.current.offsetWidth)\r\n  }, [history.location.state])\r\n\r\n  const setRole = (fieldValues = values) => {\r\n    fieldValues.userType = 'Seller'\r\n  }\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault()\r\n    setRole()\r\n    if (validate()) {\r\n      const onSuccess = () => {\r\n        resetForm()\r\n        addToast('Submitted successfully', { appearance: 'success' })\r\n        props.fetchAllUsers()\r\n      }\r\n      props.deleteUser(buyerId, onSuccess)\r\n\r\n      props.createUser(values, onSuccess)\r\n\r\n      props.userList.find((x) => {\r\n        if (x.email == values.email) {\r\n          history.push({\r\n            pathname: '/sellerdashboard',\r\n            state: x.userId,\r\n          })\r\n        }\r\n      })\r\n    } else {\r\n      setError(true)\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (props.currentId !== 0) {\r\n      setValues({\r\n        ...props.userList.find((x) => x.userId === props.currentId),\r\n      })\r\n      setErrors({})\r\n    }\r\n  }, [props.currentId])\r\n  return (\r\n    <Fragment>\r\n      <BuyerNav {...{ buyerId }} />\r\n\r\n      <section className='container'>\r\n        <Container component='main' maxWidth='xs'>\r\n          <div>\r\n            <h1 className='large text-primary'>Become a Seller!</h1>\r\n            <p className='lead'>\r\n              <i className='fas fa-user'></i> Create Your Seller Profile\r\n            </p>\r\n            <p>* This will delete your customer profile!.</p>\r\n          </div>\r\n          {error && (\r\n            <Message variant='danger'>\r\n              Something went wrong! Please try again!\r\n            </Message>\r\n          )}\r\n          <form\r\n            autoComplete='off'\r\n            noValidate\r\n            className={classes.root}\r\n            onSubmit={handleSubmit}\r\n          >\r\n            <Grid container>\r\n              <Grid item xs={12}>\r\n                <TextField\r\n                  name='firstName'\r\n                  variant='outlined'\r\n                  label='First Name'\r\n                  value={values.firstName}\r\n                  onChange={handleInputChange}\r\n                  {...(errors.firstName && {\r\n                    error: true,\r\n                    helperText: errors.firstName,\r\n                  })}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <TextField\r\n                  name='lastName'\r\n                  variant='outlined'\r\n                  label='Last Name'\r\n                  value={values.lastName}\r\n                  onChange={handleInputChange}\r\n                  {...(errors.lastName && {\r\n                    error: true,\r\n                    helperText: errors.lastName,\r\n                  })}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <FormControl\r\n                  variant='outlined'\r\n                  className={classes.formControl}\r\n                  {...(errors.category && { error: true })}\r\n                >\r\n                  <InputLabel ref={inputLabel}>Category</InputLabel>\r\n                  <Select\r\n                    name='category'\r\n                    value={values.category}\r\n                    onChange={handleInputChange}\r\n                    labelWidth={labelWidth}\r\n                  >\r\n                    <MenuItem value=''>Select a Category</MenuItem>\r\n                    <MenuItem value='illustration'>Illustration</MenuItem>\r\n                    <MenuItem value='albumCovers'>Album Covers</MenuItem>\r\n                    <MenuItem value='vectorArts'>Vector Arts</MenuItem>\r\n                    <MenuItem value='photoEditing'>Photo Editing</MenuItem>\r\n                    <MenuItem value='videoEditing'>Video Editing</MenuItem>\r\n                    <MenuItem value='uiDesigning'>UI Designing</MenuItem>\r\n                  </Select>\r\n                  {errors.category && (\r\n                    <FormHelperText>{errors.category}</FormHelperText>\r\n                  )}\r\n                </FormControl>\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <TextField\r\n                  name='email'\r\n                  variant='outlined'\r\n                  label='Email'\r\n                  value={values.email}\r\n                  onChange={handleInputChange}\r\n                  {...(errors.email && {\r\n                    error: true,\r\n                    helperText: errors.email,\r\n                  })}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <TextField\r\n                  name='address'\r\n                  variant='outlined'\r\n                  label='Address'\r\n                  value={values.address}\r\n                  onChange={handleInputChange}\r\n                  {...(errors.address && {\r\n                    error: true,\r\n                    helperText: errors.address,\r\n                  })}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <TextField\r\n                  name='password'\r\n                  type='password'\r\n                  variant='outlined'\r\n                  label='Password'\r\n                  value={values.password}\r\n                  onChange={handleInputChange}\r\n                  {...(errors.password && {\r\n                    error: true,\r\n                    helperText: errors.password,\r\n                  })}\r\n                />\r\n                <div>{props.currentId}</div>\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <div>\r\n                  <Button\r\n                    variant='contained'\r\n                    style={{ color: 'green' }}\r\n                    type='submit'\r\n                    className={classes.smMargin}\r\n                  >\r\n                    Submit\r\n                  </Button>\r\n                </div>\r\n              </Grid>\r\n            </Grid>\r\n          </form>\r\n        </Container>\r\n      </section>\r\n      <Footer />\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  userList: state.users.list,\r\n})\r\n\r\nconst mapActionToProps = {\r\n  createUser: actions.create,\r\n  updateUser: actions.update,\r\n  deleteUser: actions.Delete,\r\n  fetchAllUsers: actions.fetchAll,\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapActionToProps\r\n)(withStyles(styles)(BuyerToSeller))\r\n","import React, { Fragment, useState, useEffect } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { useHistory } from 'react-router-dom'\r\n\r\nimport {\r\n  Grid,\r\n  Paper,\r\n  TableContainer,\r\n  Table,\r\n  TableHead,\r\n  TableRow,\r\n  TableCell,\r\n  TableBody,\r\n  withStyles,\r\n  ButtonGroup,\r\n  Button,\r\n} from '@material-ui/core'\r\n\r\nimport EditIcon from '@material-ui/icons/Edit'\r\nimport DeleteIcon from '@material-ui/icons/Delete'\r\nimport { useToasts } from 'react-toast-notifications'\r\n\r\nimport BuyerForm from '../components/BuyerForm'\r\nimport * as actions from '../actions/users'\r\nimport Popup from '../components/Popup'\r\nimport BuyerNav from '../components/BuyerNav'\r\nimport Footer from '../components/Footer'\r\n\r\nconst styles = (theme) => ({\r\n  root: {\r\n    '& .MuiTableCell-head': {\r\n      fontSize: '1.25rem',\r\n    },\r\n  },\r\n  paper: {\r\n    margin: theme.spacing(2),\r\n    padding: theme.spacing(2),\r\n  },\r\n})\r\n\r\nconst BuyerProfile = ({ classes, ...props }) => {\r\n  const { addToast } = useToasts()\r\n  const history = useHistory()\r\n  const buyerId = history.location.state\r\n  const profileId = history.location.state\r\n\r\n  const [currentId, setCurrentId] = useState(0)\r\n  const [openPopup, setOpenPopup] = useState(false)\r\n\r\n  useEffect(() => {\r\n    if (!history.location.state) {\r\n      history.push('/login')\r\n    }\r\n    props.fetchAllUsers()\r\n  }, [props, history.location.state])\r\n\r\n  const onDelete = (id) => {\r\n    if (window.confirm('Are you sure to delete your Buyer Profile?'))\r\n      props.deleteUser(id, () =>\r\n        addToast('Deleted successfully', { appearance: 'info' })\r\n      )\r\n    history.push('/login')\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n      <BuyerNav {...{ buyerId }} />\r\n      <section className='container'>\r\n        <p className='lead'>Edit your Buyer Profile!</p>\r\n        <Paper className={classes.paper} elevation={3}>\r\n          <Grid>\r\n            <Grid item xs={12}>\r\n              <TableContainer>\r\n                <Table>\r\n                  {props.userList.map((record, index) => {\r\n                    if (record.userId === profileId) {\r\n                      return (\r\n                        <TableHead className={classes.root}>\r\n                          <TableRow>\r\n                            <TableCell>First Name</TableCell>\r\n                            <TableCell>{record.firstName}</TableCell>\r\n                          </TableRow>\r\n\r\n                          <TableRow>\r\n                            <TableCell>Last Name</TableCell>\r\n                            <TableCell>{record.lastName}</TableCell>\r\n                          </TableRow>\r\n\r\n                          <TableRow>\r\n                            <TableCell>Email</TableCell>\r\n                            <TableCell>{record.email}</TableCell>\r\n                          </TableRow>\r\n\r\n                          <TableRow>\r\n                            <TableCell>Edit or Delete</TableCell>\r\n                            <TableCell>\r\n                              <ButtonGroup variant='text'>\r\n                                <Button>\r\n                                  <EditIcon\r\n                                    color='action'\r\n                                    onClick={() => {\r\n                                      setCurrentId(record.userId)\r\n                                      setOpenPopup(true)\r\n                                    }}\r\n                                  />\r\n                                </Button>\r\n                                <Button>\r\n                                  <DeleteIcon\r\n                                    color='action'\r\n                                    onClick={() => {\r\n                                      onDelete(record.userId)\r\n                                    }}\r\n                                  />\r\n                                </Button>\r\n                              </ButtonGroup>\r\n                            </TableCell>\r\n                          </TableRow>\r\n                        </TableHead>\r\n                      )\r\n                    }\r\n                  })}\r\n                </Table>\r\n              </TableContainer>\r\n            </Grid>\r\n            <Popup\r\n              title='Edit your Buyer Profile!'\r\n              openPopup={openPopup}\r\n              setOpenPopup={setOpenPopup}\r\n            >\r\n              <BuyerForm {...{ currentId, setCurrentId, setOpenPopup }} />\r\n            </Popup>\r\n          </Grid>\r\n        </Paper>\r\n      </section>\r\n      <Footer />\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  userList: state.users.list,\r\n})\r\n\r\nconst mapActionToProps = {\r\n  fetchAllUsers: actions.fetchAll,\r\n  deleteUser: actions.Delete,\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapActionToProps\r\n)(withStyles(styles)(BuyerProfile))\r\n","import React, { Fragment } from 'react'\r\nimport { useHistory } from 'react-router-dom'\r\n\r\nimport Avatar from '@material-ui/core/Avatar'\r\nimport Button from '@material-ui/core/Button'\r\nimport CssBaseline from '@material-ui/core/CssBaseline'\r\nimport TextField from '@material-ui/core/TextField'\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel'\r\nimport Checkbox from '@material-ui/core/Checkbox'\r\nimport Link from '@material-ui/core/Link'\r\nimport Grid from '@material-ui/core/Grid'\r\nimport Box from '@material-ui/core/Box'\r\nimport PaymentIcon from '@material-ui/icons/Payment'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport Container from '@material-ui/core/Container'\r\n\r\nimport BuyerNav from '../components/BuyerNav'\r\nimport Footer from '../components/Footer'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: '100%', // Fix IE 11 issue.\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n}))\r\n\r\nexport default function SignUp() {\r\n  const classes = useStyles()\r\n\r\n  const history = useHistory()\r\n  const buyerId = history.location.state\r\n\r\n  return (\r\n    <Fragment>\r\n      <BuyerNav {...{ buyerId }} />\r\n      <section className='container'>\r\n        <Container component='main' maxWidth='xs'>\r\n          <CssBaseline />\r\n          <div className={classes.paper}>\r\n            <Avatar className={classes.avatar}>\r\n              <PaymentIcon />\r\n            </Avatar>\r\n            <Typography component='h1' variant='h5'>\r\n              Card Holder Information\r\n            </Typography>\r\n            <form className={classes.form} noValidate>\r\n              <Grid container spacing={2}>\r\n                <Grid item xs={12}>\r\n                  <TextField\r\n                    variant='outlined'\r\n                    required\r\n                    fullWidth\r\n                    id='nameOnCard'\r\n                    label='Name on Card'\r\n                    name='email'\r\n                    autoComplete='Name on Card'\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                  <TextField\r\n                    variant='outlined'\r\n                    required\r\n                    fullWidth\r\n                    name='Card Number'\r\n                    label='Card Number'\r\n                    type='password'\r\n                    id='nameOnCard'\r\n                    autoComplete='Name on Card'\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={12} sm={6}>\r\n                  <TextField\r\n                    autoComplete='fname'\r\n                    name='cvc'\r\n                    variant='outlined'\r\n                    required\r\n                    fullWidth\r\n                    id='cvc'\r\n                    label='CVC'\r\n                    autoFocus\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={12} sm={6}>\r\n                  <TextField\r\n                    variant='outlined'\r\n                    required\r\n                    fullWidth\r\n                    id='expireDate'\r\n                    label='Expiration Date'\r\n                    name='expireDate'\r\n                    autoComplete='MM/YY'\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                  <FormControlLabel\r\n                    control={\r\n                      <Checkbox value='allowExtraEmails' color='primary' />\r\n                    }\r\n                    label='I guarantee the above information are true and correct according to my Knowledge.'\r\n                  />\r\n                </Grid>\r\n              </Grid>\r\n              <Button\r\n                type='submit'\r\n                fullWidth\r\n                variant='contained'\r\n                style={{ color: 'green' }}\r\n                className={classes.submit}\r\n              >\r\n                Submit\r\n              </Button>\r\n              <Grid container justify='flex-end'>\r\n                <Grid item>\r\n                  <Link href='#' variant='body2'>\r\n                    Do not have a Card? Try other options\r\n                  </Link>\r\n                </Grid>\r\n              </Grid>\r\n            </form>\r\n          </div>\r\n        </Container>\r\n      </section>\r\n      <Footer />\r\n    </Fragment>\r\n  )\r\n}\r\n","import React, { Fragment, useState, useEffect } from 'react'\r\nimport { useHistory } from 'react-router-dom'\r\n\r\nimport Button from '@material-ui/core/Button'\r\nimport CssBaseline from '@material-ui/core/CssBaseline'\r\nimport TextField from '@material-ui/core/TextField'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport Container from '@material-ui/core/Container'\r\n\r\nimport sendEmail from '../actions/Email'\r\nimport BuyerNav from '../components/BuyerNav'\r\nimport Footer from '../components/Footer'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: '100%', // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n}))\r\n\r\nconst ContactUs = () => {\r\n  const classes = useStyles()\r\n\r\n  const history = useHistory()\r\n  const buyerId = history.location.state\r\n\r\n  const [formData, setFromData] = useState({\r\n    subject: '',\r\n    email: '',\r\n    body: '',\r\n    signature: '',\r\n  })\r\n\r\n  const { subject, email, body, signature } = formData\r\n\r\n  const onChange = (e) =>\r\n    setFromData({ ...formData, [e.target.name]: e.target.value })\r\n\r\n  const onSubmit = async (e) => {\r\n    e.preventDefault()\r\n\r\n    sendEmail(subject, email, body, signature)\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (!history.location.state) {\r\n      history.push('/login')\r\n    }\r\n  }, [history.location.state])\r\n\r\n  return (\r\n    <Fragment>\r\n      <BuyerNav {...{ buyerId }} />\r\n      <section className='container'>\r\n        <Container component='main' maxWidth='xs'>\r\n          <CssBaseline />\r\n          <div className={classes.paper}>\r\n            <img\r\n              src='https://dewey.tailorbrands.com/production/brand_version_mockup_image/765/4683342765_f43e76b4-4d93-4f52-b0e7-cc99ad1bf015.png?cb=1613721941'\r\n              alt='jobforme'\r\n            />\r\n\r\n            <form\r\n              className={classes.form}\r\n              noValidate\r\n              onSubmit={(e) => onSubmit(e)}\r\n            >\r\n              <TextField\r\n                variant='outlined'\r\n                margin='normal'\r\n                required\r\n                fullWidth\r\n                label='Subject'\r\n                type='text'\r\n                placeholder='Subject'\r\n                name='subject'\r\n                value={subject}\r\n                onChange={(e) => onChange(e)}\r\n                required\r\n              />\r\n              <TextField\r\n                variant='outlined'\r\n                margin='normal'\r\n                required\r\n                fullWidth\r\n                label='Email Address'\r\n                type='email'\r\n                placeholder='Email Address'\r\n                name='email'\r\n                value={email}\r\n                onChange={(e) => onChange(e)}\r\n                required\r\n              />\r\n              <TextField\r\n                variant='outlined'\r\n                margin='normal'\r\n                required\r\n                fullWidth\r\n                label='Enter your message body'\r\n                type='text'\r\n                placeholder='Enter your Message Body'\r\n                name='body'\r\n                value={body}\r\n                onChange={(e) => onChange(e)}\r\n                minLength='3'\r\n                multiline\r\n              />\r\n              <TextField\r\n                variant='outlined'\r\n                margin='normal'\r\n                required\r\n                fullWidth\r\n                label='Signature'\r\n                type='text'\r\n                placeholder='Signature'\r\n                name='signature'\r\n                value={signature}\r\n                onChange={(e) => onChange(e)}\r\n                required\r\n              />\r\n\r\n              <Button\r\n                type='submit'\r\n                fullWidth\r\n                variant='contained'\r\n                style={{ color: 'green' }}\r\n                className={classes.submit}\r\n              >\r\n                Send\r\n              </Button>\r\n            </form>\r\n          </div>\r\n        </Container>\r\n      </section>\r\n      <Footer />\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default ContactUs\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst Navigationbar = (props) => {\r\n  return (\r\n    <nav className='navbar '>\r\n      <h1>\r\n        <Link\r\n          to={{\r\n            pathname: '/sellerdashboard',\r\n            state: props.sellerId,\r\n          }}\r\n        >\r\n          {/* <i class=\"fas fa-comments-dollar\"></i> JobForMe */}\r\n          <img\r\n            className='photo'\r\n            src='https://dewey.tailorbrands.com/production/brand_version_mockup_image/765/4683342765_f43e76b4-4d93-4f52-b0e7-cc99ad1bf015.png?cb=1613721941'\r\n            alt='jobforme'\r\n          />\r\n        </Link>\r\n      </h1>\r\n      <ul>\r\n        {/* <li>\r\n          <a href=\"/admin\">Admin Panel</a>\r\n        </li>\r\n        <li>\r\n          <a href=\"/order\">Order a Service</a>\r\n        </li> */}\r\n        {/* <li>\r\n          <a href=\"/seller\">Become a Seller</a>\r\n        </li> */}\r\n        {/* <li>\r\n          <Link to=\"/register\">Register</Link>\r\n        </li> */}\r\n\r\n        <li>\r\n          <Link\r\n            to={{\r\n              pathname: '/sellercontact',\r\n              state: props.sellerId,\r\n            }}\r\n          >\r\n            Contact Admin\r\n          </Link>\r\n        </li>\r\n        <li>\r\n          <Link\r\n            to={{\r\n              pathname: '/sellerprofile',\r\n              state: props.sellerId,\r\n            }}\r\n          >\r\n            Profile\r\n          </Link>\r\n        </li>\r\n        <li>\r\n          <Link to='/'>Logout</Link>\r\n        </li>\r\n      </ul>\r\n    </nav>\r\n  )\r\n}\r\n\r\nexport default Navigationbar\r\n","import React, { Fragment, useState, useEffect } from 'react'\r\nimport { Link, useHistory } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\n\r\nimport { Grid, withStyles } from '@material-ui/core'\r\nimport Card from '@material-ui/core/Card'\r\nimport CardActionArea from '@material-ui/core/CardActionArea'\r\nimport CardActions from '@material-ui/core/CardActions'\r\nimport CardContent from '@material-ui/core/CardContent'\r\nimport CardMedia from '@material-ui/core/CardMedia'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport { useToasts } from 'react-toast-notifications'\r\n\r\nimport * as actions from '../actions/users'\r\nimport SellerNav from '../components/SellerNav'\r\nimport Footer from '../components/Footer'\r\n\r\nconst styles = (theme) => ({\r\n  root: {\r\n    '& .MuiTableCell-head': {\r\n      fontSize: '1.25rem',\r\n    },\r\n  },\r\n  paper: {\r\n    margin: theme.spacing(2),\r\n    padding: theme.spacing(2),\r\n  },\r\n  card: {\r\n    maxWidth: 345,\r\n    margin: 0,\r\n    padding: 10,\r\n    display: 'block',\r\n    width: '1000px',\r\n    transitionDuration: '0.3s',\r\n    height: '18vw',\r\n    raised: true,\r\n  },\r\n})\r\n\r\nconst SellerLandingPage = ({ classes, ...props }) => {\r\n  const { addToast } = useToasts()\r\n  const history = useHistory()\r\n  console.log(history.location.state)\r\n  const sellerId = history.location.state\r\n  const [currentId, setCurrentId] = useState(0)\r\n\r\n  useEffect(() => {\r\n    if (!history.location.state) {\r\n      history.push('/login')\r\n    }\r\n    props.fetchAllUsers()\r\n  }, [props, history.location.state])\r\n\r\n  const onDelete = (id) => {\r\n    if (window.confirm('Are you sure to delete this record?'))\r\n      props.deleteSeller(id, () =>\r\n        addToast('Deleted successfully', { appearance: 'info' })\r\n      )\r\n  }\r\n  return (\r\n    <Fragment>\r\n      <SellerNav {...{ sellerId }} />\r\n      <section className='container'>\r\n        <Grid container spacing={1}>\r\n          <br />\r\n          <br />\r\n          <br />\r\n          <br />\r\n          <Grid\r\n            container\r\n            item\r\n            xs={4}\r\n            spacing={0}\r\n            direction='column'\r\n            alignItems='center'\r\n            justify='center'\r\n          >\r\n            <Link\r\n              to={{\r\n                pathname: '/order',\r\n                state: sellerId,\r\n              }}\r\n            >\r\n              <Card className={classes.card}>\r\n                <CardActionArea>\r\n                  <CardMedia\r\n                    component='img'\r\n                    alt='Contemplative Reptile'\r\n                    height='140'\r\n                    image='https://images.unsplash.com/photo-1594835494259-43c6e66ad369?ixid=MXwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHw%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=1052&q=80'\r\n                    title='Contemplative Reptile'\r\n                  />\r\n                  <CardContent>\r\n                    <Typography gutterBottom variant='h5' component='h2'>\r\n                      Browse as a Buyer\r\n                    </Typography>\r\n                    <Typography\r\n                      variant='body2'\r\n                      color='textSecondary'\r\n                      component='p'\r\n                    >\r\n                      Go and have the customer experience!\r\n                    </Typography>\r\n                    <Typography\r\n                      variant='body2'\r\n                      color='textSecondary'\r\n                      component='p'\r\n                    >\r\n                      <Typography\r\n                        variant='body2'\r\n                        color='textSecondary'\r\n                        component='p'\r\n                      >\r\n                        Click on the edit button to make changes\r\n                      </Typography>\r\n                    </Typography>\r\n                  </CardContent>\r\n                </CardActionArea>\r\n                <CardActions></CardActions>\r\n              </Card>\r\n            </Link>\r\n          </Grid>\r\n          <Grid\r\n            container\r\n            item\r\n            xs={4}\r\n            spacing={0}\r\n            direction='column'\r\n            alignItems='center'\r\n            justify='center'\r\n          >\r\n            <Link\r\n              to={{\r\n                pathname: '/sellerprofile',\r\n                state: sellerId,\r\n              }}\r\n            >\r\n              <Card className={classes.card}>\r\n                <CardActionArea>\r\n                  <CardMedia\r\n                    component='img'\r\n                    alt='Contemplative Reptile'\r\n                    height='140'\r\n                    image='https://images.unsplash.com/photo-1534683251650-3fd64cd1561a?ixid=MXwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHw%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=1020&q=80'\r\n                    title='Contemplative Reptile'\r\n                  />\r\n                  <CardContent>\r\n                    <Typography gutterBottom variant='h5' component='h2'>\r\n                      Your seller profile\r\n                    </Typography>\r\n                    <Typography\r\n                      variant='body2'\r\n                      color='textSecondary'\r\n                      component='p'\r\n                    >\r\n                      Add account changes.\r\n                    </Typography>\r\n                  </CardContent>\r\n                </CardActionArea>\r\n                <CardActions></CardActions>\r\n              </Card>\r\n            </Link>\r\n          </Grid>\r\n          <Grid\r\n            container\r\n            item\r\n            xs={4}\r\n            spacing={0}\r\n            direction='column'\r\n            alignItems='center'\r\n            justify='center'\r\n          >\r\n            <Link\r\n              to={{\r\n                pathname: '/yourordersseller',\r\n                state: sellerId,\r\n              }}\r\n            >\r\n              <Card className={classes.card}>\r\n                <CardActionArea>\r\n                  <CardMedia\r\n                    component='img'\r\n                    alt='Contemplative Reptile'\r\n                    height='140'\r\n                    image='https://images.unsplash.com/photo-1564424555153-04228f0aa7ee?ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=1050&q=80'\r\n                    title='Contemplative Reptile'\r\n                  />\r\n                  <CardContent>\r\n                    <Typography gutterBottom variant='h5' component='h2'>\r\n                      Your Gigs\r\n                    </Typography>\r\n                    <Typography\r\n                      variant='body2'\r\n                      color='textSecondary'\r\n                      component='p'\r\n                    >\r\n                      View gigs that you are currently working on.\r\n                    </Typography>\r\n                  </CardContent>\r\n                </CardActionArea>\r\n                <CardActions></CardActions>\r\n              </Card>\r\n            </Link>\r\n          </Grid>\r\n        </Grid>\r\n      </section>\r\n      <Footer />\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  userList: state.users.list,\r\n})\r\n\r\nconst mapActionToProps = {\r\n  fetchAllUsers: actions.fetchAll,\r\n  deleteUser: actions.Delete,\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapActionToProps\r\n)(withStyles(styles)(SellerLandingPage))\r\n","import React, { Fragment, useState, useEffect } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { useHistory } from 'react-router-dom'\r\n\r\nimport {\r\n  Grid,\r\n  Paper,\r\n  TableContainer,\r\n  Table,\r\n  TableHead,\r\n  TableRow,\r\n  TableCell,\r\n  TableBody,\r\n  withStyles,\r\n  ButtonGroup,\r\n  Button,\r\n} from '@material-ui/core'\r\nimport SellerForm from '../components/SellerForm'\r\nimport EditIcon from '@material-ui/icons/Edit'\r\nimport DeleteIcon from '@material-ui/icons/Delete'\r\nimport { useToasts } from 'react-toast-notifications'\r\n\r\nimport * as actions from '../actions/users'\r\nimport Popup from '../components/Popup'\r\nimport SellerNav from '../components/SellerNav'\r\nimport Footer from '../components/Footer'\r\n\r\nconst styles = (theme) => ({\r\n  root: {\r\n    '& .MuiTableCell-head': {\r\n      fontSize: '1.25rem',\r\n    },\r\n  },\r\n  paper: {\r\n    margin: theme.spacing(2),\r\n    padding: theme.spacing(2),\r\n  },\r\n})\r\n\r\nconst SellerProfile = ({ classes, ...props }) => {\r\n  const { addToast } = useToasts()\r\n  const history = useHistory()\r\n  const profileId = history.location.state\r\n  const sellerId = history.location.state\r\n  const [currentId, setCurrentId] = useState(0)\r\n  const [openPopup, setOpenPopup] = useState(false)\r\n\r\n  useEffect(() => {\r\n    if (!history.location.state) {\r\n      history.push('/login')\r\n    }\r\n    props.fetchAllUsers()\r\n  }, [props, history.location.state])\r\n\r\n  const onDelete = (id) => {\r\n    if (window.confirm('Are you sure to delete your Seller Profile?'))\r\n      props.deleteUser(id, () =>\r\n        addToast('Deleted successfully', { appearance: 'info' })\r\n      )\r\n    history.push('/login')\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n      <SellerNav {...{ sellerId }} />\r\n      <section className='container'>\r\n        <p className='lead'>Edit your Seller Profile!</p>\r\n        <Paper className={classes.paper} elevation={3}>\r\n          <Grid>\r\n            <Grid item xs={12}>\r\n              <TableContainer>\r\n                <Table>\r\n                  {props.userList.map((record, index) => {\r\n                    if (record.userId === profileId) {\r\n                      return (\r\n                        <TableHead className={classes.root}>\r\n                          <TableRow>\r\n                            <TableCell>First Name</TableCell>\r\n                            <TableCell>{record.firstName}</TableCell>\r\n                          </TableRow>\r\n\r\n                          <TableRow>\r\n                            <TableCell>Last Name</TableCell>\r\n                            <TableCell>{record.lastName}</TableCell>\r\n                          </TableRow>\r\n\r\n                          <TableRow>\r\n                            <TableCell>Address</TableCell>\r\n                            <TableCell>{record.address}</TableCell>\r\n                          </TableRow>\r\n\r\n                          <TableRow>\r\n                            <TableCell>Category</TableCell>\r\n                            <TableCell>{record.category}</TableCell>\r\n                          </TableRow>\r\n\r\n                          <TableRow>\r\n                            <TableCell>Email</TableCell>\r\n                            <TableCell>{record.email}</TableCell>\r\n                          </TableRow>\r\n\r\n                          <TableRow>\r\n                            <TableCell>Edit or Delete</TableCell>\r\n                            <TableCell>\r\n                              <ButtonGroup variant='text'>\r\n                                <Button>\r\n                                  <EditIcon\r\n                                    color='action'\r\n                                    onClick={() => {\r\n                                      setCurrentId(record.userId)\r\n                                      setOpenPopup(true)\r\n                                    }}\r\n                                  />\r\n                                </Button>\r\n                                <Button>\r\n                                  <DeleteIcon\r\n                                    color='action'\r\n                                    onClick={() => {\r\n                                      onDelete(record.userId)\r\n                                    }}\r\n                                  />\r\n                                </Button>\r\n                              </ButtonGroup>\r\n                            </TableCell>\r\n                          </TableRow>\r\n                        </TableHead>\r\n                      )\r\n                    }\r\n                  })}\r\n                </Table>\r\n              </TableContainer>\r\n            </Grid>\r\n            <Popup\r\n              title='Edit your Seller Profile!'\r\n              openPopup={openPopup}\r\n              setOpenPopup={setOpenPopup}\r\n            >\r\n              <SellerForm {...{ currentId, setCurrentId, setOpenPopup }} />\r\n            </Popup>\r\n          </Grid>\r\n        </Paper>\r\n      </section>\r\n      <Footer />\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  userList: state.users.list,\r\n})\r\n\r\nconst mapActionToProps = {\r\n  fetchAllUsers: actions.fetchAll,\r\n  deleteUser: actions.Delete,\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapActionToProps\r\n)(withStyles(styles)(SellerProfile))\r\n","import React, { useEffect, useState } from 'react'\r\nimport { Grid, withStyles, Button } from '@material-ui/core'\r\nimport useForm from '../useForm'\r\nimport { connect } from 'react-redux'\r\nimport * as actions from '../actions/gigs'\r\nimport { useToasts } from 'react-toast-notifications'\r\n\r\nimport Message from './Message'\r\n\r\nconst styles = (theme) => ({\r\n  root: {\r\n    '& .MuiTextField-root': {\r\n      margin: theme.spacing(1),\r\n      minWidth: '100%',\r\n    },\r\n  },\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    minWidth: '100%',\r\n  },\r\n  smMargin: {\r\n    margin: theme.spacing(1),\r\n  },\r\n})\r\n\r\nconst initialFieldValues = {\r\n  startDate: new Date().toISOString(),\r\n  deadline: '0001-01-01T00:00:00',\r\n  category: 'None',\r\n  buyerRating: 0,\r\n  sellerRating: 0,\r\n  description: 'I need ...',\r\n  buyerId: 0,\r\n  sellerId: 0,\r\n  delivered: false,\r\n  price: 0,\r\n}\r\n\r\nconst SellersForm = ({ classes, ...props }) => {\r\n  const { addToast } = useToasts()\r\n\r\n  const [error, setError] = useState(false)\r\n\r\n  const validate = (fieldValues = values) => {\r\n    let temp = { ...errors }\r\n    if ('deadline' in fieldValues)\r\n      temp.deadline = fieldValues.deadline ? '' : 'This field is required.'\r\n    if ('description' in fieldValues)\r\n      temp.description = fieldValues.description\r\n        ? ''\r\n        : 'This field is required.'\r\n    if ('price' in fieldValues)\r\n      temp.price = fieldValues.price ? '' : 'This field is required.'\r\n    if ('category' in fieldValues)\r\n      temp.category = fieldValues.category ? '' : 'This field is required.'\r\n    setErrors({\r\n      ...temp,\r\n    })\r\n\r\n    if (fieldValues === values)\r\n      return Object.values(temp).every((x) => x === '')\r\n  }\r\n\r\n  const { values, setValues, errors, setErrors, handleInputChange, resetForm } =\r\n    useForm(\r\n      initialFieldValues,\r\n      validate,\r\n      props.setCurrentId,\r\n      props.setOpenPopup\r\n    )\r\n\r\n  const setDelivered = (fieldValues = values) => {\r\n    fieldValues.delivered = true\r\n  }\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault()\r\n    setDelivered()\r\n    if (validate()) {\r\n      const onSuccess = () => {\r\n        resetForm()\r\n        addToast('Submitted successfully', { appearance: 'success' })\r\n      }\r\n      if (props.currentId === 0) {\r\n        props.createGig(values, onSuccess)\r\n      } else {\r\n        props.updateGig(props.currentId, values, onSuccess)\r\n      }\r\n    } else {\r\n      setError(true)\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (props.currentId !== 0) {\r\n      setValues({\r\n        ...props.gigList.find((x) => x.gigId === props.currentId),\r\n      })\r\n      setErrors({})\r\n    }\r\n  }, [props.currentId, props.gigList, setErrors, setValues])\r\n  return (\r\n    <>\r\n      {error && (\r\n        <Message variant='danger'>\r\n          Something went wrong! Please try again!\r\n        </Message>\r\n      )}\r\n      <form\r\n        autoComplete='off'\r\n        noValidate\r\n        className={classes.root}\r\n        onSubmit={handleSubmit}\r\n      >\r\n        <Grid container>\r\n          If the Gig has been delivered, click on submit and if not, click the\r\n          upper red cross.\r\n          <Grid container justify='flex-end'>\r\n            <Button\r\n              variant='contained'\r\n              style={{ color: 'green' }}\r\n              type='submit'\r\n              className={classes.smMargin}\r\n            >\r\n              Submit\r\n            </Button>\r\n          </Grid>\r\n        </Grid>\r\n      </form>\r\n    </>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  gigList: state.gigs.list,\r\n})\r\n\r\nconst mapActionToProps = {\r\n  createGig: actions.create,\r\n  updateGig: actions.update,\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapActionToProps\r\n)(withStyles(styles)(SellersForm))\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst Rating = ({ value, text, color }) => {\r\n  return (\r\n    <div className='rating'>\r\n      <span>\r\n        <i\r\n          style={{ color }}\r\n          className={\r\n            value >= 1\r\n              ? 'fas fa-star'\r\n              : value >= 0.5\r\n              ? 'fas fa-star-half-alt'\r\n              : 'far fa-star'\r\n          }\r\n        ></i>\r\n      </span>\r\n      <span>\r\n        <i\r\n          style={{ color }}\r\n          className={\r\n            value >= 2\r\n              ? 'fas fa-star'\r\n              : value >= 1.5\r\n              ? 'fas fa-star-half-alt'\r\n              : 'far fa-star'\r\n          }\r\n        ></i>\r\n      </span>\r\n      <span>\r\n        <i\r\n          style={{ color }}\r\n          className={\r\n            value >= 3\r\n              ? 'fas fa-star'\r\n              : value >= 2.5\r\n              ? 'fas fa-star-half-alt'\r\n              : 'far fa-star'\r\n          }\r\n        ></i>\r\n      </span>\r\n      <span>\r\n        <i\r\n          style={{ color }}\r\n          className={\r\n            value >= 4\r\n              ? 'fas fa-star'\r\n              : value >= 3.5\r\n              ? 'fas fa-star-half-alt'\r\n              : 'far fa-star'\r\n          }\r\n        ></i>\r\n      </span>\r\n      <span>\r\n        <i\r\n          style={{ color }}\r\n          className={\r\n            value >= 5\r\n              ? 'fas fa-star'\r\n              : value >= 4.5\r\n              ? 'fas fa-star-half-alt'\r\n              : 'far fa-star'\r\n          }\r\n        ></i>\r\n      </span>\r\n      <span>{text && text}</span>\r\n    </div>\r\n  )\r\n}\r\n\r\nRating.defaultProps = {\r\n  color: '#f8e825',\r\n}\r\n\r\nRating.propTypes = {\r\n  value: PropTypes.number.isRequired,\r\n  text: PropTypes.string.isRequired,\r\n  color: PropTypes.string,\r\n}\r\n\r\nexport default Rating\r\n","import React, { useState, useEffect } from 'react'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport InfiniteScroll from 'react-infinite-scroll-component'\r\n\r\nimport * as actions from '../actions/gigs'\r\nimport {\r\n  Grid,\r\n  Paper,\r\n  TableContainer,\r\n  Table,\r\n  TableHead,\r\n  TableRow,\r\n  TableCell,\r\n  TableBody,\r\n  withStyles,\r\n  ButtonGroup,\r\n  Button,\r\n} from '@material-ui/core'\r\nimport SellerGigForm from './SellerGigForm'\r\nimport Rating from './Rating'\r\nimport ChatIcon from '@material-ui/icons/Chat'\r\nimport CheckCircleOutlineIcon from '@material-ui/icons/CheckCircleOutline'\r\nimport NotInterestedIcon from '@material-ui/icons/NotInterested'\r\nimport IconButton from '@material-ui/core/IconButton'\r\nimport MoreHorizIcon from '@material-ui/icons/MoreHoriz'\r\n\r\nimport { useToasts } from 'react-toast-notifications'\r\n\r\nimport Popup from './Popup'\r\n\r\nconst styles = (theme) => ({\r\n  root: {\r\n    '& .MuiTableCell-head': {\r\n      fontSize: '1.25rem',\r\n    },\r\n  },\r\n  paper: {\r\n    margin: theme.spacing(2),\r\n    padding: theme.spacing(2),\r\n  },\r\n})\r\n\r\nconst GigsList = ({ classes, ...props }) => {\r\n  const { addToast } = useToasts()\r\n  const history = useHistory()\r\n\r\n  const [currentId, setCurrentId] = useState(0)\r\n  const [openPopup, setOpenPopup] = useState(false)\r\n\r\n  useEffect(() => {\r\n    props.fetchAllGigs()\r\n  }, [props])\r\n\r\n  const onDelete = (id) => {\r\n    if (window.confirm('Are you sure to delete this record?'))\r\n      props.deleteGig(id, () =>\r\n        addToast('Deleted successfully', { appearance: 'info' })\r\n      )\r\n  }\r\n\r\n  const handleDelivered = (gigId, delivered) => {\r\n    if (!delivered) {\r\n      setCurrentId(gigId)\r\n      setOpenPopup(true)\r\n    } else {\r\n      addToast('Cannot change the status of a delivered gig!', {\r\n        appearance: 'info',\r\n      })\r\n    }\r\n  }\r\n\r\n  const chatWithBuyer = (sellerID, delivered) => {\r\n    if (!delivered) {\r\n      history.push({\r\n        pathname: '/sellerchat',\r\n        recieverId: sellerID,\r\n        senderId: props.senderId,\r\n      })\r\n    } else {\r\n      addToast('Chat option is disabled for delivered gigs!', {\r\n        appearance: 'info',\r\n      })\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Paper className={classes.paper} elevation={3}>\r\n      <Grid>\r\n        <Grid item xs={12}>\r\n          <InfiniteScroll dataLength={6} height={350}>\r\n            <TableContainer>\r\n              <Table>\r\n                <TableHead className={classes.root}>\r\n                  <TableRow>\r\n                    <TableCell>Start Date</TableCell>\r\n                    <TableCell>Deadline</TableCell>\r\n                    <TableCell>Category</TableCell>\r\n                    <TableCell>Description</TableCell>\r\n                    <TableCell>Delivered</TableCell>\r\n                    <TableCell>Gig Rating</TableCell>\r\n                  </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                  {props.gigList.map((record, index) => {\r\n                    if (record.sellerId === props.sellerId) {\r\n                      return (\r\n                        <TableRow key={index} hover>\r\n                          <TableCell>{record.startDate}</TableCell>\r\n                          <TableCell>{record.deadline}</TableCell>\r\n                          <TableCell>{record.category}</TableCell>\r\n                          <TableCell>{record.description}</TableCell>\r\n\r\n                          <TableCell>\r\n                            <IconButton\r\n                              style={{ marginRight: '10px' }}\r\n                              aria-label='delete'\r\n                              onClick={() => {\r\n                                handleDelivered(record.gigId, record.delivered)\r\n                              }}\r\n                            >\r\n                              {record.delivered ? (\r\n                                <CheckCircleOutlineIcon\r\n                                  style={{ color: 'green' }}\r\n                                />\r\n                              ) : (\r\n                                <NotInterestedIcon style={{ color: 'red' }} />\r\n                              )}\r\n                            </IconButton>\r\n                          </TableCell>\r\n                          <TableCell>\r\n                            {record.sellerRating === 0 ? (\r\n                              <MoreHorizIcon />\r\n                            ) : (\r\n                              <Rating value={record.sellerRating} />\r\n                            )}\r\n                          </TableCell>\r\n                          <TableCell>\r\n                            <ButtonGroup variant='text'>\r\n                              <Button>\r\n                                <ChatIcon\r\n                                  color={\r\n                                    record.delivered ? 'disabled' : 'action'\r\n                                  }\r\n                                  onClick={() =>\r\n                                    chatWithBuyer(\r\n                                      record.buyerId,\r\n                                      record.delivered\r\n                                    )\r\n                                  }\r\n                                />\r\n                              </Button>\r\n                            </ButtonGroup>\r\n                          </TableCell>\r\n                        </TableRow>\r\n                      )\r\n                    }\r\n                  })}\r\n                </TableBody>\r\n              </Table>\r\n            </TableContainer>\r\n          </InfiniteScroll>\r\n        </Grid>\r\n        <Popup\r\n          title='Gig Edit Form'\r\n          openPopup={openPopup}\r\n          setOpenPopup={setOpenPopup}\r\n        >\r\n          <SellerGigForm {...{ currentId, setCurrentId, setOpenPopup }} />\r\n        </Popup>\r\n      </Grid>\r\n    </Paper>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  gigList: state.gigs.list,\r\n})\r\n\r\nconst mapActionToProps = {\r\n  fetchAllGigs: actions.fetchAll,\r\n  deleteGig: actions.Delete,\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapActionToProps\r\n)(withStyles(styles)(GigsList))\r\n","import React, { useEffect, Fragment } from 'react'\r\nimport { useHistory } from 'react-router-dom'\r\n\r\nimport SellerNav from '../components/SellerNav'\r\nimport Footer from '../components/Footer'\r\nimport SellerGigList from '../components/SellerGigList'\r\n\r\nfunction SellerOrderpage() {\r\n  let history = useHistory()\r\n  const sellerId = history.location.state\r\n\r\n  const senderId = history.location.state\r\n  console.log(senderId)\r\n\r\n  useEffect(() => {\r\n    if (!history.location.state) {\r\n      history.push('/login')\r\n    }\r\n  }, [history.location.state])\r\n\r\n  return (\r\n    <Fragment>\r\n      <SellerNav {...{ sellerId }} />\r\n      <section className='container'>\r\n        <div>\r\n          <SellerGigList\r\n            sellerId={sellerId}\r\n            senderId={history.location.state}\r\n          />\r\n        </div>\r\n      </section>\r\n      <Footer />\r\n    </Fragment>\r\n  )\r\n}\r\nexport default SellerOrderpage\r\n","import React, { Fragment, useState, useEffect } from 'react'\r\nimport { useHistory } from 'react-router-dom'\r\n\r\nimport Button from '@material-ui/core/Button'\r\nimport CssBaseline from '@material-ui/core/CssBaseline'\r\nimport TextField from '@material-ui/core/TextField'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport Container from '@material-ui/core/Container'\r\n\r\nimport sendEmail from '../actions/Email'\r\nimport SellerNav from '../components/SellerNav'\r\nimport Footer from '../components/Footer'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: '100%', // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n}))\r\n\r\nconst ContactUs = () => {\r\n  const classes = useStyles()\r\n\r\n  const history = useHistory()\r\n  const sellerId = history.location.state\r\n\r\n  const [formData, setFromData] = useState({\r\n    subject: '',\r\n    email: '',\r\n    body: '',\r\n    signature: '',\r\n  })\r\n\r\n  const { subject, email, body, signature } = formData\r\n\r\n  const onChange = (e) =>\r\n    setFromData({ ...formData, [e.target.name]: e.target.value })\r\n\r\n  const onSubmit = async (e) => {\r\n    e.preventDefault()\r\n\r\n    sendEmail(subject, email, body, signature)\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (!history.location.state) {\r\n      history.push('/login')\r\n    }\r\n  }, [history.location.state])\r\n\r\n  return (\r\n    <Fragment>\r\n      <SellerNav {...{ sellerId }} />\r\n      <section className='container'>\r\n        <Container component='main' maxWidth='xs'>\r\n          <CssBaseline />\r\n          <div className={classes.paper}>\r\n            <img\r\n              src='https://dewey.tailorbrands.com/production/brand_version_mockup_image/765/4683342765_f43e76b4-4d93-4f52-b0e7-cc99ad1bf015.png?cb=1613721941'\r\n              alt='jobforme'\r\n            />\r\n\r\n            <form\r\n              className={classes.form}\r\n              noValidate\r\n              onSubmit={(e) => onSubmit(e)}\r\n            >\r\n              <TextField\r\n                variant='outlined'\r\n                margin='normal'\r\n                required\r\n                fullWidth\r\n                label='Subject'\r\n                type='text'\r\n                placeholder='Subject'\r\n                name='subject'\r\n                value={subject}\r\n                onChange={(e) => onChange(e)}\r\n                required\r\n              />\r\n              <TextField\r\n                variant='outlined'\r\n                margin='normal'\r\n                required\r\n                fullWidth\r\n                label='Email Address'\r\n                type='email'\r\n                placeholder='Email Address'\r\n                name='email'\r\n                value={email}\r\n                onChange={(e) => onChange(e)}\r\n                required\r\n              />\r\n              <TextField\r\n                variant='outlined'\r\n                margin='normal'\r\n                required\r\n                fullWidth\r\n                label='Enter your message body'\r\n                type='text'\r\n                placeholder='Enter your Message Body'\r\n                name='body'\r\n                value={body}\r\n                onChange={(e) => onChange(e)}\r\n                minLength='3'\r\n                multiline\r\n              />\r\n              <TextField\r\n                variant='outlined'\r\n                margin='normal'\r\n                required\r\n                fullWidth\r\n                label='Signature'\r\n                type='text'\r\n                placeholder='Signature'\r\n                name='signature'\r\n                value={signature}\r\n                onChange={(e) => onChange(e)}\r\n                required\r\n              />\r\n\r\n              <Button\r\n                type='submit'\r\n                fullWidth\r\n                variant='contained'\r\n                style={{ color: 'green' }}\r\n                className={classes.submit}\r\n              >\r\n                Send\r\n              </Button>\r\n            </form>\r\n          </div>\r\n        </Container>\r\n      </section>\r\n      <Footer />\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default ContactUs\r\n","import React, { useEffect, useState, Fragment } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { useToasts } from 'react-toast-notifications'\r\n\r\nimport { Grid, TextField, withStyles, Button } from '@material-ui/core'\r\nimport * as actions from '../actions/messages'\r\n\r\nimport Message from './Message'\r\n\r\nconst styles = (theme) => ({\r\n  root: {\r\n    '& .MuiTextField-root': {\r\n      margin: theme.spacing(1),\r\n      minWidth: '100%',\r\n    },\r\n  },\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    minWidth: '100%',\r\n  },\r\n  smMargin: {\r\n    margin: theme.spacing(1),\r\n  },\r\n})\r\n\r\nconst initialFieldValues = {\r\n  messageID: 0,\r\n  to: 0,\r\n  from: 0,\r\n  text: '',\r\n  sentAt: new Date(),\r\n}\r\n\r\nconst MessagesForm = ({ classes, ...props }) => {\r\n  const [values, setValues] = useState(initialFieldValues)\r\n  const [errors, setErrors] = useState({})\r\n  const [error, setError] = useState(false)\r\n  const { addToast } = useToasts()\r\n  console.log('from ' + props.senderId)\r\n  console.log('to ' + props.recieverId)\r\n\r\n  const validate = (fieldValues = values) => {\r\n    let temp = { ...errors }\r\n    if ('text' in fieldValues)\r\n      temp.text = fieldValues.text ? '' : 'This field is required.'\r\n    setErrors({\r\n      ...temp,\r\n    })\r\n\r\n    if (fieldValues === values)\r\n      return Object.values(temp).every((x) => x === '')\r\n  }\r\n\r\n  const handleInputChange = (e) => {\r\n    const { name, value } = e.target\r\n    const fieldValue = { [name]: value }\r\n    setValues({\r\n      ...values,\r\n      ...fieldValue,\r\n    })\r\n    validate(fieldValue)\r\n  }\r\n\r\n  const resetForm = () => {\r\n    setValues({\r\n      ...initialFieldValues,\r\n    })\r\n    setErrors({})\r\n  }\r\n\r\n  const setRecieverId = (fieldValues = values) => {\r\n    fieldValues.to = props.recieverId\r\n  }\r\n\r\n  const setSenderId = (fieldValues = values) => {\r\n    fieldValues.from = props.senderId\r\n  }\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault()\r\n    setSenderId()\r\n    setRecieverId()\r\n    if (validate()) {\r\n      const onSuccess = () => {\r\n        resetForm()\r\n        props.fetchAllMessages()\r\n        addToast('Submitted successfully', { appearance: 'success' })\r\n      }\r\n      if (props.currentId === 0) {\r\n        props.createMessage(values, onSuccess())\r\n        props.fetchAllMessages()\r\n      } else {\r\n        props.updateMessage(props.currentId, values, onSuccess())\r\n        props.fetchAllMessages()\r\n      }\r\n    } else {\r\n      setError(true)\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (props.currentId !== 0) {\r\n      setValues({\r\n        ...props.messageList.find((x) => x.messageId === props.currentId),\r\n      })\r\n      setErrors({})\r\n      props.fetchAllMessages()\r\n    }\r\n  }, [])\r\n\r\n  return (\r\n    <Fragment>\r\n      <section className='container'>\r\n        {error && (\r\n          <Message variant='danger'>\r\n            Something went wrong! Please try again!\r\n          </Message>\r\n        )}\r\n        <form\r\n          autoComplete='off'\r\n          noValidate\r\n          className={classes.root}\r\n          onSubmit={handleSubmit}\r\n        >\r\n          <Grid container>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                name='text'\r\n                variant='outlined'\r\n                label='Message'\r\n                value={values.text}\r\n                onChange={handleInputChange}\r\n                {...(errors.text && {\r\n                  error: true,\r\n                  helperText: errors.text,\r\n                })}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <div>\r\n                <Button\r\n                  variant='contained'\r\n                  style={{ color: 'green' }}\r\n                  type='submit'\r\n                  className={classes.smMargin}\r\n                >\r\n                  Send\r\n                </Button>\r\n              </div>\r\n            </Grid>\r\n          </Grid>\r\n        </form>\r\n      </section>\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  messageList: state.messages.list,\r\n})\r\n\r\nconst mapActionToProps = {\r\n  createMessage: actions.create,\r\n  updateMessage: actions.update,\r\n  fetchAllMessages: actions.fetchAll,\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapActionToProps\r\n)(withStyles(styles)(MessagesForm))\r\n","import React, { Fragment, useState, useEffect } from 'react'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\n\r\nimport {\r\n  Grid,\r\n  Paper,\r\n  TableContainer,\r\n  Table,\r\n  TableHead,\r\n  TableRow,\r\n  TableCell,\r\n  TableBody,\r\n  withStyles,\r\n  ButtonGroup,\r\n  Button,\r\n} from '@material-ui/core'\r\nimport DeleteIcon from '@material-ui/icons/Delete'\r\nimport { useToasts } from 'react-toast-notifications'\r\nimport InfiniteScroll from 'react-infinite-scroll-component'\r\n\r\nimport MessagesForm from '../components/SellerChat'\r\nimport * as actions from '../actions/messages'\r\nimport SellerNav from '../components/SellerNav'\r\nimport Footer from '../components/Footer'\r\n\r\nconst styles = (theme) => ({\r\n  root: {\r\n    '& .MuiTableCell-head': {\r\n      fontSize: '1.25rem',\r\n    },\r\n  },\r\n  paper: {\r\n    margin: theme.spacing(2),\r\n    padding: theme.spacing(2),\r\n  },\r\n})\r\n\r\nconst Messages = ({ classes, ...props }) => {\r\n  const { addToast } = useToasts()\r\n  let history = useHistory()\r\n  const recieverId = history.location.recieverId\r\n  const senderId = history.location.senderId\r\n  const sellerId = history.location.senderId\r\n\r\n  const [currentId, setCurrentId] = useState(0)\r\n\r\n  useEffect(() => {\r\n    if (!history.location.senderId) {\r\n      history.push('/login')\r\n    }\r\n    props.fetchAllMessages()\r\n  }, [props, history.location.senderId])\r\n\r\n  const onDelete = (id) => {\r\n    if (window.confirm('Are you sure to delete this record?'))\r\n      props.deleteMessage(id, () =>\r\n        addToast('Deleted successfully', { appearance: 'info' })\r\n      )\r\n    props.fetchAllMessages()\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n      <SellerNav {...{ sellerId }} />\r\n      <section className='container'>\r\n        <Paper className={classes.paper} elevation={3}>\r\n          <Grid item xs={12}>\r\n            <Grid\r\n              item\r\n              xs={12}\r\n              spacing={0}\r\n              direction='column'\r\n              alignItems='center'\r\n              justify='center'\r\n            >\r\n              <div>\r\n                <h1 className='large text-primary'>Chat with your Buyer!</h1>\r\n                <p className='lead'>\r\n                  <i className='fas fa-user'></i> Add you message in the below\r\n                  box\r\n                </p>\r\n              </div>\r\n\r\n              <InfiniteScroll dataLength={6} height={200}>\r\n                <TableContainer>\r\n                  <Table>\r\n                    <TableHead className={classes.root}>\r\n                      <TableRow></TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                      {props.messageList.map((record, index) => {\r\n                        if (\r\n                          record.from === senderId &&\r\n                          record.to === recieverId\r\n                        ) {\r\n                          return (\r\n                            <TableRow key={index} hover>\r\n                              <TableCell>Me:</TableCell>\r\n                              <TableCell>{record.text}</TableCell>\r\n                              <TableCell>{record.sentAt}</TableCell>\r\n                              <TableCell>\r\n                                <ButtonGroup variant='text'>\r\n                                  <Button>\r\n                                    <DeleteIcon\r\n                                      color='action'\r\n                                      onClick={() => {\r\n                                        onDelete(record.messageID)\r\n                                      }}\r\n                                    />\r\n                                  </Button>\r\n                                </ButtonGroup>\r\n                              </TableCell>\r\n                            </TableRow>\r\n                          )\r\n                        } else if (\r\n                          record.from === recieverId &&\r\n                          record.to === senderId\r\n                        ) {\r\n                          return (\r\n                            <TableRow key={index} hover>\r\n                              <TableCell>Customer:</TableCell>\r\n                              <TableCell>{record.text}</TableCell>\r\n                              <TableCell>{record.sentAt}</TableCell>\r\n                              <TableCell>\r\n                                <ButtonGroup variant='text'>\r\n                                  <Button></Button>\r\n                                </ButtonGroup>\r\n                              </TableCell>\r\n                            </TableRow>\r\n                          )\r\n                        }\r\n                      })}\r\n                    </TableBody>\r\n                  </Table>\r\n                </TableContainer>\r\n              </InfiniteScroll>\r\n\r\n              <MessagesForm\r\n                {...{ currentId, recieverId, senderId, setCurrentId }}\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n        </Paper>\r\n      </section>\r\n      <Footer />\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  messageList: state.messages.list,\r\n})\r\n\r\nconst mapActionToProps = {\r\n  fetchAllMessages: actions.fetchAll,\r\n  deleteMessage: actions.Delete,\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapActionToProps\r\n)(withStyles(styles)(Messages))\r\n","import { ACTION_TYPES } from '../actions/users'\r\n\r\nconst initialState = {\r\n  list: [],\r\n}\r\n\r\nexport const users = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case ACTION_TYPES.FETCH_ALL:\r\n      return {\r\n        ...state,\r\n        list: [...action.payload],\r\n      }\r\n\r\n    case ACTION_TYPES.CREATE:\r\n      return {\r\n        ...state,\r\n        list: [...state.list, action.payload],\r\n      }\r\n\r\n    case ACTION_TYPES.UPDATE:\r\n      return {\r\n        ...state,\r\n        list: state.list.map((x) =>\r\n          x.id === action.payload.id ? action.payload : x\r\n        ),\r\n      }\r\n\r\n    case ACTION_TYPES.DELETE:\r\n      return {\r\n        ...state,\r\n        list: state.list.filter((x) => x.id !== action.payload),\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n","import { ACTION_TYPES } from \"../actions/messages\";\r\n\r\nconst initialState = {\r\n  list: [],\r\n};\r\n\r\nexport const messages = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case ACTION_TYPES.FETCH_ALL:\r\n      return {\r\n        ...state,\r\n        list: [...action.payload],\r\n      };\r\n\r\n    case ACTION_TYPES.CREATE:\r\n      return {\r\n        ...state,\r\n        list: [...state.list, action.payload],\r\n      };\r\n\r\n    case ACTION_TYPES.UPDATE:\r\n      return {\r\n        ...state,\r\n        list: state.list.map((x) =>\r\n          x.id === action.payload.id ? action.payload : x\r\n        ),\r\n      };\r\n\r\n    case ACTION_TYPES.DELETE:\r\n      return {\r\n        ...state,\r\n        list: state.list.filter((x) => x.id !== action.payload),\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { ACTION_TYPES } from '../actions/gigs'\r\n\r\nconst initialState = {\r\n  list: [],\r\n}\r\n\r\nexport const gigs = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case ACTION_TYPES.FETCH_ALL:\r\n      return {\r\n        ...state,\r\n        list: [...action.payload],\r\n      }\r\n\r\n    case ACTION_TYPES.CREATE:\r\n      return {\r\n        ...state,\r\n        list: [...state.list, action.payload],\r\n      }\r\n\r\n    case ACTION_TYPES.UPDATE:\r\n      return {\r\n        ...state,\r\n        list: state.list.map((x) =>\r\n          x.id === action.payload.id ? action.payload : x\r\n        ),\r\n      }\r\n\r\n    case ACTION_TYPES.DELETE:\r\n      return {\r\n        ...state,\r\n        list: state.list.filter((x) => x.id !== action.payload),\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n","import { combineReducers } from 'redux'\r\n\r\nimport { users } from './users'\r\nimport { messages } from './messages'\r\nimport { gigs } from './gigs'\r\n\r\nexport default combineReducers({\r\n  users,\r\n  messages,\r\n  gigs,\r\n})\r\n","import { createStore, applyMiddleware } from \"redux\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport thunk from \"redux-thunk\";\r\nimport rootReducer from \"./reducers\";\r\n\r\nconst initialState = {};\r\n\r\nconst middleware = [thunk];\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  initialState,\r\n  composeWithDevTools(applyMiddleware(...middleware))\r\n);\r\n\r\nexport default store;\r\n","import React, { Fragment } from 'react'\r\nimport { Provider } from 'react-redux'\r\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom'\r\nimport { ToastProvider } from 'react-toast-notifications'\r\n\r\nimport LandingPage from './screens/LandingPage'\r\nimport LoginPage from './screens/LoginPage'\r\nimport RegisterPage from './screens/RegisterPage'\r\nimport ContactUsPage from './screens/ContactUsPage'\r\n\r\nimport BuyerChat from './screens/BuyerChatScreen'\r\n\r\nimport AdminPage from './screens/AdminLandingPage'\r\nimport Buyers from './screens/AdminBuyersList'\r\nimport Sellers from './screens/AdminSellersList'\r\nimport Admins from './screens/AdminAdminsList'\r\nimport AdminOrders from './screens/AdminOrdersList'\r\nimport AdminProfile from './screens/AdminProfile'\r\nimport AdminRegister from './screens/AdminRegister'\r\n\r\nimport OrderPage from './screens/BuyerLandingPage'\r\nimport YourOrdersBuyer from './screens/BuyerOrdersList'\r\nimport Seller from './screens/BuyerToSeller'\r\nimport BuyerProfile from './screens/BuyerProfile'\r\nimport Payment from './screens/BuyerPayment'\r\nimport BuyerContactUs from './screens/BuyerContactUs'\r\n\r\nimport SellerDashboard from './screens/SellerLandingPage'\r\nimport SellerProfile from './screens/SellerProfile'\r\nimport YourOrdersSeller from './screens/SellerOrderList'\r\nimport SellerContactUs from './screens/SellerContactUs'\r\nimport SellerChat from './screens/SellerChatScreen'\r\n\r\nimport './App.css'\r\n\r\nimport store from './store'\r\n\r\nconst App = () => (\r\n  <Provider store={store}>\r\n    <ToastProvider autoDismiss={true}>\r\n      <Router>\r\n        <Fragment>\r\n          <section className='landing-app'>\r\n            <Switch>\r\n              <Route exact path='/' component={LandingPage} />\r\n              <Route path='/login' component={LoginPage} />\r\n              <Route path='/register' component={RegisterPage} />\r\n              <Route path='/contact' component={ContactUsPage} />\r\n              <Route path='/admin' component={AdminPage} exact />\r\n              <Route path='/order' component={OrderPage} />\r\n              <Route path='/sellerdashboard' component={SellerDashboard} />\r\n              <Route path='/buyers' component={Buyers} />\r\n              <Route path='/sellers' component={Sellers} />\r\n              <Route path='/admins' component={Admins} />\r\n              <Route path='/adminorders' component={AdminOrders} />\r\n              <Route path='/adminprofile' component={AdminProfile} />\r\n              <Route path='/yourorders' component={YourOrdersBuyer} />\r\n              <Route path='/seller' component={Seller} />\r\n              <Route path='/buyerprofile' component={BuyerProfile} />\r\n              <Route path='/buyerchat' component={BuyerChat} />\r\n              <Route path='/payment' component={Payment} />\r\n              <Route path='/sellerprofile' component={SellerProfile} />\r\n              <Route path='/yourordersseller' component={YourOrdersSeller} />\r\n              <Route path='/buyercontact' component={BuyerContactUs} />\r\n              <Route path='/sellercontact' component={SellerContactUs} />\r\n              <Route path='/sellerchat' component={SellerChat} />\r\n              <Route path='/adminregister' component={AdminRegister} />\r\n            </Switch>\r\n          </section>\r\n        </Fragment>\r\n      </Router>\r\n    </ToastProvider>\r\n  </Provider>\r\n)\r\n\r\nexport default App\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport App from './App'\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n)\r\n"],"sourceRoot":""}